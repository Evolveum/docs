- id: '5.1'
  title: 'Policies for information security'
  type: [ 'preventive' ]
  comment: 'Information security policy (top management), topic-specific policies'
  necessity: optional
  features: [ 'reporting', 'simulation', 'audit-trail', 'application-inventory' ]
  igaCapabilities: [ 'identity-analytics' ]
  implementation:
      overview: >
          MidPoint can provide essential data for definition and maintenance of security policies.
      details: >
          MidPoint reporting can be used to extract information from identity data (identity analytics).
          Simulation capabilities can be used to predict the effect of proposed policies, especially for topic-specific policies.
# Example: report for topic-specific policy?

- id: '5.2'
  title: 'Information security roles and responsibilities'
  type: [ 'preventive' ]
  comment: 'RBAC, mostly for security personnel'
  necessity: necessary
  related: [ '5.1' ]
  features: [ 'rbac', 'role-governance', 'simulation', 'application-inventory', 'org', 'certification', 'escalation' ]
  igaCapabilities: [ 'policy-and-role-management' ]
  implementation:
      overview: >
          MidPoint provides essential management capabilities of roles and responsibilities by using its advanced role-based access control (RBAC) mechanisms.
      details: >
          Roles can be defined in midPoint, including all necessary privileges, role hierarchies, policies and descriptive data, especially for security personnel (e.g. security manager).
          Role governance can be managed in midPoint, recording role owners and approvers.
          Similar governance can be applied to application catalog, getting governance closer to assets.
          Organizational structure feature can be used to assign collective responsibilities, e.g. common responsibilities and privileges of security teams.
          Escalation capability can be used to maintain accountability of upper management, making sure that the delegated responsibilities are conducted in a timely manner.
          Simulation capability can be used to predict effect of role model changes.
      rationale: >
          MidPoint is necessary for consistent application of security roles and responsibilities.
          Security personnel often have elevated privileges.
          MidPoint can make sure the privileges are properly recorded, that they are automatically revoked when needed, that the privileges are regularly re-certified.
          While, in theory, this can be done manually, it is not practical and there may be issues in consistent management of privileges and their timely revocation.
# TODO: needs more work, compare with other RBAC-related controls
# Example: (with 5.15, 5.18) Role owners, application owners, Security office team, ???

- id: '5.3'
  title: 'Segregation of duties'
  type: [ 'preventive' ]
  comment: 'SoD'
  necessity: necessary
  features: [ 'sod', 'policy-rule', 'meta-role', 'gradual-policy-enforcement', 'approval-process', 'authorization', 'reporting' ]
  igaCapabilities: [ 'policy-and-role-management' ]
  igaFunctions: [ 'sod' ]
  implementation:
      overview: >
          MidPoint can manage, monitor and enforce segregation of duties (SoD) policies through the organization.
      details: >
          SoD policies can be defined on role level (role exclusion) or role-class level (meta-role), with selective enforcement.
          The policies can be enforced gradually, reporting policy violations first, gradually addressing them, applying full policy enforcement when all violations are addressed.
          SoD violations can be optionally driven through approval process to "legalize" them.
      rationale: >
          MidPoint is necessary, as SoD policy cannot be practically enforced manually on large number of roles, and large number of role assignment changes.
          SoD evaluation and enforcement must be automated to be practical.
      plan: >
          Add SoD widget to pre-configured Compliance dashboard.
          Create sample and docs configurations for gradual SoD enforcement.
# Example: SoD gradual enforcement: define SoD policy, report violations, set up dashboard, clean up violations, enforce the policy
# CONFIG: pre-configured reports: SoD policies (roles with SoD exclusions), SoD violations

- id: '5.4'
  title: 'Management responsibilities'
  type: [ 'preventive' ]
  necessity: not-applicable
  related: [ '6.3' ]

- id: '5.5'
  title: 'Contact with authorities'
  type: [ 'preventive', 'corrective' ]
  necessity: not-applicable
  related: [ '5.24', '5.28', '5.29', '5.30' ]

- id: '5.6'
  title: 'Contact with special interest groups'
  type: [ 'preventive', 'corrective' ]
  necessity: not-applicable
  related: [ '5.24', '5.28' ]

- id: '5.7'
  title: 'Threat intelligence'
  type: [ 'preventive', 'detective', 'corrective' ]
  necessity: marginal
  features: [ 'object-lifecycle', 'audit-trail', 'object-metadata', 'object-history', 'reporting' ]
  igaCapabilities: [ 'lifecycle' ]
  implementation:
      overview: >
          MidPoint can provide additional information for operational threat intelligence, such as current or past access rights of users affected by a threat.

- id: '5.8'
  title: 'Information security in project management'
  type: [ 'preventive' ]
  comment: 'Project management'
  necessity: necessary
  related: [ '5.12', '5.32', '8.26' ]
  features: [ 'org', 'archetype', 'delegated-administration', 'relation', 'authorization', 'information-classification' ]
  igaCapabilities: [ 'lifecycle', 'policy-and-role-management' ]
  igaFunctions: [ 'organizational-structure' ]
  implementation:
      overview: >
          MidPoint can manage projects as organizational units, including project governance information (managers, sponsors, reviewers).
      details: >
          Privileges necessary for project members and managers can be assigned automatically.
          As midPoint organizational structures act as roles (abstract roles), all necessary policies and privileges for project can be defined centrally (project meta-role or archetype) or on per-project level.
          Projects can be automatically represented by entitlements, e.g. automatically creating and managing Active Directory groups for projects.
          Information classification labels can be applied to projects, manually or automatically (
          Delegated administration can be used to allow project managers to control certain aspects of the projects (e.g. project name, description and membership).
      rationale: >
          MidPoint is necessary, as the project-related policies cannot be practically enforced manually on large number of roles, and large number of project membership changes.
          If not automated, access rights associated with the projects are usually assigned to users, and never removed.
          Retaining access rights related to closed projects and former project members usually result in  severe over-provisioning.
          Access control related to project management must be automated to be secure and practical.
      plan: >
          Add "project" as a built-in pre-configured archetype.
          Create sample and docs configurations for project management.
# Example: Project management: manage AD project groups, manage membership, authorizations for project manager to modify project (maybe members)

- id: '5.9'
  title: 'Inventory of information and other associated assets'
  type: [ 'preventive' ]
  comment: 'Asset management'
  necessity: optional
  related: [ '5.10', '5.12', '5.13' ]
  features: [ 'role-governance', 'application-inventory', 'relation' ]
  igaCapabilities: [ 'lifecycle' ]
  implementation:
      overview: >
          MidPoint can manage applications, roles and entitlements that are closely related to assets.
      details: >
          Application inventory capability of midPoint is essential first step to catalog assets.
          MidPoint capability to maintain various relations of objects can be used to track owners of applications, roles and other asset-related objects.
      plan: >
          Introduce "asset" as a first-class citizen in midPoint (later, in synergy with risk assessment).
# Example: Compliance dashboard: roles without owners, applications without owners, applications without classification.

- id: '5.10'
  title: 'Acceptable use of information and other associated assets'
  type: [ 'preventive' ]
  comment: 'Acceptable use of assets, informing users, recording access, marking and protecting media'
  necessity: optional
  related: [ '5.12', '5.18', '7.8', '7.10' ]
  features: [ 'object-lifecycle', 'audit-trail', 'object-metadata', 'object-history' ]
  implementation:
      overview: >
          Audit trail, object history and meta-data can be used to record access rights information.
      details: >
          MidPoint can use audit trail to record access rights of users that have or had access to assets.
          Object history feature can be used to reveal access rights or users related to an asset in the past.
          Information about the access rights and the reasons for assigning them are recorded in meta-data.
      plan: >
          Provide ability to inform user when gaining a privilege, asking user to confirm acceptance of terms before assigning the privilege.
# Example: audit log analysis?

- id: '5.11'
  title: 'Return of assets'
  necessity: marginal
  related: [ '5.18', '5.24', '7.14' ]
  comment: "license management? Device ownership tracking? \"Auth hardware\" - tokens"
  features: [ 'service', 'projection-link' ]
  implementation:
      overview: >
          MidPoint can record ownership of devices, tokens and licenses using the concept of "service".
      details: >
          Projection links can be used to link to device/token tracing in external systems (e.g. physical security systems).

- id: '5.12'
  title: 'Classification of information'
  type: [ 'preventive' ]
  comment: 'Establishing classification policy ("rules"), classification scheme, accountability of asset owners'
  necessity: optional
  related: [ '5.13', '5.14' ]
  # Strong?
  features: [ 'information-classification', 'role-governance', 'relation', 'policy-rule', 'archetype' ]
  implementation:
      overview: >
          MidPoint has a native information classification feature, which can be used to set up classification and clearance schemes.
      details: >
          There are pre-configured archetypes for classifications and clearances in midPoint, that can be used to build classification and clearance schemes.
          Policy rules can be used to set up requirements for individual classifications.
          Role governance features can be used to track owners accountable for assets - and even custodians for individual classifications and clearances.
      notes:
          - >
              Control for access control (5.15) asks for consistency between access rights and classification (controls 5.12, 5.13), which is given in midPoint by employing policy rules in classifications.
# Maybe add SANS example for classification?

- id: '5.13'
  title: 'Labelling of information'
  type: [ 'preventive' ]
  comment: 'Implementing classification policy ("rules"), using classification scheme on applications, roles, etc.'
  necessity: optional
  related: [ '5.12', '5.14' ]
  features: [ 'information-classification', 'application-inventory', 'assignment', 'rbac' ] # TODO: admin-gui?
  implementation:
      overview: >
          Applications can be classified using the defined classification scheme.
      details: >
          MidPoint can enforce classification policies using policy rule mechanism.
          Policy rules are applied transitively, even if classified applications are included in business roles.
      notes:
          - >
              Control for access control (5.15) asks for consistency between access rights and classification (controls 5.12, 5.13), which is given in midPoint by employing policy rules in classifications.
# TODO: waiting for better visibility of labels in GUI

- id: '5.14'
  title: 'Information transfer'
  type: [ 'preventive' ]
  comment: 'Limiting information transfer to third parties, e.g. allow access to information only to internal users and externals with NDA'
  necessity: optional
  related: [ '5.10', '5.12', '5.13', '5.31', '5.32', '5.33', '5.34', '8.7', '8.24' ]
  features: [ 'information-classification', 'policy-rule', 'rbac' ]
  implementation:
      overview: >
          MidPoint can use classifications and policy rules to limit and partially control information transfer.
      details: >
          Policy rules can prohibit access to internal information to external users, or it may require appropriate non-disclosure agreements in place (in a form of clearance).

- id: '5.15'
  title: 'Access control'
  type: [ 'preventive' ]
  comment: 'Umbrella control, referencing many other controls'
  necessity: necessary
  related: [ '5.3', '5.10', '5.12', '5.13', '5.16', '5.17', '5.18', '5.31', '5.32', '5.33', '5.34', '7.2', '7.3', '7.4', '8.2', '8.3', '8.4', '8.5', '8.18', '8.26' ]
  features: [ 'rbac', 'pdrbac', 'entitlement', 'role-wizard', 'delegated-administration', 'application-concept', 'meta-role', 'parametric-role', 'sod', 'information-classification', 'policy-rule', 'audit-trail', 'object-history', 'access-certification', 'micro-certification', 'role-governance', 'approval-process', 'applicable-policies', 'access-request-process', 'simulation' ]
  implementation:
      overview: >
          Policy-driven role-based access control mechanism of midPoint can be used as a solid framework for a topic-specific policy on access control, especially the Policy-driven RBAC mechanism.
      details: >
          MidPoint roles can determine entitlements used to enforce access control rules on a fine level.
          Role wizard can be used by owners of information to set up appropriate roles for controlling access to the information.
          Concept of application can be used to specify application-specific access control rules and policies.
          Segregation of duties (SoD) mechanism as well as other policy rules can be an integral part of access control policy, observing applicable legislation and contractual obligations.
          Access request process with appropriate approvals can be used to allow access in a controlled manner, certification mechanism can be used to review the access.
      notes:
        - >
            This is an "umbrella" control, setting a general access control requirements, referencing numerous other controls to fill in the details.
            Implementation details are provided in the description of referenced controls.
            See the list of related controls for more information.
        - >
            Control description mentions "roles" and RBAC as a suggestion for access control mechanism.
            It also mentions elements of dynamic access control, which is represented in midPoint by the policy-driven RBAC concept.
        - >
            Control description asks for consistency between access rights and classification (controls 5.12, 5.13), which is given in midPoint by employing policy rules in classifications.
        - >
            Role wizard, together with delegated administration capabilities, can be essential tools to delegate definition of role-based policies to the business users.
            MidPoint's ability to pre-define policies (a.k.a. "applicable policies") can be used to pre-package policy elements for business people to attach to roles they prepare.
        - >
            Simulation capability is a powerful tool to predict changes in access control policy, avoiding costly and dangerous disasters.
# TODO: "segregation of access control functions"
# TODO: need-to-know, need-to-use and least privilege principles
# Example: (with 5.18) delegate creation of business roles, using role wizard
# Example: (with 5.18) use "applicable policies" to set up access-and-approval scheme. Use pre-congifured policies for app-owner and role-owner approval, setup of approval by manager.

- id: '5.16'
  title: 'Identity management'
  type: [ 'preventive' ]
  comment: 'identity lifecycle, identifier management, correlation'
  necessity: necessary
  related: [ '5.17', '5.18', '5.19' ]
  features: [ 'identity-lifecycle', 'projection-link', 'provisioning', 'schema-activation', 'projection-policy', 'common-identity-model', 'iteration', 'sequence', 'expression', 'mapping', 'identity-repository', 'resource-schema', 'correlation', 'approval-process', 'nhi', 'assignment', 'rbac', 'audit-trail', 'object-metadata', 'assignment-metadata', 'value-metadata', 'access-certification', 'information-classification', 'access-request-process', 'schema-activation', 'entitlement', 'nhi' ]
  implementation:
      overview: >
          MidPoint platform with all of its features is designed to support identity management and all its aspects.
      details: >
          MidPoint can manage complete identity lifecycle, including both human and non-human identities.
          MidPoint can make sure that "unique identification of individuals and systems", as required by the control, is applied consistently and comprehensively.
          Features related to identity lifecycle management and synchronization are primary features to implement this control.
          Projection links, synchronization and correlation can be used to make sure the identities are not duplicated.
          Proper identity management mechanisms are applied to avoid use of shared identities.
          MidPoint is designed to fully address de-provisioning of access, as required by the control.
          Audit trail is used to record all identity-related events and configuration changes.
      notes:
          - >
              This is the primary control supporting deployment of midPoint in organizations.
              Almost all midPoint features are more or less related to this control.
          - >
              Requirements of this control reach beyond the scope of IGA, mostly to systems that act as a source of information for midPoint.
              E.g. the control asks for confirming of business requirements for an identity, verifying it and establishing an identity.
              When dealing with employee identities, this requirements is satisfied by the usual HR practices and processes.
              MidPoint is taking processed information from the HR systems, assuming that the requirements are already satisfied.
# TODO: application inventory as "unique identification of systems" (NHI)
# TODO: Example: synchronization with correlation

- id: '5.17'
  title: 'Authentication information'
  type: [ 'preventive' ]
  comment: 'mostly password management'
  necessity: necessary
  related: [ '6.2', '8.24' ]
  features: [ 'password-management', 'password-policy', 'audit-trail', 'self-service-gui', 'self-service-password-reset' ]
  implementation:
      overview: >
          MidPoint is designed to manage authentication information, especially passwords.
      details: >
          MidPoint is built to distribute authentication information to target systems, making sure that the passwords are strong and up-to-date.
          MidPoint self-service user interface can be used to manage authentication information by users, including interactive indication of password strength.
          Password complexity and lifetime policies can be specified, enforced and they can also be used to generate strong passwords.
          MidPoint can be used to quickly change password or deactivate accounts on all connected systems, in an event of password compromise.
          Events related to change of authentication information are recorded in audit trail.
      notes:
          - >
              This control is mostly about password management, it does not deal much with non-password authentication or credentials.
              ISO/IEC 24760 is referenced for that.
          - >
              MidPoint relies on cooperation of an access management (AM/SSO) system to implement most of the authentication and enforcement capabilities.
              MidPoint can manage authentication information, such as passwords or passkeys.
              However, midPoint cannot efficiently deal with authentication itself, or aspect of credential management related to authentication, such as forcing password change on next log-in.
              This functionality has to be implemented in close cooperation with the authentication system.
          - >
              Management of initial passwords and self-service password resets do not have any ideal solution.
              There are numerous trade-offs and compromises to be made.
              The solution has to be custom made for every organization or environment.
              Please see discussion document linked below for more details.
# Example: force password change for a large group of users after security incident?


- id: '5.18'
  title: 'Access rights'
  type: [ 'preventive' ]
  comment: 'Execution of access control policies: request, approval, certification'
  necessity: necessary
  related: [ '5.3', '5.9', '5.12', '5.15', '5.20', '6.1', '6.2', '6.4', '6.5', '6.6' ]
  features: [ 'provisioning', 'pdrbac', 'entitlement', 'access-request-process', 'approval-process', 'application-inventory', 'role-governance', 'access-certification', 'micro-certification', 'assignment', 'assignment-metadata', 'schema-activation', 'policy-rule', 'sod', 'information-classification', 'org', 'role-autoassignment', 'inducement', 'audit-trail', 'object-history' ]
  implementation:
      overview: >
          MidPoint is an essential component to make sure access to information is provisioned, reviewed, modified and removed in accordance with policies.
      details: >
          Access request and approval process can be used to request access, subject the request to appropriate approvals, and automatically provision the access.
          Temporal activation constraints ("from" and "to" timestamps) can be used to limit validity of the identity, as well as assignment of access rights to the identity.
          Certification capability can be used to review access rights at regular intervals.
          Moreover, midPoint automatically removes on inactivates access rights of entities who have left the organization.
          Application owners recorded in application inventory can be used as part of the access rights management, taking part in approval and review (certification) processes.
          MidPoint automatically evaluates all applicable policy rules, making sure that segregation of duties (SoD) and information classification rules are maintained.
          MidPoint naturally maintains a central record of all assigned access rights, including assignment meta-data: when was access requested, who has approved access, etc.
          Access rights can be automatically assigned and unassigned according to organizational structure membership, either by using inducement, or by using role autoassignment capability.
          Automatic review of access rights at the moment of organizational membership change can be implemented by micro-certification feature.
          All access right changes are recorded in the audit trail.
      notes:
          - >
              The control asks for consideration of reason of employment termination (among other aspects) for access rights de-provisioning.
              MidPoint is built to de-provision access rights immediately when it learns about employment change.
              However, HR data sources are often integrated using reconciliation, which may have significant time delays.
              Therefore, it should be considered to supplement reconciliation with live synchronization for the HR system.
              Alternatively, manual deactivation process should be established for users where the circumstances of termination of employment suggest elevated risk.
          - >
              The control suggests establishment of user access roles based on business requirements, also known as business roles.
              Role wizard, together with delegated administration capabilities, can be essential tools to delegate definition of business roles to the business users.
              This is yet another place in the standard that suggests use of RBAC.
          - >
              Control description describes access rights cloning (a.k.a. "assign rights as Mr. Smiths has") as an undesirable practice, recommending use of RBAC instead.
# Example: (with 5.15) Access request, approval of application owner, approval of role owner, approval of manager
# Example: (with 5.15) delegate creation of business roles, using role wizard
# Example: Certification campaigns. Maybe considering classification (privileged access rights certified more often).
# Example: inducement of access rights in orgstruct
# Example: micro-certification when org membership changes
# Example: manual deactivation of users, after high-risk termination of employment
# TODO: "segregating the roles of approval and implementation of the access rights"
# TODO: reason for termination

