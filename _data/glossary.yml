# TODO:
# Digital identity (expand)
# Schema
# (identity) synchronization (NOTE: we already have generic-synchronization)
# Identity analytics and intelligence
# PAM
# Data sources, authoritative data sources
# System of Record (SoR)
# SoD
# Persona
# SCIM
# Risk management, risk assessment
# Security program/process (vs security project)
# IAM program/process (vs IAM project)
# directory service (see data store)
# identity lifecycle
# accountability
# provenance (origin of data) - link to authenticity
# CIA triad
# non-human identities (NHI), alias: machine identity

# TODO: ISO27000
#   base measure
#   derived measure
#   indicator
#   information sharing community
#   measure
#   measurement
#   measurement function
#   measurement method
#   trusted information communication entity

# TODO: NIS2
#   'security of network and information systems' - ability, not activity
#   'large-scale cybersecurity incident'
#   'significant cyber threat'
#   'ICT product'
#   'ICT service'
#   'ICT process' - design, develop, deploy, maintain
#   'digital service' - cloud service, usually paid; also 'cloud computing service'

- id: abac
  term: Attribute-Based Access Control
  acronym: "ABAC"
  alternativeTerms: [ "Claims-based Access Control", "CBAC" ]
  description: >
      A mechanism for managing user access to information systems based on user attribute values.
      Attribute-Based Access Control (ABAC) evaluates access dynamically using an algorithm that takes 'attributes' as input and outputs an access decision (allow/deny).
      The attributes are usually user profile attributes, supplemented with context attributes such as time of access and the user's current location.
  example:
  seeAlso: [ "access-control" ]

- id: abstract-role
  term: Abstract Role
  midPointDescription: >
      Abstract role means any type of object that acts as a role.
      This means that abstract tole can be used to hold inducements, which give privileges to other objects.
      Role, org, service, archetype are abstract roles in midPoint.
  seeAlso: [ 'inducement', 'role', 'org', 'archetype' ]
  readMore: /midpoint/architecture/concepts/abstract-role/

- id: access-certification
  term: Access Certification
  alternativeTerms: [ "Access Re-certification", "Re-certification", "Attestation", "Access Review" ]
  description: >
    Access certification helps with management of access rights.
    These rights also called privileges, role assignments, authorities or authorizations need to be assigned to the right users in the right systems at the right time.
    Access Certification means reviewing the settings such as assignments of roles to users to make sure that employees have accesses to the systems they need.

    Certifications are often conducted in a form of certification campaigns, certifying access of many users in each campaign, distributing the work among many reviewers to keep amount of work per person reasonable.
    Despite that, the overall effort necessary for completion of certification campaign can be huge.
    Therefore, certification campaigns are being replaced by microcertifications, certifying specific users or privileges on as-needed basis.

    Access certification is often used to address over-provisioning of privileges, in a attempt to maintain the principle of least privilege.
  example: >
    An employee works as a manager of research department.
    He has access to various systems and databases.
    He gets promoted to senior management where he is assigned to a new working group and gets access to different resources.
    During access certification campaign the list of his privileges is reviewed and privileges which are not required anymore are removed.
  seeAlso: [ "least-privilege", "over-provisioning", 'microcertification' ]

- id: access-cloning
  term: Access Cloning
  alternativeTerms: [ "Access Rights Cloning", "Donor user" ]
  description: >
      Access cloning is a practice of assigning a user the same access rights as another user has.
      It is often used to provision new users with initial access rights, copying access rights of an existing donor user.

      Access cloning is an undesirable practice (see ISO/IEC 27002 5.18), as it often leads to over-provisioning.
      Even if the cloned access rights are justified, business role (RBAC) or similar mechanism should be used instead of cloning.
      Although the practice is generally undesirable, it is often employed due to its simplicity.
  seeAlso: [ "least-privilege", "over-provisioning", "rbac" ]

- id: access-control
  term: Access Control
  alternativeTerms:
  x1252Term: access control
  iso27000Term: access control
  description: >
      Access control is an abstract concept of controlling access of users to applications.
      It is a very broad and general term, however it usually refers to a mechanism to define and evaluate authorization policies.
      Two commonly-used access control mechanisms are role-based access control (RBAC) and attribute-based access control (ABAC).
  example:
  seeAlso: [ "rbac", "abac", "pbac" ]

- id: access-management
  term: Access Management
  acronym: "AM"
  alternativeTerms:
  description: >
    Access Management (AM) is a security discipline that provides access to authorised users to enter particular resources.
    It also prevents non-authorised users from accessing the resources.
    Thus the goal of Access Management is to unify the security mechanisms that take place when a user is accessing specific system or functionality.
    Single Sign-On (SSO) is sometimes considered to be a part of Access Management.
  example: >
    New employee is hired.
    He needs access to various resources like databases, servers or applications and is also added to various access groups according to his job role.
    Access Management system makes sure he gets the access on time and to needed systems. Thanks to AM, it is determined what is available there for him, which information or funcionality he sees and which parts of the system he can work with.

    Access Management is frequently called Identity Management, but these terms are not identical.
    Identity Management is about managing attributes related to the user such as username, fullName, location, telephone number or authorizations while Access Management is about evaluating attributes based on policies and making yes and no decisions.
  seeAlso:

- id: access-request
  term: Access Request Process
  alternativeTerms: [ 'Access Request Management' ]
  description: >
      Access request process is a business process used to request additional access or privileges for information systems and applications.
      It is usually a semi-manual process.
      It starts with a user requesting access or privileges for applications.
      The request is usually routed through approval steps.
      When approved, the access is provisioned.

      Access request is very frequently used to provide necessary access to users, addressing access under-provisioning situations.
      As clear and complete access control policy is usually not known, access request process is a practical measure to compensate for this limitation.
      In fact, the access request process is often over-used, leading to systematic over-provisioning of access.
      Access certification mechanisms are usually used to compensate such over-provisioning.
  seeAlso: [ 'identity-provisioning', 'under-provisioning', 'over-provisioning', 'access-certification']

- id: account
  term: Account
  alternativeTerms: [ "User account" ]
  description: >
    Data structure in a database, file or a similar data store that describes characteristics of a user of a particular system (resource).
    Accounts are used to control access of users to applications, databases and so on.
    Account is a persistent data record, stored in an application or a database.
    This term is usually not used to describe ephemeral information about user's identity, such as information temporarily stored only for the duration of user's session.
    Such information is often referred to as "principal".

    Account is different from a generic data record (e.g. "identity" or "principal").
    The purpose of account is to provide user's access to the system, generic data record may not provide such access.
  midPointDescription: >
    An account strictly means a data structure in source/target system (resource).
    Term "user" is used to describe a similar data structure in midPoint itself.
  example:
  seeAlso: [ 'user', 'principal' ]

- id: acl
  term: Access Control List
  acronym: ACL
  alternativeTerms:
  description: >
      Mechanism for controlling access to information system, based on a simple sequential list of access control instructions.
      Instructions in access control list are evaluated sequentially.
      If the instruction matches current access control situation (user, accessed object, operation), then the instruction is applied, either allowing or denying the access.

      There is no standardized form or language for access control lists and instructions, making ACLs not interoperable across implementations.
      There are also numerous variations to the basic idea, e.g. always evaluating entire list, deny instructions always taking precedence, and so on.
  example:
  seeAlso: [ 'access-control' ]

- id: active-directory
  term: Active Directory
  alternativeTerms:
  description: >
    An identity repository created by Microsoft that stores and arranges identity information.
    Based on this information, it provides access and permissions to users to enter particular resources and therefore improves organization’s security.
  example:
  seeAlso:

- id: agent
  term: Agent
  alternativeTerms:
  x1252Term: agent
  description: >
      Active entity, usually a software component that plays an active part.

      In identity management field, the term "agent" often means an active software component installed into a controlled system,
      used to mediate management of identities.
      It is similar in function to identity connector, however unlike the connector, the agent has to be installed into a controlled system.
  example:
  seeAlso: [ "identity-connector" ]
  upkeepStatus: orange

- id: anonymity
  term: Anonymity
  alternativeTerms:
  x1252Term: anonymity
  description: >
      A situation when an object cannot be distinguished from similar objects, where an identity of an object cannot be determined.
  example:
  seeAlso: [ "identity" ]
  upkeepStatus: orange

- id: api
  term: Application Programming Interface
  acronym: API
  alternativeTerms:
  description: >
      Set of procedures, functions or methods that can be used by another program or component.
      APIs are usually interfaces exposed by an application, meant to be used by other application.
      Therefore APIs are important integration points between applications and services.
      In the past, APIs were usually created as a programming language library, such as C or Java library.
      Since c. 2010, APIs usually take form of HTTP-based RESTful service.
  example:
  seeAlso: [ 'restful-service' ]

- id: archetype
  term: Archetype
  midPointDescription: >
      Archetype is a formal definition of object subtype in midPoint.
      Archetypes can give specific characters to basic midPoint types such as user, role or org.
      For example, archetypes can be used to further refine concept of user to represent employees, students, contractors and partners.
  readMore: /midpoint/reference/schema/archetypes/

- id: asset
  term: Asset
  alternativeTerms: [ 'Information asset' ]
  description: >
      Assert is an integral collection of information, data, systems, services, equipment, knowledge and any other means that provide value to an organization.
      It may take form of customer database, results of a research project, trade secret, proprietary software package, essential business process or any form that is considered valuable.
      Assets are subjects to risk, realized by threats exploiting asset vulnerabilities.
      Protection of assets is the primary objective of cybersecurity.
  example:
  seeAlso: [ "risk", "threat", 'vulnerability', 'risk-assessment' ]

- id: assignment
  term: Assignment
  midPointDescription: >
      Assignment is a relation that directly assigns privileges, organizational membership, policy elements or other midPoint concepts to assignment holder objects (usually users).
      Assignment is quite a rich, flexible and universal mechanism.
      Assignments can be conditional, there may be time constraints, parameters and other details specifying the relation between assignment holder (usually user) and target (usually role or org).
      Many types of objects can be a target of an assignment, allowing for a significant expressive power.
  seeAlso: [ 'inducement', 'assignment-holder', 'focus' ]
  readMore: /midpoint/reference/roles-policies/assignment/

- id: assignment-holder
  term: Assignment Holder
  midPointDescription: >
      An object that can hold assignments.
      Assignment holder can be considered a "source" of an assignment, a source of a relation that an assignmnt represents.
      Almost all object types in midPoint are assignment holder, capable of containing an assignment.
  seeAlso: [ 'assignment', 'focus' ]

- id: audit
  term: Audit
  alternativeTerms:
  iso27000Term: audit
  description: >
      Audit is an systematic and documented process for reviewing specific processes, organizations or regulatory compliance.
      It involves obtaining and objective processing of evidence, including evidence stored in special-purpose audit trails.
      Audit can be internal, conducted by an organization, reviewing its own processes or compliance.
      It can also be external, conducted by an independent trusted party.
  seeAlso: [ 'audit-trail' ]
  upkeepStatus: green

- id: audit-scope
  term: Audit scope
  alternativeTerms:
  iso27000Term: audit scope
  description: >
      Extent and boundaries of audit review.
  seeAlso: [ 'audit' ]
  upkeepStatus: green

- id: audit-trail
  term: Audit trail
  alternativeTerms: [ 'Audit log' ]
  description: >
      Audit trail is a record of essential information, meant to be used as an evidence in audit reviews.
      Audit trail is usually a structured, chronological record of operations or observations of an information system.
      It records important actions taken by users of the system, including actions taken by system administrators.
  seeAlso: [ 'audit' ]
  upkeepStatus: green

- id: authentication
  term: Authentication
  alternativeTerms:
  iso24760Term: authentication
  iso27000Term: authentication
  x1252Term: authentication
  description: >
    Authentication is a mechanism by which a computer system checks that the user is really the one she or he claims to be.
    Authentication can be implemented by a broad variety of mechanisms broadly divided into three categories:
    something you know, something you have, something you are.
    Traditionally, authentication is done by the means of by username and password.
    Authentication is often followed by authorization, however, authentication and authorization are two separate mechanisms.
  example: >
    An employee wants to log in to a working group.
    He provides his username and password.
    This data is compared with the information stored in the company’s database to see if it matches or not.
    This process is password-based authentication (something you know).
  seeAlso: [ 'identification', 'authorization', 'mfa' ]
  upkeepStatus: green

- id: authenticated-identity
  term: Authenticated Identity
  alternativeTerms: [ 'Authenticated user', 'Authenticated principal' ]
  iso24760Term: authenticated identity
  description: >
    ISO 24760 term, describing "identity information" created to record result of authentication.
    This may mean data such as authentication strength, timestamps and similar information.
    In software development, it is often referred to as "authenticated user" or "authenticated principal".
  example: >
  seeAlso: [ 'authentication', 'principal' ]

-   id: authenticator
    term: Authenticator
    alternativeTerms: [ 'Authentication token' ]
    iso24760Term: credential
    x1252Term: credential
    nist800633Term:  authenticator
    description: >
        Something the subject possesses and controls, which is used to prove the identity during authentication.
        Authenticator can be digital (information), physical (an object such as ID card or authentication device) or a combination of both (an ID card with a tamper-proof chip containing cryptographic keys).
        Perhaps the most common type of authenticator is a password.

        The term "authenticator" is closely related to term "credential" - which is even more confusing as many authenticators are also credentials.
        The difference is that credential is bound to the authenticated identity, while authenticator does not need to be.
        E.g. password is not inherently bound to authenticated identity, as the same password can be used to authenticate many identities at various sites.
        Therefore, strictly speaking, password is an authenticator but not a credential.
        On the other end, digital certificate (X.509) with associated private key is bound to a specific identity, therefore it is both an authenticator and a credential.
        There are also credentials that are not authenticators, such as records in the authentication database linking identity identifiers.
        However, in common usage, the term "credential" is often used to refer to authenticators as well.
    example:
        Password, PIN, passkey, secret key stored on smartcard, private key stored in a token, fingerprint.
        Physical authenticators includes various identification cards, such as national identification cards, club membership cards and so on.
        Even a username can be considered an authenticator, although such authentication is likely to be very weak.
    seeAlso: [ 'credential', 'password', 'passkey', 'pin', 'authentication' ]
    upkeepStatus: green

- id: authenticity
  term: Authenticity
  alternativeTerms:
  iso27000Term: authenticity
  description: >
      Authenticity is a property of a data, and also an assurance, that the data are valid and true.
      Simply speaking, it tells that data are what they claim to be.
      Authenticity may also mean assurance of data origin (provenance) and their integrity.
  seeAlso: [ 'integrity' ]
  upkeepStatus: green

- id: authorization
  term: Authorization
  alternativeTerms:
  x1252Term: authorization
  description: >
    Authorization is a mechanism by which a computer system determines whether to allow or deny specific action to a user.
    Authorization is often controlled by rather complex rules and algorithms, usually specified as part of an access control model.
    Authorization often follows (and required) authentication, however, authentication and authorization are two separate mechanisms.

    In rare cases, "authorization" is understood as a process of allowing access, granting permissions or giving approval.
    Such as "authorization" of a request to join a group.
  example: >
    An employee wants to access data of a working group he is assigned to.
    After successful authentication, the computer system that controls the data determines whether the user is part of the working group.
    As a member of the group the user can read and modify the data (operations are allowed)
    If the user tries to delete another user, the operation will be denied, because he is lacking administration authorizations.
  seeAlso: [ 'authentication', 'rbac', 'abac', 'coarse-grain-authorization', 'fine-grain-authorization', "access-control" ]
  upkeepStatus: green

- id: authorization-service
  term: Authorization Service
  alternativeTerms: [ 'Authorization Server' ]
  description: >
      A system that provides authorization information to an application.
      It usually makes a decision whether a specific operation should be allowed or denied by the application.
      I.e. authorization system is performing the authorization decision instead of the application.
      Authorization systems often use complex policy, user roles or additional attributes to make the decision.
      Authorization servers usually implement functionality of Policy Decision Point (PDP).
      Typical protocols and frameworks: XACML, Open Policy Agent (OPA), SAML authorization assertions, proprietary mechanisms
  example:
  seeAlso: [ 'authorization' ]
  upkeepStatus: green

- id: availability
  term: Availability
  alternativeTerms: [ 'Service availability' ]
  description: >
      Availability is a property of network service or information system, ensuring that all the necessary functions are available to the user.
      I.e. it is a property that ensures that systems and the data are available to users as intended, that the service is not interrupted by an attacker.

      Availability, together with confidentiality and integrity form a "CIA triad", a classical model of information security (cybersecurity).
  seeAlso: [ 'confidentiality', 'integrity' ]
  upkeepStatus: green

- id: biometrics
  term: Biometrics
  alternativeTerms: [ 'Biometric authentication' ]
  x1252Term: biometric recognition
  description: >
      Automated recognition of persons, based on their biological or behavioral characteristics.
  example:
  seeAlso: [ 'authentication' ]
  upkeepStatus: green

- id: birthright
  term: Birthright
  alternativeTerms: [ 'Birthright provisioning' ]
  description: >
      Privileges or access granted to users based on their inherent characteristic, such as user type (employee, contractor, student).
      It also includes a set of privileges automatically given to all users ("all users" access).
      Privileges and access that are automatically assigned due to organizational structure membership (e.g. access to departmental systems) is sometimes also considered to be a birthright.
  midPointDescription: >
      Archetypes are usually used to manage birthright in midPoint, by placing appropriate inducements in archetype definition.
      Birthright originating from organizational structure can be implemented by placing inducements in organizational units (orgs).
  example: >
      All users are automatically granted access to user profile management application.
      All employees are automatically assigned an Active Directory access and an e-mail account.
  seeAlso: [ 'identity-provisioning', 'archetype', 'org', 'inducement' ]
  upkeepStatus: green

- id: blinded-affirmation
  term: Blinded Affirmation
  alternativeTerms:
  iso24760Term: blinded affirmation
  description: >
      A method to provide strictly limited information to another party, without revealing any unintended information.
      Blinded affirmation is often used to demonstrate that a certain user is a member of an organization, without revealing any additional information about the user to a third party.
      Blinded affirmation usually relies on ephemeral identifiers or pseudonyms.
  example:
  seeAlso: [ "ephemeral-identifier", "pseudonym" ]
  upkeepStatus: green

- id: certificate-authority
  term: Certificate Authority
  acronym: CA
  alternativeTerms:
  description: >
      Entity that issues digital certificates.
      Certificate authority is usually a trusted third party, certifying correctness of the data presented in certificates that it issues.
      The most common form of certificate authority is an authority that issues X.509 digital certificates, containing public keys.
      Certificate authority signs the certificates, thus certifying that a specified public key belongs to a specified identity.
  example:
  seeAlso: [ 'digital-certificate', 'trusted-third-party' ]
  upkeepStatus: green

- id: claim
  term: Claim
  description: >
      Statement about an entity, provided in a form which can be verified by other parties.
      Verification of a claim provides reliable information about the entity that created the claim (issuer), and it provides assurance that the claim content was not modified.
      However, claim verification does not provide assurance that a claim is correct, or that it is an unquestionable truth.
      Technically, claims are often digital identity attributes, secured by cryptography mechanisms for network transfer.
  example:
  seeAlso: [ 'digital-identity-attribute', 'triangle-of-trust', 'issuer', 'holder', 'verifier' ]
  upkeepStatus: green

- id: clockwork
  term: Clockwork
  alternativeTerms:
  midPointDescription: >
      MidPoint component responsible for evaluation of lifecycle, activation, object templates, assignments, roles, policies, mappings and many other aspects of midPoint configuration.
      Clockwork is the main workhorse of midPoint synchronization, making sure that objects are properly recomputed and policies are enforced.
      It also computes the data for synchronization, both in inbound and outbound direction.
  seeAlso:
  readMore: /midpoint/reference/concepts/clockwork/clockwork-and-projector/

- id: cloud-computing
  term: Cloud Computing
  alternativeTerms:
  description: >
    Internet-based computing when resources like storage, applications or servers are used by organizations or users via Internet.
    Data could be accessed any time from any place, without any installations and is stored and processed in third-party data centers which could be located anywhere in the world.
    Cloud computing is considered to lower organization’s costs by avoiding the need of purchasing servers as well as to speed up the processes with less maintenance needed.
    Due to data being centralized at one place, it is considered to be secure and easily shared across bigger amount of users.
  example: >
    Company creates construction machines.
    It has factories at more places in the world. It uses cloud storage to store the construction documents and instructions.
    This data can be accessed by employees in all its factories simply via Internet.
  seeAlso:

- id: coarse-grain-authorization
  term: Coarse-grain Authorization
  alternativeTerms:
  description: >
      Authorization concerning big architectural blocks, such as entire applications or systems.
      E.g. coarse-grain authorization usually decides whether a user can access an application, or access should be denied, without providing any additional details.
      Coarse-grained authentication is usually being made at the "perimeter" of the system, e.g. by infrastructure components, when a user is accessing an application.
      Typically, this authorization is based on simple policy rules, such as a role or group assigned to the user.
  example:
  seeAlso: [ 'authentication', 'fine-grain-authorization' ]
  upkeepStatus: green

- id: competence
  term: Competence
  alternativeTerms: [ 'Capability' ]
  iso27000Term: competence
  description: >
      Ability to perform certain function, or to achieve intended results.
      It may refer to the ability of people, an ability to apply knowledge, skills and effort to reach results.
      It may also apply to systems, describing an ability of the system to perform functions to achieve results.
  seeAlso:
  upkeepStatus: green

- id: compliance
  term: Compliance
  alternativeTerms: [ 'Conformity' ]
  iso27000Term: conformity
  description: >
      Fulfillment of a requirement, or a system of requirements.
      It usually refers to conformity with a regulation, or an industry standard.

      In identity and access management (IAM) field, the term "compliance" may refer to a set of IAM platform features that aid with regulation and standards compliance.
  seeAlso:
  upkeepStatus: yellow

- id: confidentiality
  term: Confidentiality
  alternativeTerms: [ 'Secrecy' ]
  iso27000Term: confidentiality
  description: >
      Confidentiality is a property of communication channel or data, ensuring that they are available only to intended actors.
      I.e. it is a property that ensures that the data are seen only by communicating parties, and no other party can access and read the data.
      Confidentiality is usually implemented by using encryption.

      Confidentiality, together with integrity and availability form a "CIA triad", a classical model of information security (cybersecurity).
  seeAlso: [ 'availability', 'integrity' ]
  upkeepStatus: green

- id: connid
  term: ConnId
  alternativeTerms: [ "ConnId Framework" ]
  description: >
      ConnId is an open source identity connector framework project.
      It originated from Identity Connector Framework (ICF) developed by Sun Microsystems in late 2000s.
      ConnId is now an independent open source project, used by several identity management platforms.
  seeAlso: [ "identity-connector", "identity-connector-framework" ]

- id: consent-for-personal-data-processing
  term: Consent for Personal Data Processing
  alternativeTerms: [ "Consent" ]
  description: >
      Consent for personal data processing is given by a user, to indicate agreement for processing of personal data.
      In personal data protection frameworks (such as GDPR), consent has a strict structure, it is given for a very specific processing scope.
      Consent can be revoked by the user any time.
      Consent is just one of several personal data processing bases (lawful bases).
      Consent is perhaps the most well know, and also the most misused basis for personal data processing.
  seeAlso: [ "personal-data-protection", "personal-data-processing-basis", "gdpr" ]

- id: consequence
  term: Consequence
  alternativeTerms: [ 'Outcome', 'Result' ]
  iso27000Term: consequence
  description: >
      Outcome of an event or an activity.
  seeAlso: [ 'event' ]
  upkeepStatus: red

- id: continual-improvement
  term: Continual improvement
  alternativeTerms:
  iso27000Term: continual improvement
  description: >
      Continuous or recurring activity to enhance performance or results.
  seeAlso:
  upkeepStatus: yellow

- id: control
  term: Control
  alternativeTerms: [ 'Countermeasure', 'Cybersecurity measure', 'Measure' ]
  iso27000Term: control
  description: >
      Control is a measure that affects risk.
      Controls are used in security management programs to lower risk, and manage overall and residual risks.
      Controls may take variety of forms, including processes, technology, policies and people,
  seeAlso:
  upkeepStatus: yellow

- id: control-objective
  term: Control objective
  alternativeTerms:
  iso27000Term: control objective
  description: >
      Control objective is an intended effect of an control.
      It is a description of the effect that a control should have when implemented.
  seeAlso: [ 'control' ]
  upkeepStatus: yellow

- id: corrective-action
  term: Corrective action
  alternativeTerms:
  iso27000Term: corrective action
  description: >
      Corrective action is an action to eliminate causes of non-compliance and prevent recurrence.
      Unlike remediation (correction) which is focused on correcting the effects, corrective action aims at correction of the causes (e.g. updating the policy).
  seeAlso: [ 'compliance', 'remediation' ]
  note: "Taken ISO27000 term, even though there may be overlap with remediation. Maybe we need better term?"
  upkeepStatus: yellow

- id: credential
  term: Credential
  alternativeTerms: [ 'Digital credential', 'Credentials' ]
  iso24760Term: credential
  x1252Term: credential
  nist800633Term:  authenticator
  description: >
      Information used to prove the identity of a subject during authentication, which is bound to that particular identity.
      Credentials can be digital (information), physical (an object such as ID card) or a combination of both (an ID card with a tamper-proof chip containing cryptographic keys).
      Perhaps the most common type of digital credential is a password-based credential.

      The term "credential" is closely related to term "authenticator" - which is even more confusing as many authenticators are also credentials.
      The difference is that credential is bound to the authenticated identity, while authenticator does not need to be.
      E.g. password is not inherently bound to authenticated identity, as the same password can be used to authenticate many identities at various sites.
      Therefore, strictly speaking, password is an authenticator but not a credential.
      However, when password is established as a shared secret at a particular site, and bound to a particular identity in that site's authentication database, a password-based credential is created.
      On the other end, digital certificate (X.509) with associated private key is bound to a specific identity, therefore it is both an authenticator and a credential.
      There are also credentials that are not authenticators, such as records in the authentication database linking identity identifiers.
      However, in common usage, the term "credential" is often used to refer to authenticators as well.
  example:
      Established password, PIN, passkey, secret key stored on smartcard, private key stored in a token, fingerprint or similar authenticator, when bound to a particular identity.
      Physical credential includes various identification cards, such as national identification cards which provides information and proof of citizen identity.
      Even a plain username can be considered a credential, although such authentication is likely to be very weak.
  seeAlso: [ 'authenticator', 'password', 'passkey', 'pin', 'authentication' ]
  upkeepStatus: green

- id: credential-issuer
  term: Credential Issuer
  alternativeTerms:
  iso24760Term: credential issuer
  description: >
      An entity that creates and provisions credentials to entities.
  example: >
      Government agency responsible for issuing national identity cards.
      Certificate authority, generating a digital certificate for a subject.
      Generator of random initial password, storing the password in identity data store.
  seeAlso: [ 'credential', 'issuer', "trust-service" ]
  upkeepStatus: green

- id: credential-service-provider
  term: Credential Service Provider
  acronym: CSP
  alternativeTerms:
  iso24760Term: credential service provider
  description: >
      ISO 24760 term, describing an entity responsible for management of credentials in a domain.
  example:
  seeAlso: [ 'credential' ]
  upkeepStatus: green

- id: cross-domain
  term: Cross-domain
  alternativeTerms:
  description: >
      Anything that involves interaction between two or more domains.
      Specifically in context of identity and access management, it usually means transfer of information between domains that are under separate control,
      or transfer of information that needs to be somehow limited (e.g. only a subset of attributes is transferred).

      Cross-domain techniques employ special mechanism to protect the information, or to make transfer between domains more reliable or secure.
      For example, special identifiers (often ephemeral pseudonyms) are used to refer to identity data.
  example:
  seeAlso: [ 'domain', 'identity-provider', 'relying-party', 'identity-federation' ]
  upkeepStatus: green

- id: cyberattack
  term: Cyberattack
  alternativeTerms: [ 'Cyber attack' ]
  iso27000Term: attack
  description: >
      Cyberattack is a an intentional effort to steal, destroy, expose, alter, disable or gain unauthorized access to information systems and data (information asset).
      Cyberattack is a cybersecurity breach.
  example:
  seeAlso: [ 'cybersecurity', 'cybersecurity-incident' ]
  upkeepStatus: yellow

- id: cybersecurity
  term: Cybersecurity
  alternativeTerms: [ 'Information security' ]
  iso27000Term: information security
  nis2Term: cybersecurity
  description: >
      Cybersecurity is a protection of information systems, usually focused on systems connected to the Internet.
      It is a broad practice, including protection of systems, networks, software and data.
      It involves technology as well as people, policies and processes.
      Cybersecurity is a continuous, never-ending effort to make the systems secure, and keep them secure.
      Most comprehensive and systematic cybersecurity techniques are based on risk-based approach.
  example:
  seeAlso: [ 'cybersecurity-governance', 'cyberattack', 'risk-based-approach' ]
  upkeepStatus: yellow

- id: cybersecurity-event
  term: Cybersecurity event
  alternativeTerms: [ 'Information security event' ]
  iso27000Term: information security event
  description: >
      Cybersecurity event is a event affecting cybersecurity of an organization.
      It is an occurrence of system, service or network state, indicating possible breach of information security.
  example:
  seeAlso: [ 'event', 'cybersecurity-incident', 'cyberattack' ]
  upkeepStatus: yellow

- id: cybersecurity-governance
  term: Cybersecurity governance
  alternativeTerms: [ 'Information security governance' ]
  iso27000Term: governance of information security
  description: >
      Cybersecurity governance is a set of systematic activities to direct and control implementation of cybersecurity.
      Governance is a process of setting up and maintaining policies and rules to govern cybersecurity activities.
      It includes cybersecurity programs, policies, processes, decision-making hierarchies, mitigation plans, cybersecurity systems and especially oversight processes and procedures.
      Cybersecurity governance assumes existence and systemic application of cybersecurity strategy.
  example:
  seeAlso: [ 'cybersecurity', 'isms', 'cybersecurity-resilience', 'risk-management' ]
  upkeepStatus: yellow

- id: cybersecurity-incident
  term: Cybersecurity incident
  alternativeTerms: [ 'Information security incident', 'Incident' ]
  iso27000Term: information security incident
  nis2Term: incident
  description: >
      Cybersecurity incident is unwanted or unexpected cybersecurity event, impacting cybersecurity of an organization.
      Cyberattack is the usual type of cybersecurity incidents.
      Cybersecurity incidents include situations, where security breach cannot be proven, however there is a siginificant probability that security of information and systems might have been affected.
  example:
  seeAlso: [ 'event', 'cybersecurity-event', 'cyberattack', 'cybersecurity-incident-management' ]
  upkeepStatus: yellow

- id: cybersecurity-incident-management
  term: Cybersecurity incident management
  alternativeTerms: [ 'Information security incident management', 'Incident management' ]
  iso27000Term: information security incident management
  nis2Term: incident handling
  description: >
      Cybersecurity incident management is set of processes and systems to manage cybersecurity incidents.
      It includes detection, recording, reporting, assessing and responding to incidents.
      Cybersecurity incident management systems are also used to learn from the incidents, with the goal to improve information security management system (ISMS).
  example:
  seeAlso: [ 'cybersecurity-incident' ]
  upkeepStatus: yellow

- id: cybersecurity-professional
  term: Cybersecurity professional
  alternativeTerms: [ 'Information security professional', 'ISMS professional', 'Information security practitioner' ]
  iso27000Term: information security professional
  description: >
      Cybersecurity professional is a competent person who implements, maintains and improves cybersecurity practices.
  example:
  seeAlso: [ 'cybersecurity', 'cybersecurity-governance' ]
  upkeepStatus: yellow

- id: cybersecurity-resilience
  term: Cybersecurity resilience
  alternativeTerms: [ 'Information security resilience', 'Information security continuity' ]
  iso27000Term: information security continuity
  description: >
      Cybersecurity resilience is a combination of processes, procedures and governance measures to ensure continuous operation of cybersecurity mechanism.
      It includes mechanisms to maintain appropriate levels of cybersecurity, as well as necessary improvement of cybersecurity measures to reflect increased threats.
  example:
  seeAlso: [ 'cybersecurity', 'cybersecurity-governance' ]
  upkeepStatus: yellow

- id: cybersecurity-standard
  term: Cybersecurity standard
  alternativeTerms: [ 'Information security standard' ]
  iso27000Term: security implementation standard
  description: >
      Cybersecurity standard is a formal specification describing requirements and methods for appropriate implementation of cybersecurity.
  example:
  seeAlso: [ "compliance", "risk-criteria" ]

- id: cyber-hygiene
  term: Cyber hygiene
  alternativeTerms: [ 'Digital hygiene' ]
  description: >
      Cyber hygiene is a cybersecurity principle and/or practice.
      As an analogy to personal hygiene, cyber hygiene requires users to establish routine measures to minimize their cybersecurity risk.
      It often refers to personal cybersecurity routines such as proper password management, malware protection and data back-up.
      However, in a broader organizational scope, it also includes infrastructural cybersecurity measures, such as zero-trust principles,
      software updates, device configuration, network segmentation, identity and access management and user awareness trainings.
  example:
  seeAlso: [ 'zero-trust' ]
  upkeepStatus: green

- id: data-governance
  term: Data Governance
  alternativeTerms:
  description: >
      Data governance is a data management concept aimed at maintenance of high data quality, through management of data lifecycle and implementation of appropriate data quality controls.
      Identity governance and administration (IGA) field is concerned with governance of identity data.
  example:
  seeAlso: [ 'data-provenance', 'data-minimization', 'metadata', 'iga', 'privacy' ]

- id: data-minimization
  term: Data Minimization
  alternativeTerms: [ 'Minimization' ]
  x1252Term: data minimization
  description: >
      A process of reducing the amount of data to the necessary minimum required for processing.

      Data minimization often takes place in context of privacy and personal data protection, minimizing identity data to the necessary minimum.
  example:
  seeAlso: [ 'privacy', 'personal-data-protection', 'data-governance' ]
  upkeepStatus: green

- id: data-origin
  term: Data Origin
  alternativeTerms: [ "Origin", "Domain of Origin" ]
  iso24760Term: "domain of origin"
  description: >
      Organization or entity that have created or assigned a particular value.
      Origin is often part of data provenance, description of the method how a value was acquired by a system.

      Origin may be relative, describing only an immediate origin of the information, a "previous hop, a system that have relayed the information to our system.
      Such origin may not have created or assigned the information, it may have only relayed or copied the information originated in a third system.
      Origin is often recorded in a form of metadata.
  example:
  seeAlso: [ 'digital-identity-attribute', 'data-provenance' ]
  upkeepStatus: green

- id: data-provenance
  term: Data Provenance
  alternativeTerms: [ "Provenance" ]
  description: >
      Description of the method how a value was acquired by a system.
      Provenance information almost always contains description of data origin.
      It is supplemented by additional information, such as timestamps and assurance information.

      Provenance may be relative, describing only an immediate origin of the information, a "previous hop, a system that have relayed the information to our system.
      In other cases, provenance information may include a complete path from the ultimate origin of the information, describing all the systems that it has passed and all the transformations that were applied.
      Provenance is often recorded in a form of metadata.
  example:
  seeAlso: [ 'data-origin', 'metadata', 'data-governance' ]

- id: decentralized-identifier
  term: Decentralized Identifier
  acronym: DID
  alternativeTerms:
  x1252Term: decentralized identifier
  description: >
      An identifier that does not require centralized registration authority.
      Technologies supporting decentralized identifiers vary, many of them are based on distributed ledger technologies (e.g. blockchain).
  example:
  seeAlso: [ 'decentralized-identity', 'self-sovereign-identity' ]
  upkeepStatus: green

- id: decentralized-identity
  term: Decentralized Identity
  acronym: DID
  alternativeTerms:
  description: >
      An identity that does not require centralized registration authority, identity provider, identity data store or any other centralized system to function.
      Decentralized identity systems are usually built to be self-sovereign.
  example:
  seeAlso: [ 'decentralized-identifier', 'self-sovereign-identity', 'verifiable-credentials' ]
  upkeepStatus: green

- id: delegated-administration
  term: Delegated Administration
  alternativeTerms:
  description: >
    Type of administration where chosen users have administrator permissions.
    They can manage other users, create passwords for them, move them into groups, assign them roles, etc.
  example: >
    John is responsible for a research project group.
    He adds new users to the group, assigns roles to specific users and also deals with the issues inside the group.
    Thanks to delegated administration, a company is able to be more effective as the work process around maintenance of groups is reduced.
  seeAlso:

- id: delta
  term: Delta
  alternativeTerms: [ 'Prism Delta' ]
  midPointDescription: >
      Delta is a data structure describing a change in data.
      It describes the data items (and values) that were added, removed or replaced.
      Delta is a relativistic data structure, it contains only the data that were changed.
  seeAlso: [ 'prism' ]
  readMore: /midpoint/devel/prism/concepts/deltas/

- id: digital-identity
  term: Digital Identity
  alternativeTerms: [ "Identity", "Network Identity", "User Profile" ]
  iso24760Term: identity information
  x1252Term: digital identity
  description: >
      Digital representation of identity:
      set of characteristics, qualities, believes and behaviors of en entity, usually represented as a set of attributes.
      Digital identity forms unique representation of a subject engaged in an online transaction.
      While digital identity is always unique in the context of a digital service, but does not necessarily need to be traceable back to a specific real-life subject (linkability).

      Digital identity should not be confused with identifier.
      Digital identity is a set of characteristics (complex data), while identifier is (usually simple) value used to refer to digital identity.
  example:
  seeAlso: [ "identity", "digital-identity-attribute", "entity", "linkability" ]
  upkeepStatus: orange
  todo: "explain the richer digital identity meaning, as a set of self-service features"

- id: digital-identity-attribute
  term: Digital Identity Attribute
  alternativeTerms: [ "Attribute" ]
  iso24760Term: attribute
  x1252Term: attribute
  description: >
      A value representing a characteristic or property of an entity.
      An attribute is a part of digital identity.
  example:
      Name of a person, telephone number, device location, organization postal address.
  seeAlso: [ "digital-identity", "identifier", "entity", "claim" ]
  upkeepStatus: green

- id: digital-certificate
  term: Digital Certificate
  alternativeTerms: [ 'Certificate' ]
  x1252Term: certificate
  description: >
      Digital document, containing an information protected by cryptographic means.
      Digital certificates are usually used to bind an information to a digital identity.
      Perhaps the most common use of certificates are certificates of public keys, binding public key to identity of the owner, signed by a trusted third party (certificate authority).
      The most prominent specification of a format of such digital certificate is X.509.
  example:
  seeAlso: [ 'certificate-authority', 'trusted-third-party' ]
  upkeepStatus: green

- id: digital-wallet
  term: Digital Wallet
  acronym:
  alternativeTerms:
  description: >
      Physical or virtual device designed to securely store small amount of sensitive information, usually storing credentials.
      Digital wallets can have variety of forms, ranging from tamper-proof physical devices, to simple programming libraries.
      It is expected that appropriate level of mechanisms to protect the data exist in all such forms.
      E.g. virtual wallets usually protect the data using a key or a passphrase.

      Digital wallets are often used to store verifiable credentials or credentials for cryptocurrency schemes.
      The actual information that the wallet protects is usually a private or secret key associated with the credential.
  seeAlso: [ 'verifiable-credentials' ]

- id: directory-service
  term: Directory Service
  alternativeTerms: [ "Directory Server" ]
  description: >
      A database intended as a store of simple objects, shared between applications.
      Directory services are often used to store identity data.
      The data are used by other applications, that are accessing the directory service by using a well-known protocol.
      Lightweight Directory Access Protocol (LDAP) is the most common protocol used to access directory services.

      Directory services used to be the usual method to implement functionality of identity data store.
      However, other databases and technologies are used to implement similar functionality.
  example:
      LDAP directory servers and Active Directory domains are two most common types of directory services.
  seeAlso: [ "identity-data-store", "ldap" ]
  upkeepStatus: green

- id: documented-information
  term: Documented information
  alternativeTerms:
  iso27000Term: documented information
  description: >
      Information required to be created and maintained by an organization, usually for the purposes of compliance.
      Documented information may be in form of documents, documented processes, content of information systems, records of activities or any similar information.
  example:
  seeAlso: [ 'compliance', 'audit-trail' ]
  upkeepStatus: orange

- id: domain
  term: Domain
  alternativeTerms: [ "Domain of applicability", "Realm", "Context", "Scope" ]
  iso24760Term: domain
  x1252Term: domain
  description: >
      An environment under an autonomous control.
      A domain is often an organization, managing a set of information systems and databases, keeping the information consistent.
      However, it may also refer to a smaller information set within an organization, such as a single database or directory server.

      Identifiers are often designed to be unique within a particular domain, such as an organization or a database.
  example:
  seeAlso: [ "digital-identity", "identifier", "internal-context" ]
  upkeepStatus: orange
  todo: expand

- id: effectiveness
  term: Effectiveness
  alternativeTerms:
  iso27000Term: effectiveness
  description: >
      Effectiveness is a measure of extent to which activities are realized and desired results are achieved.
  example:
  seeAlso:
  upkeepStatus: orange

- id: enrollment
  term: Enrollment
  alternativeTerms:
  iso24760Term: enrollment
  x1252Term: enrollment
  description: >
      A process of entering new identity data into a specific system (usually in a domain).
      Enrollment usually involves validation and verification of the information and its origin, such as verification of identity assertion that relied the information to the system.

      The terms "enrollment", "registration" and "onboarding" are overlapping and they are often used as synonyms.
      Strictly speaking, "enrollment" is the verification process, "registration" is an act of recording information to data store,
      and "onboarding" is a complete business process making sure that a new person in an organization is well-equipped for activities within the organization.
  example:
  seeAlso: [ "identity-registration", "onboarding", "identity-assertion" ]
  upkeepStatus: orange
  todo: expand

- id: entitlement
  term: Entitlement
  alternativeTerms: [ "Privilege", "Access Right", "Permission" ]
  x1252Term: privilege
  description: >
    A privilege or right of access given to the user.
    An "entitlement" is a very overloaded term.
    It can be used to represent any kind of privilege, ranging from a very high-level business role to the finest filesystem permission in a specific system.
  midPointDescription: >
    An Entitlement is a resource object representing privilege, access right, resource-side role, group or any similar concept.
    However, unlike account, the entitlement does not represent a user.
  example: >
    The organization has three groups of users which will work on a new project.
    For that the organization needs to assign the groups new privileges.
    Thanks to the unifying concept of "entitlement" in midPoint, all groups can be managed seamlessly in a uniformed way.
  seeAlso: [ 'privileged-entitlement', 'static-entitlement' ]

- id: entity
  term: Entity
  alternativeTerms:
  iso24760Term: entity
  x1252Term: entity
  nis2Term: entity
  description: >
      Being (such as person or animal), thing, concept or anything else that has recognizably distinct existence.
      An entity is usually described by a set of characteristics, known as its identity.
      An entity can have several identities.

      In some interpretations (usually legislation), "entity" is limited to natural and legal persons that are recognized in context of the legislation,
      able to exercise its rights and be subject to obligations.
  example: >
      A person, device, organization, animal, service, passport, computer, group of people or things.
  seeAlso: [ "identity", "digital-identity" ]
  upkeepStatus: green

- id: ephemeral-identifier
  term: Ephemeral Identifier
  alternativeTerms:
  iso24760Term: ephemeral identifier
  description: >
      An identifier used only for a very short duration.
      Ephemeral identifiers are valid usually only during a single session, or even during a single protocol exchange (e.g. authentication).
      Ephemeral identifiers are almost always randomly-chosen.
      When ephemeral identifiers refer to a digital identity, they are efficiently a short-lived pseudonyms.
  example:
  seeAlso: [ "identifier", "pseudonym" ]
  upkeepStatus: green

- id: event
  term: Event
  alternativeTerms:
  iso27000Term: event
  description: >
      Event is a significant occurrence or change of circumstances.
      In cybersecurity, "event" usually means a negative action or occurrence, an incident, such as cyberattack.
      An event may have several causes and many consequences (outcomes).
      In a strict sense, an event can consist of something not occurring, e.g. a back-up procedure not running as planned.
  example:
  seeAlso: [ 'cybersecurity-event', 'consequence', 'cyberattack' ]
  upkeepStatus: yellow

- id: external-context
  term: External context
  alternativeTerms: [ 'Global environment', 'Externalities' ]
  iso27000Term: external context
  description: >
      Circumstances external to the organization, which affect the way an organization achieves objectives.
      It includes broad context, such as national and international environment, including regulatory, legal, technological, economic and natural aspects.
  example:
  seeAlso: [ 'internal-context' ]
  upkeepStatus: yellow

- id: federated-identity
  term: Federated Identity
  alternativeTerms:
  iso24760Term: federated identity
  description: >
      Digital identity intended to be used in several domains, usually by the means of identity federation.
      Information about federated identity is transferred between domains, usually in a form of identity assertions exchanged between identity providers and relying parties.
  example:
  seeAlso: [ 'identity-federation', 'digital-identity' ]
  upkeepStatus: green

- id: fine-grain-authorization
  term: Fine-Grain Authorization
  alternativeTerms:
  description: >
      Authorization made on very detailed information and is providing more detail control within the application operation.
      E.g. authorization to approve the transaction in an accounting system, with amount up to a certain limit.
      Typically, fine-grain authorization requires detailed knowledge of both the user profile (attributes) and the operation context (operation name, parameters and their meaning).
      Due to this requirement, fine-grain application is often implemented directly in application code.
  example:
  seeAlso: [ 'authorization', 'coarse-grain-authorization' ]
  upkeepStatus: green

- id: focus
  term: Focus
  alternativeTerms: [ 'Focal Object' ]
  midPointDescription: >
      An object that can is a focus of computation, an object central to midPoint computation.
      The focus is usually a user, but it can be a role, org or a service.
      Focus is the center of a computation, the hub in hub-and-spoke (star) data synchronization in midPoint.
      The "spokes" in the computation are represented by projections.
  seeAlso: [ 'assignment', 'projection' ]
  readMore: /midpoint/reference/schema/focus-and-projections/

- id: fulfillment
  term: Fulfillment
  alternativeTerms: [ 'Provisioning/deprovisioning' ]
  description:
      Fulfillment is a functionality of identity management (IDM) system, making sure that users have appropriate access to systems.
      Simply speaking, this is the functionality that creates accounts, associates them with entitlements (e.g. groups), modifies passwords, enables/disables accounts and deletes them in the end.
      Fulfillment is a name used for identity provisioning together with deprovisioning and associated activities.
  example:
  seeAlso: [ 'identity-management', 'identity-management-system', 'identity-provisioning', 'identity-deprovisioning', 'manual-fulfillment']
  readMore: /iam/iga/fulfillment/
  upkeepStatus: orange

- id: gbac
  term: Graph-Based Access Control
  acronym: "GBAC"
  description: >
      Access control model based on a semantic graph modeling an organization.
      The organization is modeled as a semantic graph.
      Nodes represent organizational units, functional units (roles) and agents (users), edges represent relationships (e.g. membership, deputy).
      The model includes a query language, which is used to build the access control matrix.
  example:
  seeAlso: [ "access-control", "rebac" ]


- id: gdpr
  term: General Data Protection Regulation
  acronym: GDPR
  alternativeTerms:
  description: >
      General Data Protection Regulation 2016/679 (GDPR) is European Union regulation on personal data protection and privacy.
      It defines rules for processing of personal data in European Union, European Economic Area, with provisions of the regulation applicable to other parties as well.
  example:
  seeAlso: [ 'personal-data-protection' ]

- id: generic-synchronization
  term: Generic Synchronization
  alternativeTerms:
  description: >
    Advanced model of synchronization where not only users and accounts are synchronized, but also groups to roles, organizational units to groups, roles to ACLs and so on.
  example: >
    A company has research department which is linked to a working group providing analysis.
    Thanks to generic synchronization, changes set for research department can be also applied on working group.
    Also if the research department is gone, working group can be automatically deleted.
  seeAlso:

- id: grc
  term: Governance, risk management and compliance
  acronym: "GRC"
  alternativeTerms:
  description: >
    Governance, risk management and compliance (GRC) is a discipline that helps organizations to have more control over processes and be more effective.
    Governance is the set of decisions and actions by which individual processes as well as the whole organization are lead to achieve specific goals.
    Risk management identifies, predicts and prioritizes risks with aim to minimize them or avoid their negative influence on organizations' aims.
    Compliance means following certain rules, regulations or procedures.
    A GRC software facilitates this problematic by taking care of all three parts by one single solution.
    It is a very helpful tool for business executives, managers or IT directors.
    Thanks to it it is possible to define, enforce, audit and review policies responsible for the exchange of information between internal systems as well as between the external ones.
  example: >
    John is manager of the IT department in a bank.
    To have enough control over processes as well as users, he needs to have relevant information in one place to work with it effectively.
    If he is able to define, enforce, review and audit policies and map the functions to comply with requirements with one solution, he has better control over the information flow, which helps him to lower possible risks such as information fraud.
  seeAlso: [ 'cybersecurity-governance', 'risk-management', 'compliance' ]

- id: governing-body
  term: Governing body
  alternativeTerms:
  iso27000Term: governing body
  description: >
      Governing body is a person or a group of persons who are responsible and accountable for the performance of an organization, mostly for the purposes of financial performance and regulatory compliance.
  example: >
      Board of directors is an usual governing body of a corporation.
  seeAlso: [ 'compliance' ]

- id: holder
  term: Holder
  alternativeTerms:
  description: >
      An entity that holds credentials or claims, which usually describe the holder entity.
      In Triangle of Trust scenarios, the credentials/claims are issued by the issuer and verified by the verifier.
  example:
  seeAlso: [ 'principal', 'subject', "triangle-of-trust", "issuer", "verifier", "trusted-third-party", "credential", "claim" ]
  upkeepStatus: green

- id: identifier
  term: Identifier
  iso24760Term: identifier
  x1252Term: identifier
  description: >
      A value, or a set of values, that uniquely identify an identity in a certain scope.

      An identity usually have several identifiers, used in various situations and contexts.
      Identifiers may be compound, composed of several values.
  example:
      Username, national person identifier such as birth number, social security number, registration number of an organization, uniform resource identifier (URI).
      E-mail address is often used as a globally-unique identifier.
      Given name of a person often uniquelly identifies a person within a family, therefore it may be considerd an identifier in some contexts.
  seeAlso: [ "identity", "digital-identity", "digital-identity-attribute", "entity" ]
  upkeepStatus: green

- id: identification
  term: Identification
  iso24760Term: identification
  x1252Term: identification
  description: >
      A process of recognizing an identity as distinct from other identities in a particular scope or context.
      Identification is almost always performed by processing identifiers, using them to reference an identity in an identity database.

      Identification is a process distinct from authentication.
      Authentication is a process of proving an identity (verification), whereas identification does not assume any such proof.

      The term "identification" usually refers to a process of looking up identity data based on a simple identifier, such as username or reference identifier.
      In some cases, process of identification involves a correlation, looking up or matching identity information in a more complex way.
      For example, a system may compare registration data entered by the user with the content of its identity database, in an attempt to determine whether such user is already registered.
  example:
      User enters a username, a system is using the username to look up user's profile in the database.
  seeAlso: [ "digital-identity", "identifier", "authentication", "identity-correlation" ]
  upkeepStatus: green

- id: identity
  term: Identity
  alternativeTerms:
  iso24760Term: identity
  x1252Term: identity
  description: >
      The fact of being who or what a person or thing is.
      Set of characteristics, qualities, believes, behaviors and other aspects of en entity.
      Identity can be applied to persons, things, even intangible concepts, known as entities.
      An entity can have several identities (often known as personas).
      In context of information technologies, parts of identity can be usually represented in a form of digital record, known as digital identity.

      Identity should not be confused with identifier.
      Identity is a set of characteristics, while identifier is a value used to refer to identity.
  example:
  seeAlso: [ "identifier", "digital-identity", "entity" ]
  upkeepStatus: green

- id: identity-and-access-management
  term: Identity and Access Management
  acronym: "IAM"
  alternativeTerms:
  description: >
      Identity and access management (IAM) is a field concerned with managing identities (e.g. users) and their access to systems and applications.
      IAM is concerned with all the aspects dealing with "identity", with many subfields that specialize in selected aspects.
      Access management deals (AM) especially with access to applications, including authentication and (partially) authorization.
      Identity management and governance (IGA) deals with management of user data (e.g. user profiles), synchronization of identity data and applying policies.
      Other IAM subfields deal with storage of identity data, transfer of the data over the network and so on.
  example:
  seeAlso: [ "identity-management", "iga", "access-management", "identity-data-store" ]
  readMore: /iam/

- id: identity-assertion
  term: Identity Assertion
  alternativeTerms: [ "Assertion", "Claim" ]
  iso24760Term: identity assertion
  x1252Term: claim
  description: >
      Statement made by an identity provider regarding properties or behavior of an identity.
      Assertions are used by relying parties.
      The most common assertion is perhaps authentication assertion, relying information about authentication event from identity provider to relying party.
      Assertions may contain other information as well, usually identity attributes and authorization decisions.
  example:
  seeAlso: [ "digital-identity-attribute", "identity-provider", "relying-party" ]
  upkeepStatus: green

- id: identity-based-security
  term: Identity-based Security
  alternativeTerms: [ 'Identity-first security', 'Identity-centric security', 'Identity-defined security', 'Identity defense in depth' ]
  description: >
      Identity-based security is a approach to cybersecurity, focused on concept of identity.
      It places identities in the center of cybersecurity mind-set, adjusting cybersecurity design and practices around identities.
      Identity-based security is concerned with the identity that initiates an action, or identity that is responsible for an action, object or configuration.
      Simply speaking, identity-based security tries to make sure that access to service or information is provided to a specific identity, and only to the identity that is entitled for such access.
      Identity-based security is not limited to identity of persons.
      Identities of machines, services, devices, networks and similar technological and virtual concepts (non-human identities, NHI) are included as well.

      Identity-based security relies on dynamic policies based on the identity of the actor, as well as context of the operation or situation.
      Unlike traditional approaches, identity-based security is not fixed, it does not assume static world where an operation is allowed once and for all, and stays allowed for ever.
      Policies in identity-based security are dynamic, they are meant to be continuously applied, maintained, reviewed and improved, dynamically adapting to the environment and requirements.

      Identity-based security is fundamental foundation for zero-trust approach.

      Note: Identity-based security should not be confused with "identity security", which is a vastly overloaded term used mostly for marketing purposes.
  example:
  seeAlso: [ "cybersecurity", "iga", "zero-trust", "identity-security" ]
  upkeepStatus: green

- id: identity-correlation
  term: Identity Correlation
  alternativeTerms: [ "Identity Matching" ]
  x1252Term: correlation
  description: >
      Process of comparing identity information, with an aim to find a matching identity.
      Correlation is usually employed during identity enrollment or registration, when a system determines whether the new identity is already known to the system.
      For example, a system may compare registration data entered by the user with the content of its identity database, in an attempt to determine whether such user is already registered.
      If such a comparison involves simple and reliable identifiers (such as username or employee number), it is called "identification".
      However, in many cases such identifiers are not available, and the system needs to combine several identifiers or employ sophisticated techniques to find matching identity.
      Some identity correlation techniques involve probabilistic matching techniques or machine learning methods to find suitable candidates, which are later reviewed by human operator.
  example:
  seeAlso: [ "identification", "enrollment", "identity-registration", "identifier" ]
  upkeepStatus: green

- id: identity-connector
  term: Identity Connector
  alternativeTerms: [ "Connector" ]
  description: >
      Usually small and simple unit of code that connects to a remote system.
      The purpose of identity connector is to retrieve and manage identity information, such as information about user accounts, groups and organizational units.
      The connectors are usually written for and managed by a particular connector framework.
  example: >
      When company uses identity management system and needs to integrate it with Active Directory servers, it simply uses Active Directory Connector (LDAP).
  seeAlso: [ "identity-connector-framework", "connid" ]

- id: identity-connector-framework
  term: Identity Connector Framework
  alternativeTerms: [ "Connector Framework", "ICF" ]
  description: >
      Generally speaking, a programing framework (library) for creating and managing identity connectors.
      However, this rather generic term often refers to the Identity Connector Framework (ICF), originally developed by Sun Microsystem in 2000s.
      The ICF was releases as an open source project by Sun, only to be later abandoned after Sun-Oracle merger.
      The ICF was a base for several forks, including ConnId and OpenICF.
  seeAlso: [ "identity-connector", "connid" ]

- id: identity-data-source
  term: Identity Data Source
  alternativeTerms: [ "Source System" ]
  description: >
      A system that is the source of identity data, usually data about users.
      The data are usually created and maintained in such systems manually.
      There are often multiple identity data sources in an organization with various characteristics.
      Some data sources are considered authoritative, providing reliable information about identities.
      Other data sources usually contain user-provided information, such as data entered by the user during registration process.
      Almost all data sources contain partial information only, information that is limited both in breadth (only some identity types) and depth (only some attributes).
      Data source may be an intermediary, providing information acquired from other systems.
  example: >
      A human resource (HR) system is usually an authoritative data source regarding organization employees and employment status.
      Directory server can be a source of user-provided profile attributes.
  seeAlso:

- id: identity-data-store
  term: Identity Data Store
  alternativeTerms: [ "Identity Store", "Identity Database", "Directory Service" ]
  description: >
      A database, designed and/or dedicated to store identity-related data.
      Identity data store is usually shared among many applications, it is accessed by many systems reading the data.
      Applications read data from identity data stores, often using them for authorization, and sometimes even authentication purposes.
      Structure of data in the data store is often application-friendly, containing pre-processed and derived information.
      Identity data store also usually contain entitlements, or similar information that can be used for authorization purposes.
      There are usually several identity data stores in an organization, managed and synchronized by an identity management system.

      Traditionally, directory servers (such as LDAP serves) are used as identity data stores.

      Identity data store is similar to identity register, and in fact many identity data stores are identity registers.
      The difference is that identity register has a more formal data structure, usually functioning as an authoritative data source.
      Whereas identity data store usually contains information copied from other system, including application-friendly derived data.
      However, the exact boundary between functions of identity register and identity data store is not exactly defined.
  example:
  seeAlso: [ 'identity-register' ]

- id: identity-deprovisioning
  term: Identity Deprovisioning
  alternativeTerms: [ "Deprovisioning", "Revocation" ]
  description: >
      Identity deprovisioning is as well as identity provisioning a subfield of Identity and Access Management (IAM).
      It is an opposite to identity provisioning.
      While identity provisioning takes care of creating new accounts, determining the roles for individual users and their rights or making changes in them, deprovisioning works oppositely.
      When an employee leaves the company, his account is deactivated or deleted and he loses all the accesses to both internal and external systems.
      This way organization minimizes information theft and stays secure.
      Identity provisioning together with deprovisioning and associated activities is known as "fulfillment".
  example: >
      A manager retires from the organization.
      Thanks to identity deprovisioning, his company email is deactivated, he loses access to working groups, cloud storage and every other system he had access to.
  seeAlso: [ "fulfillment" ]

- id: identity-evidence
  term: Identity Evidence
  alternativeTerms: [ "Evidence of Identity", "Identity Proof"]
  iso24760Term: identity evidence
  description: >
      Data and documents that support verification of identity data (identity proofing).
      Identity evidence is used in identity proofing process to achieve higher level of assurance of identity information.
  example:
      Government-issue identity documents, such as national identification card.
  seeAlso: [ "identity-proofing", "level-of-assurance", "verification", "digital-identity-attribute" ]
  upkeepStatus: orange
  todo: expand

- id: identity-federation
  term: Identity Federation
  alternativeTerms:
  iso24760Term: identity federation
  x1252Term: federation
  description: >
    Identity federation is an agreement between several domains, specifying the details of exchange and use of shared identity information.
    The information in identity federation is usually transferred by the means of identity assertions, exchanged between identity providers and relying parties.

    From user's point of view, identity federation is a process of sharing user’s identification and personal data between multiple systems and between organizations,
    so the user doesn’t have to register for each organization separately and can seamlessly access systems in federated organizations.
  example: >
    A student goes for an internship to another university.
    Thanks to identity federation, he is registered to the library, student system and online timetable automatically.
  seeAlso: [ 'domain', 'federated-identity', 'identity-assertion', 'identity-provider', 'relying-party' ]

- id: identity-governance
  term: Identity Governance
  alternativeTerms: [ "Governance" ]
  description: >
    Business aspect of managing identities including business processes, rules, policies and organizational structures.
    Any complete solution for management of identities consists of two major parts – identity governance and identity management.
    Identity governance is primarily concerned with establishing and maintaining policies and rules, while identity management is implementing such policies.
    As such, identity governance is closer to high-level business environment, while identity management is concerned mostly with underlying technology.
  example: >
    Company hires 3 new employees, who need various privileges – some of them automatically, some in ad-hoc manner and some must not be given to any of them.
    The company sets up an approval process to keep things under control and keeps track of assignments and approvals to keep people accountable.
    There is also new policy and regulation taking effect soon that system needs to be compliant with.
    Company deals with such processes by means of identity governance.
  seeAlso: [ "iga", "grc", "identity-management" ]

- id: identity-information-authority
  term: Identity Information Authority
  acronym: IIA
  alternativeTerms:
  iso24760Term: identity information authority
  description: >
      ISO 24760 term, referring to an entity related to a particular domain that can make provable statements on the validity
      and/or correctness of one or more attribute values in an identity.
  example:
  seeAlso: [ "identity-provider", "domain" ]
  upkeepStatus: green

- id: identity-lifecycle
  term: Identity Lifecycle
  alternativeTerms: [ 'Identity lifecycle management' ]
  description: >
    Set of identity stages from creation to its deactivation or deletion.
    It contains creation of an account, assignment of correct groups and permissions, setting and resetting passwords and in the end deactivation or deletion of the account.
  example:
  seeAlso: identity-deprovisioning, identity-provisioning

- id: identity-management
  term: Identity Management
  acronym: "IDM"
  alternativeTerms: [ 'Identity Administration', 'User management', 'User provisioning' ]
  iso24760Term: identity management
  x1252Term: identity management
  description: >
    Identity Management (IDM) is a process of managing digital identities and their accesses to specific resources in the cyberspace.
    It ensures appropriate access in appropriate time and helps to manage user accounts as well as to synchronize data.
    Identity management deals with digital identity lifecycle, managing values of digital identity attributes and entitlements.
  example: >
    When new employee is hired, he gets his user account in the company.
    In this account not only the information about himself is stored, but also information related to permissions for this user or his group and role membership.
    The aim of identity management is the management of user accounts, so users are assigned to correct groups, they have correct roles as well as permissions they are supposed to have.

    Identity management can be used to manage identities such as employees, students, customers, business partners or suppliers and finds its usage in various markets.
    Therefore the identity became a new perimeter of security.
    In the past, private nets of companies were isolated from the Internet and connected just through a safe point.
    This stopped to be effective as people started to use notebooks or phones altogether with Internet.
    The security perimeter can be replaced with Identity Management, by which we can manage who has the access to specific resources.
  seeAlso: [ "access-management", "identity-lifecycle", "identity-provisioning", "iga", "digital-identity", "digital-identity-attribute" ]

- id: identity-management-system
  term: Identity Management System
  acronym: IDMS
  alternativeTerms: [ "IDM System", "Provisioning System", "User Provisioning System" ]
  iso24760Term: identity management system
  description: >
      A system that provides identity management functionality: it is managing identities and their accesses to specific resources in the cyberspace.
      It ensures appropriate access in appropriate time and helps to manage user accounts as well as to synchronize data.

      Identity management (IDM) systems are concerned about the "management" side, maintaining user data, policies, roles, entitlements and so on.
      IDM systems usually do not "apply" or enforce the policies.
      The policies are transformed as needed and provisioned to other systems (a.k.a. "target systems") that interpret and enforce the policies.
      The process of provisioning (and "deprovisioning") of data and policies is known as "fulfillment".

      In a broad sense, IDM systems are used to manage the policies and data in all connected systems in the organization.
      IDM systems make sure that the data are consistent, that all the policies are applied, that user profile data are up-to-date,
      detecting and removing illegal access and generally keep all identity-related information in order across all the systems.

      Note: ISO 24760 definition seems to include identification and authentication as functions of identity management systems.
      While almost all IDM systems implement such functions, they are mostly used for internal purposes, e.g. for system administration access.
      IDM system usually do not provide identification and authentication services to other systems.
      ISO 24760 definition is closer to definition of identity and access management (IAM) system.
      However, complete IAM functionality is usually provided by a combination of several systems in practice.
  example: >
      Identity management (IDM) system usually takes information about employees from the Human Resource (HR) system.
      When new employee is recorded into HR system, this information is detected and pulled by the IDM system.
      After that, it is processed to determine set of roles each user should have.
      These roles determine and create accounts users should have, so everything is ready for new users on the very first day.
      If a user is transferred to another department or his privileges change, similar processes happen again.
      If an employee leaves the company, IDM systems makes sure all his accounts are closed.
  seeAlso: [ "identity-management", "identity-lifecycle", "identity-provisioning", "iga" ]

- id: identity-proofing
  term: Identity Proofing
  alternativeTerms: [ "Initial Entity Authentication" ]
  iso24760Term: identity proofing
  x1252Term: identity proofing
  description: >
      Verification of evidence to make sure that identity information are true and up-to-date.
      Identity proofing is used to achieve higher level of assurance of identity information.

      Identity proofing should not be confused with authentication.
      Identity proofing is used to establish the link between identities and/or subjects/entities.
      However, identity proofing does not necessarily provide assurance that the entity currently interacting with a service is in fact the same entity that was initially established.
  example:
  seeAlso: [ "digital-identity-attribute", "level-of-assurance", "linkability", "authentication" ]
  upkeepStatus: orange
  todo: expand

- id: identity-provider
  term: Identity Provider
  acronym: "IdP"
  alternativeTerms:
  iso24760Term: identity information provider
  x1252Term: identity service provider
  description: >
      System that provides identity-related information to applications (known in this context as "relying party" or "service provider").
      Such information usually includes user identifiers (which may be ephemeral), user name(s) and affiliation.
      The information is usually provided in form of identity assertions (claims).

      Identity providers are often authenticating the users.
      In that case, identity providers usually include information describing the authentication, such as statement that user was authenticated and indication of authentication mechanism strength.
      Identity provider authenticates the users in its own capacity, it never reveals user's credentials to the application (relying party).
      In fact, many identity providers are focused on authentication only, providing only a very minimal identity information (often just a single identifier), in which case the authentication-related information forms the most important part of provided information.
      Such identity providers effectively work as cross-domain single sign-on (SSO) systems.

      Although most identity providers include user authentication, there are also providers that do not (directly) authenticate the users, sometimes called "attribute providers".
      Identity provider may provide also additional information of the user to the application, such as information about user attributes and entitlements.

      Identity provider is often managed by a different organization than the relying applications (service providers), thus providing cross-domain identity mechanism.
      Typical protocols and frameworks used by identity providers include: SAML, OpenID Connect, CAS
  example: >
      SAML identity providers (e.g. Shibboleth server), OpenID providers (OpenID Connect), Active Directory Federation Server, CAS server.
      Some parts of Active Directory domain services may also be considered an identity provider, albeit usually used as intra-organization only.
  seeAlso: [ "relying-party", "identity-federation", "cross-domain", "identity-assertion" ]
  upkeepStatus: green

- id: identity-provisioning
  term: Identity Provisioning
  alternativeTerms: [ "User provisioning", "Provisioning" ]
  description: >
      In broad sense, identity provisioning is a subfield of Identity Management (IDM), concerned with technical aspects of creating user accounts, groups and other objects in target systems.
      It is a technology thanks to which many identity stores are synchronized, merged and maintained.
      Identity provisioning takes care of technical tasks during the whole user lifecycle - when new employee is hired, when his responsibilities change or he leaves the company (deprovisioning).
      It helps the organization to work more effectively as its goal is to automate as much as possible.

      The provisioning system usually takes information about employees from the Human Resource (HR) system.
      When new employee is recorded into HR system, this information is detected and pulled by the provisioning system.
      After that, it is processed to determine set of roles each user should have.
      These roles determine and create accounts users should have, so everything is ready for new users on the very first day.
      If a user is transferred to another department or his privileges change, similar processes happen again.
      If an employee leaves the company, identity provisioning systems makes sure all his accounts are closed.

      In a specific sense, identity provisioning means a process of creating accounts, assigning entitlements and similar actions,
      making sure a user has appropriate access to information systems.
      Identity provisioning together with deprovisioning and associated activities is known as "fulfillment".
  example: >
      New manager is hired in the organization.
      He is recorded into HR systems and thanks to identity provisioning, his company email is created, he gets access to working group as well as cloud storage.
      When the manager retires, identity provisioning makes sure all his accounts are disabled in accordance with the safety of the organization data.
  seeAlso: [ "identity-management", "identity-lifecycle", "fulfillment" ]
  upkeepStatus: orange

- id: identity-register
  term: Identity Register
  alternativeTerms: [ 'IMS Register', 'Reference Register' ]
  iso24760Term: identity register
  description: >
      A repository (database) of identity information, usually structured in a formal manner.
      Identity registers are almost always indexed using a reference identifier.
      They are usually designed for a specific purpose of being an authoritative data sources for other systems.

      Identity register is similar to identity data store, and in fact many identity registers function as identity data stores.
      The difference is that identity data store has less formal, usually application-friendly data structure, containing pre-processed and derived information.
      Identity data store also usually contain entitlements, or information that can be used for authorization purposes.
      However, the exact boundary between functions of identity register and identity data store is not exactly defined.
  example:
  seeAlso: [ "identity-registration", "reference-identifier", "identity-data-source", "identity-data-store" ]
  upkeepStatus: green

- id: identity-registration
  term: Identity Registration
  alternativeTerms: [ 'Registration' ]
  iso24760Term: identity registration
  x1252Term: registration
  description: >
      A process of recording new identity data into identity register or identity data store.
      Registration process may involve storing the information is several distinct data stores or registers.
      The recording process may be indirect, e.g. mediated by synchronization process of an identity management system.

      Informally, the registration process often involves the data acquisition process as well, such as asking user for the data using a form.

      The terms "enrollment", "registration" and "onboarding" are overlapping and they are often used as synonyms.
      Strictly speaking, "enrollment" is the verification process, "registration" is an act of recording information to data store,
      and "onboarding" is a complete business process making sure that a new person in an organization is well-equipped for activities within the organization.
  example:
  seeAlso: [ "enrollment", "onboarding", "identity-register", "identity-data-store" ]
  upkeepStatus: green

- id: identity-resource
  term: Identity Resource
  alternativeTerms: [ "Provisioning Resource", "Resource" ]
  description: >
      In IAM field, a Resource is usually a network-accessible asset capable of managing identity information.
  midPointDescription: >
      An Resource is a system that is either identity data source or provisioning target.
      IDM system (midPoint) is managing accounts in that system, feeding data from that system or doing any other combination of identity management operations.
      Identity resource should not be confused with "web resource" that is used by RESTful APIs.
  example:
  seeAlso: [ "resource", "identity-connector" ]

- id: identity-security
  term: Identity Security
  alternativeTerms:
  description: >
      Identity security is a vastly overloaded term, usually used for marketing purposes.
      Depending on the entity describing "identity security", its meaning can range from low-level network security to a high-level identity governance.
      The common motif seems to be focus on securing the identities, whether the identities represent persons, services or devices, which is a very broad and vague description.
      Overall, "identity security" does not bring any significant new concept or approach, it is mostly just a marketing description of pre-existing technology and methods.

      Identity security should not be confused with identity-based security, which is a valid approach to cybersecurity.
  example:
  seeAlso: [ "identity-based-security", "iga" ]
  upkeepStatus: green

- id: identity-vigilance
  term: Identity Vigilance
  alternativeTerms:
  description: >
      Identity vigilance is a practice of appropriate and responsible management of identity data.
      It includes proper synchronization of data among information systems and databases, identification of duplicates, handling of data inconsistencies, application of privacy protection
      and all other practices necessary to ensure that the data are always correct, up-to-date and protected.
      Identity vigilance is especially important in healthcare, where patient mis-identification or data errors may lead to fatal consequences.
  example:
  seeAlso: [ "iga" ]

- id: iga
  term: Identity Governance and Administration
  acronym: "IGA"
  alternativeTerms:
  description: >
      Identity governance and administration (IGA) si a subfield of identity and access management (IAM) dealing with management and governance of identity-related information.
      IGA systems store, synchronize and manage identity information, such as user profiles.
      Complex data, entitlement and governance polices can be defined, applied to identity data.
      IGA system are responsible for evaluating the policies, making sure the data are compliant, addressing policy violations.
      IGA is often considered an umbrella term covering identity management, identity governance, compliance management, identity-based risk management and other aspects related to management of identities.
      Identity Governance and Administration (IGA) includes both the technical and business aspects of identity management.

      IGA provides basic foundational platform for identity-based security, zero trust approach, and many other cybersecurity techniques and approaches.
  seeAlso: [ "identity-management", "identity-governance", "grc", "identity-and-access-management", "identity-based-security" ]
  readMore: /iam/iga/

- id: inducement
  term: Inducement
  midPointDescription: >
      Inducement is an indirect representation of an assignment, a relation that assigns privileges, organizational membership, policy elements or other midPoint concepts to assignment holder objects (usually users).
      Inducement has the same data structure as assignment, and very similar functionality.
      However, while assignment represents direct relation, inducement is indirect.
      For example, assignment can be used to assign an account or a group membership directly to a user.
      Inducement can facilitate the same functionality, however it is usually placed in role.
      As the role is assigned (using an assignment) to the user, inducements placed in the role are indirectly applied to a user.
  seeAlso: [ 'assignment', 'role' ]
  readMore: /midpoint/reference/roles-policies/assignment/assignment-vs-inducement/

- id: information-classification
  term: Information classification
  alternativeTerms: [ 'Information labeling', 'Labeling' ]
  midPointDescription: >
      Information classification is a process in which organisations assess their data and systems, with regard to the necessary level of protection.
      The information is classified by assigning information _labels_ or _classifications_ to individual assets, such as databases, filesystems, applications or even individual files.
  seeAlso:
  readMore: /midpoint/reference/classification/

- id: information-need
  term: Information need
  alternativeTerms: [ 'As-needed basis' ]
  iso27000Term: information need
  midPointDescription: >
      Information need is an information necessary to perform certain activity or a task.
      It is often a basis of "least privilege" principle, providing the minimum necessary information and access to users.
  seeAlso: [ 'least-privilege' ]

- id: information-processing-facilities
  term: Information processing facilities
  iso27000Term: information processing facilities
  midPointDescription: >
      Information processing facilities are all systems processing and storing information, including services, infrastructure and physical locations housing it.
      They include hardware, software, networks and all necessary equipment to operate them.
  seeAlso: [ 'information-system' ]

- id: information-system
  term: Information system
  iso27000Term: information system
  nis2Term: 'network and information system'
  midPointDescription: >
      Information systems are technological systems and applications built for processing and storing information.
      Information systems include hardware, software, networks and all necessary equipment to operate them.
      In some context, the "system" also includes the technological and physical environment (e.g. a network) as well as the information (data) processes by the system.
  seeAlso: [ 'information-processing-facilities' ]

- id: integrity
  term: integrity
  alternativeTerms: [ 'Data integrity', 'Integrity of communication' ]
  iso27000Term: integrity
  description: >
      Integrity is a property of data or a communication channel, describing that the data or content of a communication channel were not modified in unintended way.
      I.e. it is a property that ensures that data are received in the same exact form as they were transmitted, without any modification or tampering.

      Integrity, together with confidentiality and availability form a "CIA triad", a classical model of information security (cybersecurity).
  seeAlso: [ 'confidentiality', 'availability' ]
  upkeepStatus: green

- id: interested-party
  term: Interested party
  alternativeTerms: [ 'Stakeholder' ]
  iso27000Term: interested party
  description: >
      Person or organization that can affect, be affected or in any way perceive itself to be involved or affected by a decision, activity or an event.
      The term "stakeholder" usually describes a person or organization that holds a "stake" in an activity, such as investors or directors of an organization.
  seeAlso:
  upkeepStatus: green

- id: internal-context
  term: Internal context
  alternativeTerms: [ 'Local environment', 'Internals' ]
  iso27000Term: internal context
  description: >
      Circumstances internal to the organization, which affect the way an organization achieves objectives.
      It includes all internal parts and mechanisms of an organization, such as governance, organizational structure, management hierarchy, policies, objectives, responsibilities, resources and capabilities.
  example:
  seeAlso: [ 'external-context', 'domain' ]
  upkeepStatus: yellow

- id: isms
  term: Information security management system
  acronym: ISMS
  alternativeTerms: [ 'Cybersecurity management system' ]
  description: >
      Information security management system (ISMS) is a set of policies and procedures for systematically managing cybersecurity of an organization.
      ISMS includes risk assessment, risk treatment (implementation of controls), risk communication and incident response.
      Management of cybersecurity is a continuous, never-ending effort, which is meant to be constantly improving.
      Cybersecurity governance is meant to establish and maintain rules and policies for ISMS, and to provide oversight and consistent improvement of ISMS processes.
  example:
  seeAlso: [ 'cybersecurity', 'cybersecurity-governance', 'risk-assessment', 'risk-treatment', 'risk-communication' ]
  upkeepStatus: yellow

- id: issuer
  term: Issuer
  alternativeTerms:
  description: >
      An entity that issues credentials or claims, usually describing another entity (holder).
      In Triangle of Trust scenarios, issuer is considered to be trusted third party.
  example:
  seeAlso: [ "triangle-of-trust", "holder", "verifier", "trusted-third-party", "credential", "claim" ]
  upkeepStatus: green

- id: joiner-leaver
  term: Joiner-Leaver Processes
  acronym:
  alternativeTerms: [ "Joiners and Leavers" ]
  description: >
      Joiner-Leaver are human resources (HR) process, handling employees joining the organization and leaving the organization.
      They are constrained versions of joiner-mover-leaver processes, not considering movement of employees in organizational structure.
  seeAlso: [ "joiner-mover-leaver", "onboarding", "offboarding" ]

- id: joiner-mover-leaver
  term: Joiner-Mover-Leaver Processes
  acronym: "JML"
  alternativeTerms: [ "Joiners, Movers and Leavers" ]
  description: >
      Joiner-Mover-Leaver (JML) are human resources (HR) process, handling employees joining the organization, moving within organizational structure and leaving the organization.
      JML process can be understood as handling events of employee lifecycle from the point of view of organizational and business processes.
      Generally speaking, this process is not limited to employees.
      However, when similar processes are applied to other types of persons (students, contractors) they are often referred to as "on-boarding" and "off-boarding".

      JML processes are (manual) business processes in their nature.
      Despite that, the JML processes are important for identity management, as they provide the contextual framework for identity management technology to fit in.
      Moreover, identity management deployments are usually automating some parts of the JML processes.
  seeAlso: [ "onboarding", "offboarding", "joiner-leaver" ]

- id: ldap
  term: Lightweight Directory Access Protocol
  acronym: LDAP
  description: >
      Lightweight Directory Access Protocol (LDAP) is industry-standard protocol (RFC4510) for accessing directory services.
  example:
      LDAP directory servers and Active Directory domains are two most common types of directory services.
  seeAlso: [ "directory-service", "identity-data-store" ]
  upkeepStatus: orange
  todo: expand

- id: level-of-assurance
  term: Level of Assurance
  acronym: LoA
  alternativeTerms:
  x1252Term: assurance level
  description: >
      Measure of reliability of identity information.
      Information with low levels of assurance are usually user-provided information that were not verified in any significant way.
      Higher levels of assurance are usually achieved by identity proofing, a process of verifying the information.
      Level of assurance is usually stored as metadata, describing the specific value that was verified.
  example:
  seeAlso: [ "digital-identity-attribute", "identity-proofing", "metadata" ]
  upkeepStatus: orange
  todo: expand

- id: least-privilege
  term: Least Privilege Principle
  alternativeTerms: [ 'Principle of Least Privilege', 'PoLP', 'Default deny' ]
  description: >
      Principle of information security, stating that each user should have the least privilege necessary to carry out their activities.
      In other words, the principle states that there should be no over-provisioning (over-permissioning) of users.
      The principle is often implemented by "default deny" approach: everything is denied by default, every access has to be explicitly allowed.

      Adherence to the principle of least privilege is generally accepted as best practice for information security,
      as it is minimizing overall risk by keeping the extent of privileges as low as possible.
      However, due to complexity, maintenance effort and other factors, strict adherence to the principle is surprisingly difficult to achieve.
  example:
  seeAlso: [ 'over-provisioning', 'information-need' ]

- id: linkability
  term: Linkability
  alternativeTerms:
  x1252Term: linkability
  description: >
      Ability to determine that two digital identities represent the same entity, or whether a digital identity represents a particular (real-life) subject.
      Linkability is usually deterministic, based on a reliable identifier.
      Identity proofing is a mechanism to reliably establish the link.
  example:
  seeAlso: [ "identity-correlation", "digital-identity", "identity-proofing" ]
  upkeepStatus: orange
  todo: expand

- id: management
  term: Management
  alternativeTerms: [ 'Management system' ]
  iso27000Term: management system
  description:
      Management is a broad set of systematic activities, methods and other means to direct and control activities in an organization, in order to achieve its objectives.
      It is meant to provide efficient, systematic method to achieve objectives, which can be controlled and monitored.
      Management operates within the constraints given by governance activities.
      While governance is a process of establishing policies and rules, management is concerned with efficient implementation of the activities within established rules.
  example:
  seeAlso: [ 'isms', 'identity-management', 'cybersecurity-governance' ]
  upkeepStatus: green

- id: manual-fulfillment
  term: Manual Fulfillment
  alternativeTerms: [ 'Manual Provisioning/deprovisioning', 'Manual resource', 'Manual connector' ]
  description:
      Manual process of creating, updating and deleting accounts, entitlements and similar objects, driven by identity management system, but exexcuted by human operator.
      Manual fulfillment is initiated by an identity management system, usually as a consequence of change in user privileges or policies.
      Identity management system creates a ticket for system administrators, containing instructions to create/modify/delete an acccount or entitlement in a specific information system.
      Actual action is executed manually, by the system administrator.
      Manual fulfillment is used for systems, for which automatic identity connector is not available.
  example:
  seeAlso: [ 'fulfillment', 'identity-provisioning', 'identity-deprovisioning', 'identity-connector' ]
  upkeepStatus: green

- id: memorized-secret-authenticator
  term: Memorized Secret Authenticator
  alternativeTerms: [ 'Something you know' ]
  description: >
      Memorized secret authenticator is a secret value intended to be memorized by the user, used during authentication.
      Passwords and PINs are the most common type of memorized secret authenticators.
      Memorized secrets are used for "something you know" type of authentication.
  example:
  seeAlso: [ 'authenticator', 'password', 'pin' ]
  todo: expand

- id: metadata
  term: Metadata
  alternativeTerms: [ "Meta-data", "Meta data" ]
  description: >
      Data about data.
      Metadata describe properties of data, such as the method how the data were acquired (a.k.a. "provenance"), how reliable the data are (e.g. level of assurance) and so on.
  example:
  seeAlso: [ 'data-origin', 'data-provenance', 'level-of-assurance' ]
  todo: expand

- id: mfa
  term: Multi-factor authentication
  acronym: MFA
  description: >
      Multi-factor authentication (MFA) is a composite mechanism, combining several independent authentication factors in a single authentication session.
      MFA is meant to counteract vulnerability of individual credential types.
      E.g. what-you-know credentials (such as passwords) are easily phished, while what-you-have credentials may be lost or stolen.
      Multi-factor authentication solves the problem by combining several credential types, making combined authentication stronger.
  seeAlso: [ 'authentication', 'credential' ]
  upkeepStatus: yellow

- id: microcertification
  term: Microcertification
  alternativeTerms:
  description: >
      Microcertification is a form of access certification (access review), limited to a single user or privilege.
      The basic idea of micro-certification is to limit the huger effort associated with traditional certification campaigns.
      Microcertifications are usually automatically triggered by specific events, such as user re-assignment in organizational structure, or increase of user's overall risk above tolerable threshold.
  seeAlso: [ "access-certification", "least-privilege", "over-provisioning" ]

- id: minimal-disclosure
  term: Minimal Disclosure
  alternativeTerms: [ 'Minimal Disclosure of Personal Information' ]
  iso24760Term: minimal disclosure
  description: >
      A principle, stating that only the minimal amount of information is disclosed as is required to perform a specific function or provide a service.
      Minimal disclosure principle is often used in cross-domain data transfer, such as when using identity providers or identity federations.
      Only the information required to perform a service is disclosed to the other party, no extra information is provided.
  example: >
      A service that provides notification using a mobile text messages can request only a mobile telephone number of the person, as that is required to send the notification.
      Such service must not request person's name, e-mail address or any other information.
  seeAlso: [ "digital-identity", "personal-data-protection", "privacy", "identity-provider", "identity-federation", 'selective-disclosure' ]
  upkeepStatus: green

- id: monitoring
  term: Monitoring
  alternativeTerms:
  iso27000Term: monitoring
  description: >
      Systematic effort to continuously determine status of a process, system or activity.
  example:
  seeAlso:
  upkeepStatus: yellow

- id: mutual-authentication
  term: Mutual Authentication
  alternativeTerms:
  x1252Term: mutual authentication
  description: >
      Authentication process in which all involved parties authenticate to all other parties.
      Usually a two-sided process, where both sides of a connection authenticate to each other, i.e. server authenticates to client and client authenticates to server.
  example:
  seeAlso: [ "mutual-authentication" ]
  upkeepStatus: green

- id: near-miss
  term: Near miss
  nis2Term: near miss
  description: >
      An event that could have compromised the security of systems, data or services that did not materialise.
  example:
  seeAlso: [ 'cyberattack', 'cybersecurity-incident' ]
  upkeepStatus: yellow

- id: ngac
  term: Next Generation Access Control
  acronym: "NGAC"
  description: >
      A graph-based mechanism for managing of user access to information systems.
      NGAC specifies directed acyclic graph for user and concepts related to them (e.g. organizational units), and a separate directed acyclic graph for objects and and concepts related to them (e.g. folders).
      Access control decisions are reached by evaluating the two directed acyclic graphs with respect to policy classes, and operations specified as relations between the graphs.
      NGAC is specified in NIST publications (e.g. INCITS 499: Information technology - Next Generation Access Control - Functional Architecture)
  example:
  seeAlso: [ "access-control", "rebac" ]

- id: non-compliance
  term: Non-compliance
  alternativeTerms: [ 'Noncompliance', 'Nonconformity', 'Violation' ]
  iso27000Term: nonconformity
  description: >
      State of non-fulfilment of a requirement, such as violation of a requirement stated in a policy, regulation or standard.
  example:
  seeAlso:
  upkeepStatus: green

- id: non-repudiation
  term: Non-repudiation
  alternativeTerms:
  x1252Term: non-repudiation
  iso27000Term: non-repudiation
  description: >
      Non-repudiation is an ability to prove that an event happened, including proof of the originating parties.
      Non-repudiation is a property of a system, protecting against denial from one of the parties.
      The involved parties cannot deny that an action took place.
  example: >
      Digital signatures often provide non-repudiation in such a way, that an entity that have created the signature cannot deny that the signature was created.
  seeAlso:
  upkeepStatus: green

- id: objective
  term: Objective
  alternativeTerms: [ 'Goal' ]
  iso27000Term: objective
  description: >
      Intended result of an activity or process.
  example:
  seeAlso:
  upkeepStatus: green

- id: offboarding
  term: Offboarding
  alternativeTerms: [ 'Off-boarding' ]
  description: >
      Business process that takes place when a person leaves an organization.
      The aim of offboarding is making sure that the person no longer has access to sensitive data and premises of the organization.
      From IT point of view, this often means identity de-provisioning, e.i. deactivation of user accounts in various applications, databases and identity data stores.
      This process is often automated using an identity management system.
      However, a complete offboarding process is usually more complex, including non-IT steps such as returning the provided equipment.
  example:
  seeAlso: [ 'identity-deprovisioning', 'joiner-mover-leaver' ]
  upkeepStatus: green

- id: onboarding
  term: Onboarding
  alternativeTerms: [ 'On-boarding' ]
  description: >
      Business process that takes place when a new person enters an organization.
      The aim of onboarding is making sure that the person is well-equipped for any tasks and activities within the organization.
      From IT point of view, this often means identity provisioning, e.i. creation of user accounts in various applications, databases and identity data stores.
      This process is often automated using an identity management system.
      However, a complete onboarding process is usually more complex, including non-IT steps such as providing the person with appropriate equipment and training.

      The terms "enrollment", "registration" and "onboarding" are overlapping and they are often used as synonyms.
      Strictly speaking, "enrollment" is the verification process, "registration" is an act of recording information to data store,
      and "onboarding" is a complete business process making sure that a new person in an organization is well-equipped for activities within the organization.
  example:
  seeAlso: [ "enrollment", "identity-registration", 'identity-provisioning', 'joiner-mover-leaver' ]
  upkeepStatus: green

- id: open-source
  term: Open Source
  acronym: "OSS"
  alternativeTerms: [ "Open Source Software", "FOSS", "Free and Open Source Software" ]
  description: >
    The meaning of this term is very simple - it is something people can wilfully modify according to their own needs or wishes.
    Firstly, this term was known in the context of software, which code was publicly exposed and available for modification.
    Later open source spread widely.
    There are open source projects, products, participations and many others.

    Many organizations and people choose open source software, hence it is considered to be more secured and grants people more control over it.
    This software can also be more stable as many other people may contribute their own ideas, correct it or improve it.

    Open source products are free and the creators usually charge other organizations for support or software services as implementation or deployment.
  example: >
    There are many open source software or systems available on the market.
    One of the best known is perhaps Linux, a computer operating system with the penguin logo.
    Anyone can download it and adjust its code according to one’s own needs.
  seeAlso:

- id: org
  term: Org
  midPointDescription: >
      Org is a type of midPoint objects, object that represent various forms of organizational units and structures.
      Org can represent company, division, section, project, team, research group or any other grouping of identities.
      Orgs are not limited to grouping people, orgs can be used to group most midPoint objects (any assignment holder object).
  seeAlso: [ 'organization', 'organizational-structure' ]
  readMore: /midpoint/reference/org/

- id: organization
  term: Organization
  alternativeTerms:
  iso27000Term: organization
  description: >
      Organization is an entity, usually representing a group of people, that has its objectives and methods to achieve them.
      Organizations may be or may not be legal entities.
  example: >
      Company, partnership, academic institution, partnership, co-op, interest group, and even single-person entity such as self-employed professional are considered to be organizations.
  seeAlso: [ 'org', 'organizational-structure' ]
  upkeepStatus: green

- id: organizational-structure
  term: Organizational Structure
  alternativeTerms:
  description: >
    A hierarchical arrangement of authority, rights or duties in an organization.
    It determines the assignment, control or coordination of roles, responsibilities and power.
    A character of the organizational structure is highly dependent on the organization’s strategy and goals.

    The theme of organizational structure is closely linked to identity management.
    Organizing the company into this structure, assigning rights to individuals, working groups or project and controlling everything from one place – that are advantages that any high quality IDM solution is supposed to provide.
  example: >
    An organization has production department, marketing department and support department.
    Above them there are managers and head of the company, below are working groups or particular employees.
    Altogether they create an organizational structure.
    Their power, rights and duties differ according to their position in the structure.
  seeAlso: [ 'organization', 'org' ]

- id: orphan-account
  term: Orphan Account
  alternativeTerms: [ 'Orphan', 'Orphaned Account' ]
  description: >
      An account without an owner, an account that does not seem to belong to anybody.
      In identity management, each account is supposed to have an owner, a user to whom the account belongs.
      An account without an owner is considered to be "orphaned", and it is usually deprovisioned (disabled or deleted).

      Orphan accounts often originate as testing accounts that are not deleted after the testing is done.
      They may also belong to former users, but were not properly deleted or disabled.
      Orphan accounts are almost always a security risk, especially testing accounts with weak passwords.
      Most identity management systems have processes that scan systems for orphan accounts.
  example:
  seeAlso: [ 'account', 'user', 'reconciliation' ]

- id: outsourcing
  term: Outsourcing
  alternativeTerms:
  iso27000Term: outsource
  description: >
      Outsourcing is a practice of delegating functions, tasks and responsibilities to an external organization.
  example:
  seeAlso:
  upkeepStatus: yellow

- id: over-provisioning
  term: Over-provisioning
  alternativeTerms: [ 'Over-permissioning', 'Over-privileged Access', 'Excessive Access', 'Excessive Privilege' ]
  description: >
      Situation when an identity has more privileges than are necessary for the tasks that the identity is supposed to carry out.

      Over-provisioning is generally undesirable, as it is a violation of least privilege principle which is introducing unnecessary risk.
      However, over-provisioning is a common occurrence, mostly due to high complexity of access control models, limited visibility, huge privilege maintenance effort or lack of appropriate security management practices.
  example:
  seeAlso: [ 'identity-provisioning', 'identity-deprovisioning', 'under-provisioning' ]

- id: pap
  term: Policy Administration Point
  acronym: 'PAP'
  alternativeTerms: [ 'Policy Management Point' ]
  description: >
      Functional component with a responsibility to specify, manage and maintain the policy.
      The "policy" usually refers to access control and/or authorization policy.
      PAP is an administrative point, which is creating and managing the policy.
      The policy is then stored at policy retrieval point (PRP).
      Policy administration point (PAP) can be part of applications, or they may be provided by dedicated infrastructure components (identity management and governance components).
      PAP specifies the policy, usually as a result of interaction with an administrator by the means user interface.
      PAP does not make policy decisions or enforce them, that is a responsibility of policy decision point (PDP) and policy enforcement point (PEP) respectively.

      Note: The acronym PAP may also refer to Policy Access Point, which is an alternative name for Policy Retrieval Point (PRP), making the terminology somehow confusing.
  example:
  seeAlso: [ 'authorization', 'access-control', 'pep', 'pdp', 'pip', 'prp', 'iga' ]

- id: passkey
  term: Passkey
  description: >
      Passkey is a type of strong digital credential.
      They are used to authenticate a user to information systems, identity provides and applications.
      Passkeys are based on public key cryptography, making them relatively strong and secure.
      They may be provided in a hardware form (e.g. a small USB device), or managed entirely in software (e.g. mobile application).
      Passkeys are bound for each website or application, making them phishing-resistant.
  seeAlso: [ 'credential', 'pin' ]

- id: password
  term: Password
  alternativeTerms: [ "Passcode" ]
  description: >
      Password is a type of (usualy weak) digital credential, meant to be secret, known only to a single user.
      Passwords are memorized secret authenticators, usually selected by users, meant to be remembered.
      Therefore, they are often short strings in a human-friendly form, such as simple words or names.
      Simplicity of passwords makes them vulnerable to dictionary attacks.
      Recently, passwords are randomly generated, managed by password management applications.
      However, even randomly-generated passwords may still be vulnerable to phishing attacks.
      Therefore organizations are moving towards authentication methods that do not depend on passwords (e.g. passkeys), or enroll multi-factor authentication schemes.
  seeAlso: [ 'authenticator', 'memorized-secret-authenticator', 'credential', 'password-management', 'password-policy', 'passkey' ]

- id: passwordless-authentication
  term: Passwordless authentication
  alternativeTerms: [ "Passwordless" ]
  description: >
      Passwordless authentication is an authentication that does not use passwords, or similar knowledge-based credential.
      It is usually considered to be a stronger form of authentication that the usual password-based authentication.
      Password-less authentication mechanisms usually rely on public-key cryptography mechanisms.
  seeAlso: [ 'authentication', 'password', 'passkey', 'mfa' ]

- id: password-policy
  term: Password policy
  alternativeTerms: [ "Password complexity policy" ]
  description: >
      Password policy constraints the selection and use of passwords with an aim to make them more secure.
      It almost always sets requirements for password complexity, such as minimal length of passwords and characted classes used in the password (e.g. letters, numbers, punctuation).
      Password policies often specify constraints on password lifetime, such as password expiration intervals.
  seeAlso: [ 'password', 'password-management' ]

- id: password-management
  term: Password Management
  alternativeTerms: [ "Credential management" ]
  description: >
      Gives the organization an opportunity to meet the highest security standards thanks to the ability of having access to business systems and networks under control.
      Most of the employees usually pick just simple passwords and use same ones in multiple systems or applications.
      Password management helps to compose strong and unique passwords for both users and resources and ideally takes care of them during the whole user life cycle.

      The term "password management" may also mean management of password on the user side, such as generating and storing of random passwords.
  example: >
      An organization works with midPoint and wishes to use its credential management feature to ensure the information safety.
      IT employee responsible for security sets midPoint’s password policy.
      He decides what characters are allowed in the password, how many times they can repeat, how many are required and how they are positioned.
      He sets minimal and maximal length of the password or minimal number of unique characters used in it.
      The outcome is complex and strong password that lowers the risk of the account being hacked.
  seeAlso: [ 'password', 'credential' ]
  todo: needs review

- id: pbac
  term: Policy-Based Access Control
  acronym: 'PBAC'
  alternativeTerms: [ 'Dynamic Authorization Management', 'Policy as Code' ]
  description: >
      A mechanism for managing of user access to information systems based on policy.
      In PBAC, authorizations are supposed to be dynamically evaluated, based on policy specified in a machine-processable form.
      PBAC policy is an abstract concept, it is not clearly defined how it is expressed or evaluated.
      PBAC is meant to solve problems of static access control models such as RBAC.

      PBAC seems to be technically equivalent to ABAC.
      However, in contrast to ABAC, PBAC is supposed to contain "policy management" layer, which is not clearly defined either.

      Overall, PBAC is an conceptual idea rather than a concrete access control model.
      It is still in early stages of development.
  example:
  seeAlso: [ 'authorization', 'abac', 'rbac', 'pdrbac' ]

- id: pep
  term: Policy Enforcement Point
  acronym: 'PEP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to enforce policy decisions.
      The "policy" usually refers to access control and/or authorization policy.
      Policy enforcement points are usually part of applications or infrastructure components, with an ability to analyze and intercept policed operation.
      Policy enforcement point only enforces the policy, it does not interpret or decides the policy.
      PEP depends on policy decision point (PDP) to interpret the policy and make a decision.
  example:
  seeAlso: [ 'authorization', 'access-control', 'pdp', 'pap' ]

- id: performance
  term: Performance
  alternativeTerms:
  iso27000Term: performance
  description: >
      Performance is a measure of a result.
      In process management, it a measure of how well is a process or activity achieving its objectives.
      The term "performance" may also meat a measure of efficiency of a computer system, describing how quickly it can provide results and how much resources it needs to perform a task.
  example:
  seeAlso:
  upkeepStatus: yellow

- id: perimeter
  term: Perimeter
  alternativeTerms: [ 'Security perimeter', 'Information security perimeter', 'Network perimeter', 'Cybersecurity perimeter' ]
  description: >
      Security perimeter is a boundary that separates secure and insecure areas.
      In cybersecurity, "perimeter" separated insecure outer network (usually the Internet) and secure inner network (usually corporate network).
      The perimeter was usually implemented by physical protection of network devices and connections, inter-connecting networks by the means of dedicated security devices (firewalls, gateways).
      Security requirements were significantly reduced in the presumably-secure inner network, usually to the point of no tangible security at all.
      Access control inside the perimeter was often limited to access control based on network addresses (IP-based access control), or even no practical access control was implemented at all.

      Reliance on cybersecurity perimeter was a very common occurrence in early years of inter-network computing.
      However, concept of cybersecurity perimeter is fundamentally flawed, as computer networks are no longer bound to their physical form.
      Existence of virtual networking technologies, wireless networks, covert network channels and other technologies made cybersecurity perimeter unsustainable.
      This effect is further emphasized by move towards cloud services, that are located outside of classic security perimeter by their very nature.

      Overall, cybersecurity perimeter is considered flawed and insecure approach.
      Zero trust approach provides a broad conceptual movement to migrate from the concept of cybersecurity perimeter to more resilient and holistic cybersecurity approach that does not rely on concept of perimeter.
  example:
  seeAlso: [ "zero-trust" ]
  upkeepStatus: green

- id: persistent-identifier
  term: Persistent Identifier
  alternativeTerms: [ 'Non-reassignable identifier' ]
  description: >
      An identifier that cannot be changed or re-assigned to another identity.
      Once assigned, the identifier always references the same identity.
      Persistent identifiers are usually used as reference identifiers, and reference identifiers are usually persistent, resulting in "persistent reference identifiers".

      Depending on a policy, persistent identifiers can be re-assign to another identity after the original identity was deleted (identifier re-use).
      However, there is usually relatively long interval during which the identifier cannot be re-assigned.
  example:
      LDAP attribute entryUUID (RFC4530) or Active Directory attribute GUID are persistent identifiers, assigned to an entry by the directory system and never changed during entry's lifetime.
  seeAlso: [ 'identifier', 'reference-identifier' ]

- id: personal-data
  term: Personal Data
  alternativeTerms: [ 'Personal information', 'Identity data', 'Identity information', 'Personal profile' ]
  description: >
      Data about a person, usually processed in an information system.
      The definition of "personal data" slightly differ from case to case.
      For example, GDPR defines personal data as "any information which are related to an identified or identifiable natural person".
      However, the general understanding is that "personal data" are any data that relate to a natural person, that describe the person in some way.
      This is different from personally identifiable information (PII), as personal data may not uniquely identify a person.
      For example, person's full name is considered personal data, however, a name such as "John Smith" is not entirely unique or identifiable in most contexts.
  example:
  seeAlso: [ 'personal-data-protection', 'personally-identifiable-information', 'gdpr' ]

- id: personal-data-erasure
  term: Personal Data Erasure
  alternativeTerms: [ 'Erasure', 'Data erasure' ]
  description: >
      Erasure (deletion) of personal data, usually due to explicit request from user (e.g. "delete account" request), or due to lack of lawful basis for personal data processing.
  example:
  seeAlso: [ 'personal-data-protection', 'personal-data', 'personal-data-processing-basis', 'gdpr' ]

- id: personal-data-processing-basis
  term: Personal Data Processing Basis
  alternativeTerms: [ 'Basis for processing', 'Legal basis', 'Lawful basis' ]
  description: >
      Basis for processing of personal data.
      Legal data protection frameworks (such as GDPR) usually mandate that personal data cannot be processed unless there is a basis for that processing.
      The basis may be a contract, legal obligation, consent, or similar legitimate interest for processing of the data.
      Some frameworks (such as GDPR) are enumerating the available processing bases.
  example:
  seeAlso: [ 'personal-data-protection', 'personal-data', 'gdpr' ]

- id: personal-data-protection
  term: Personal Data Protection
  alternativeTerms: [ 'Data Protection', 'DP' ]
  description: >
      Personal data protection is a field dealing with protection of personal information, rules for their processing, storage and erasure.
      It is closely related to privacy, as one of the main goals of personal data protection is to limit exposure of personal data, thus minimizing potential for their abuse.
  example:
  seeAlso: [ 'personal-data', 'gdpr' ]

- id: personally-identifiable-information
  term: Personally Identifiable Information
  acronym: PII
  alternativeTerms: [ 'Personal identifiers' ]
  x1252Term: personally identifiable information
  description: >
      Information that allows a person to be (directly or indirectly) identified.
      Obviously, government-issued identifiers, such as birth numbers, social security numbers or serial numbers of various identity documents are usually considered to be personally identifiable information.
      However, interpretation of what information is "personally identifiable" depends on the context.
      Even a simple full name of a person may be considered personally identifiable information in some contexts.
      Personally identifiable information usually require special protection or processing regime.
      Personally identifiable information should not be confused with personal data.
      PII are used as an identifier, pointing out a specific person in a group of other persons.
      Personal data describe certain person, there is no requirement for personal data to be "identifiable".
  example:
  seeAlso: [ 'personal-data' ]

- id: pdp
  term: Policy Decision Point
  acronym: 'PDP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to interpret policy and make decisions.
      The "policy" usually refers to access control and/or authorization policy.
      Policy decision point (PDP) can be part of applications, or they may be provided by dedicated infrastructure components (authorization services).
      PDP interprets the policy and make a decision, which is usually allow/deny decision.
      PDP does not enforce the decision, it relies on policy enforcement point (PEP) to enforce it.
      PDP does not define or manage the policy either, it depends on policy administration point (PAP) to set the policy.
  example:
  seeAlso: [ 'authorization', 'access-control', 'authorization-service', 'pep', 'pap', 'pip' ]

- id: pdrbac
  term: Policy-Driven Role-Based Access Control
  alternativeTerms: "PDRBAC"
  description: >
      A mechanism for managing of user access to information systems based on a concept of dynamic roles and policies.
      It is an extension of traditional Role-Based Access Control (RBAC), applying dynamic policies to govern behaviour and assignment of roles.
      In policy-driven RBAC, roles are no longer static, they contain logic that determines set of privileges given by the role.
      The user-role assignments are also dynamic, controlled by automatic role assignment policies.
  example:
  seeAlso: [ "rbac", "role", "entitlement", "role-management", "access-control" ]
  readMore: /midpoint/reference/roles-policies/pdrbac/

- id: pin
  term: Personal identification number
  acronym: 'PIN'
  description: >
      Personal identification number (PIN) is a type of authenticator, meant to be secret, known only to a single user.
      They are almost always in a form of short numbers (4-8 digits).
      PINs are memorized secret authenticators.
      Even though most PINs are randomly generated, they are meant to be remembered by the users.
      Simplicity of PINs makes them vulnerable to enumeration attacks when used on their own.
      Therefore PINs they are almost exclusively used in combination with other authenticators.
      E.g. PINs are often used to protect strong authenticators/credentials, such as passkeys or public key credentials stored on smart cards.
  seeAlso: [ 'authenticator', 'memorized-secret-authenticator', 'credential', 'passkey' ]

- id: pip
  term: Policy Information Point
  acronym: 'PIP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to provide additional information for policy decision point (PDP).
      PIP is usually retrieving data from identity data stores, providing them to PDP in form of attributes.
  example:
  seeAlso: [ 'authorization', 'access-control', 'pdp', 'pap', 'pep', "identity-data-store", "digital-identity-attribute" ]

- id: policy
  term: Policy
  iso27000Term: policy
  description: >
      Policy is a system of guidelines or rules used to reach an objective or a decision.

      Unfortunately, "policy" is a heavily overloaded term with numerous of meanings.
      It may mean organizational policy, a set of high-level guidelines interpreted by people to guide their decisions.
      Policy may be formal, written down in a form that can be strictly followed, where compliance with a policy can be evaluated.
      It may also be informal, expressed in non-exact form, specifying a vague objective and methods.
      Policy may also mean machine-processable and executable code, used to quickly reach authorization decisions in run-time.
  example:
  seeAlso: [ 'policy-management', 'access-control', 'authorization' ]
  upkeepStatus: yellow
  todo: expand

- id: policy-management
  term: Policy Management
  alternativeTerms: [ 'Management of Authorization Policies', 'Policy and Role Management' ]
  description: >
      Set of operations defining the authorization roles or policies, or assigning roles to the particular users.
      This is often manual or semi-manual operation performed in identity management system or identity data store.
      Policy management is implementing the functionality of Policy Administration Point (PAP).

      This term is often confused with authorization itself.
      However, policy management aims at definition of the policy, while authorization is interpreting the policy.
  example:
  seeAlso: [ 'policy', 'authorization' ]
  readMore: /iam/iga/policy-and-role-management/

- id: polystring
  term: Polystring
  alternativeTerms:
  description: >
      A built-in data type for polymorphic string maintaining extra values in addition to its original value.
      The extra values are derived from the original value automatically using a normalization code.
      PolyString supports national characters in strings.
      It contains both the original value (with national characters) and normalized value (without national characters).
      This can be used for transliteration of national characters in usernames.
      All the values are stored in the repository, therefore they can be used to look for the object.
      Search ignoring the difference in diacritics or search by transliterated value can be used even if the repository itself does not support such feature explicitly.
  example: >
      Organization has an employee called Ján Omáčka. Polystring derives extra values from the original one using normalization code.
      The original national characters “á” and “č” have their normalised equivalents “a” and “c”.
      His username with national characters is not a problem, as polystring deprecates the need to use custom conversion routines and therefore it brings some consistency into the integration code.
  seeAlso:

- id: principal
  term: Principal
  alternativeTerms: [ 'Subject' ]
  iso24760Term: principal
  x1252Term: principal
  description: >
      An entity or identity, information about which is managed in an information system.

      Usage of the term "principal" varies significantly.
      Depending on context, it may refer to entity (person), its identity or data structure describing parts of the identity (digital identity).
      In information security frameworks (such as X.509), "principal" usually refers to entity or identity, such as owner of credentials.
      In programming frameworks, "principal" usually refers to ephemeral information about user, maintained during user's session.
      This is usually different from "account", as accounts are usually persistent (stored in database),
      while principal may be ephemeral, or may refer to entities that are not users of the system (may not be able to log in).
      In some contexts, "principal" is equivalent to "subject".
  example:
  seeAlso: [ 'subject', 'holder', 'entity', 'identity', 'account' ]
  upkeepStatus: green

- id: prism
  term: Prism
  midPointDescription: >
      Prism is a name of a data representation library, which is used by midPoint to access data in its repository.
      The concepts of Prism permeates all of midPoint, giving structure to midPoint objects, and their representation in XML/JSON/YAML.
      Prism defines a concept of object, container, property, item, delta and many other useful concepts.
  seeAlso: [ 'delta' ]
  readMore: https://docs.evolveum.com/midpoint/devel/prism/

- id: privacy
  term: Privacy
  alternativeTerms:
  description: >
      The right to be left alone.
      In IT context, privacy is an ability of individuals to control the information about themselves, to choose how the information is used to express their individuality.
      Technologies that support the concept of privacy are known as privacy-enhancing technologies (PET).
  example:
  seeAlso: [ "privacy-enhancing-technology", "personal-data-protection" ]
  upkeepStatus: green

- id: privacy-enhancing-technology
  term: Privacy-Enhancing Technology
  acronym: PET
  alternativeTerms:
  description: >
      Technologies that support and enhance privacy.
      This usually means technologies that give an individual an effective control over personal data, and the way how these data are used to express one's individuality.

      Most privacy-enhancing technologies are focused on limiting the spread of personal data, making sure that only a minimal amount of data is disclosed (minimal disclosure),
      making sure that user approves data transfer (consent), using pseudonyms and various anonymization techniques to limit data exposure.

      Privacy-enhancing technologies are somewhat different from personal data protection technologies.
      While privacy-enhancing technologies are focused on limiting exposure of the data (secrecy),
      data protection technologies are focused on controlling the way how data are used.
  example:
  seeAlso: [ "privacy", "personal-data-protection", "minimal-disclosure", "pseudonym" ]
  upkeepStatus: green

- id: privacy-policy
  term: Privacy Policy
  alternativeTerms:
  x1252Term: privacy policy
  description: >
      A policy that sets rules for processing of personal data, respecting privacy of an individual.
  example:
  seeAlso: [ "privacy", "privacy-enhancing-technology" ]
  upkeepStatus: green

- id: private-key
  term: Private Key
  alternativeTerms:
  x1252Term: private key
  description: >
      In an asymmetric cryptosystem (a.k.a. "public-key cryptosystem), a part of the key pair that is known only to the key owner.
  example:
  seeAlso: [ "public-key" ]
  upkeepStatus: green

- id: privileged-entitlement
  term: Privileged entitlement
  alternativeTerms: [ 'Privileged access rights', 'Privileged access' ]
  description: >
      Entitlement (access right, privilege) that allows the performance of activities that typical entities in the system cannot perform.
      User with privileged entitlement can usually perform activities that goes far beyond usual usage of the system.
      Privileged entitlements may allow unrestricted access to data, allow modification of entitlements of other users, and often include destructive operations such as deletion of data sets.
      System administration privileges are almost always considered privileged entitlements.
  example:
  seeAlso: [ 'entitlement' ]
  upkeepStatus: green

- id: probability
  term: Probability
  alternativeTerms: [ 'Likelihood' ]
  iso27000Term: likelihood
  description: >
      Measure of a chance of an event happening.
  example:
  seeAlso: [ "risk", "risk-level" ]
  upkeepStatus: yellow

- id: process
  term: Process
  alternativeTerms:
  iso27000Term: process
  description: >
      Process is a structured and repeatable activity.
      Process usually consists of a sequence of steps, which may be interrelated and interactive, involving several parties.
      Unlike one-off activities such as projects, processes are meant to be repeatable, conducting the same or similar activities more than once, delivering similar results.
  example:
  seeAlso: [ 'project', 'program' ]
  upkeepStatus: yellow

- id: product-architecture
  term: Product Architecture
  alternativeTerms:
  description: >
      Concept, design and description of the products part which are assigned into subsystems.
      It is also way how these subsystems interact with each other.
  example:
  seeAlso:

- id: program
  term: Program
  alternativeTerms:
  description: >
      Program is a structured and continuous activity meant to maintain and improve a state.
      Programs are continuous, never-ending activities.
      They are often executed in cycles: analyzing situation, planning, implementing and validating the results.
      Programs are meant to continuously maintain and improve a certain state, such as appropriate level of cybersecurity.
  example: >
      Cybersecurity is program rather than a process or project.
      It is a never-ending activity meant to maintain and improve appropriate level of security, keeping risk at acceptable levels.
      Being a program, it never ends.
      The activities are repeated in endless identify-protect-detect-respond-recover cycles.
  seeAlso: [ 'process' ]
  upkeepStatus: yellow

- id: project
  term: Project
  alternativeTerms:
  description: >
      Project is a structured and unique activity meant to reach specific objectives.
      Process usually consists of a sequence of steps, which may be interrelated and interactive, involving several parties.
      Unlike repeatable activities such as processes and programs, projects are not meant to be repeated.
      Projects are designed to deliver a specific outcome, and to deliver it only once.
  example:
  seeAlso: [ 'process', 'program' ]
  upkeepStatus: yellow

- id: projection
  term: Projection
  midPointDescription: >
      Projection is a part of midPoint computation that represents the objects in identity resources, usually accounts, entitlements or organizational units.
      Projection are the "spokes" in hub-and-spoke (star) data synchronization in midPoint.
      Projections are represented in the computation in a form of shadows (shadow objects), usually supplemented with real-time data from the resource objects.
  seeAlso: [ 'shadow', 'focus', 'assignment' ]
  readMore: /midpoint/reference/schema/focus-and-projections/

- id: prp
  term: Policy Retrieval Point
  acronym: 'PRP'
  alternativeTerms: [ 'Policy Access Point' ]
  description: >
      Functional component with a responsibility to store and distribute policies for use by policy decision points (PDP).
      PRP acts as an repository for policy.
      The policy is usually stored persistently at PRP, e.g. in a form of a file or database.
      Primary responsibility of PRP is to make policy available to policy decision points (PDP), either by "pull" (PDP retrieving the policy from PRP) or by "push" (PRP sending the policy to PDP).
      PRP is instrumental in enabling distributed architecture with several PDPs.

      Note: PRP is only storing and distributing the policy, it is not responsible for policy creation or management.
      Policy management is responsibility of policy administration point (PAP).
  example:
  seeAlso: [ 'authorization', 'access-control', 'pdp', 'pap', 'pep', 'pip' ]

- id: pseudonym
  term: Pseudonym
  alternativeTerms:
  iso24760Term: pseudonym
  x1252Term: pseudonym
  description: >
      An identifier designed to avoid any inherent information about identity or entity.
      Pseudonyms are meant to hide or modify perception of the entity or identity, as presented to other parties.

      In user experience sense, pseudonyms can be chosen by the user to hide or alter their real identity in information systems.

      In implementation sense, pseudonym is often a randomly-generated identifier, used selectively for communication with specific domain or system.
      The pseudonym is used instead of other identifiers to avoid possibility of the other party to reveal parts of user's identity or correlate user's actions.
  example:
  seeAlso: [ "identifier", "personal-data-protection", "privacy" ]
  upkeepStatus: green

- id: public-key
  term: Public Key
  alternativeTerms:
  x1252Term: public key
  description: >
      In an asymmetric cryptosystem (a.k.a. "public-key cryptosystem), a part of the key pair that can be shared with other entities.
  example:
  seeAlso: [ "private-key" ]
  upkeepStatus: green

- id: rbac
  term: Role-Based Access Control
  acronym: "RBAC"
  description: >
      A mechanism for managing of user access to information systems based on a concept of roles.
      Role-Based Access Control (RBAC) is using roles to group permissions.
      Roles usually represent meaningful entities, such as job positions, organizational affiliations or similar business concepts.
      One of the basic assumptions of RBAC is that management of roles is much easier than management of individual permissions.

      A form of RBAC is standardized in a series of NIST standards (ANSI/INCITS 359-2004, INCITS 359-2012).

      RBAC is mostly concerned with using the roles to control user access to the system and other information assets.
      Role definitions are usually maintained using a somehow separate "Role Management" mechanisms.

      Traditional RBAC models are static: user-role and role-permission relations are fixed, set up by system administrator.
      Newer RBAC models are dynamic (policy-driven): user-role and role-permission relations may be dynamic, determined by policy (algorithm).
  example:
  seeAlso: [ "role", "entitlement", "role-management", "access-control", "role-explosion", "pdrbac" ]
  readMore: /iam/rbac/

- id: reconciliation
  term: Reconciliation
  alternativeTerms:
  description: >
      In identity management, reconciliation is a process of comparing recorded state od identity management system with a real state of identity resources.
      In the most common form, reconciliation is comparing user data stored in identity management database with account data stored in identity resource (source or target systems).
      Reconciliation is meant to detect differences in the data, including detection of orphaned accounts.

      Reconciliation is usually quite heavyweight, yet very reliable mechanism of identity data synchronization.
  seeAlso: [ 'account', 'user', 'orphan-account' ]

- id: rebac
  term: Relationship-Based Access Control
  acronym: "ReBAC"
  description: >
      A mechanism for managing of user access to information systems based on a concept of relationship.
      Relationship-Based Access Control (ReBAC) is defined by presence of relationship between objects, such as "owner" or "editor".
      The relationships are interpreted by an access control policy to form access control decisions.
  midPointDescription: >
      MidPoint has a concept of "relation" that can be used together with assignment/inducement mechanism to implement ReBAC access control structures.
  example:
  seeAlso: [ "access-control", "relation", "ngac" ]

- id: reference-identifier
  term: Reference Identifier
  acronym: RI
  alternativeTerms: [ 'Non-reassignable identifier' ]
  iso24760Term: "reference identifier"
  description: >
      An identifier that reliably references an identity in a particular scope.
      Once assigned, the identifier always references the same identity, it cannot be assigned to a different identity.
      Reference identifiers are often persistent, however, they can change, as long as the identifier is not re-assigned to other identity.

      Depending on a policy, reference identifiers can be re-assign to another identity after the original identity was deleted (identifier re-use).
      However, there is usually relatively long interval during which the identifier cannot be re-assigned.
  example:
      National identifiers and social security numbers (SSN) are usually reference identifiers, assigned to a person and referencing only that single person.
      Such identifiers can change on rare occasions, however the old values are not used to reference any other person.
  seeAlso: [ 'identifier', 'persistent-identifier', 'reference-identifier-generator' ]
  upkeepStatus: green

- id: reference-identifier-generator
  term: Reference Identifier Generator
  alternativeTerms:
  iso24760Term: "reference identifier generator"
  description: >
      ISO 24760 term, used to describe the tool that generates reference identifier, usually during an enrollment and registration.
  example:
  seeAlso: [ 'reference-identifier', 'enrollment', 'identity-registration' ]
  upkeepStatus: green

- id: referential-integrity
  term: Referential Integrity
  alternativeTerms:
  description: >
      Consistency constraint in a database, mandating that every reference points to a valid object.
      Simply speaking, when an identifier is used to reference another object, such objects should exist.

      Referential integrity is often a concern in group management and directory services.
      Systems that provide referential integrity make sure that a group points to valid members (user that exist), or that a list of user groups points to valid groups.
      In case a user who is a member of a group is removed, a system with referential integrity will either automatically remove the user from the group, or it will deny the operation until user is explicitly removed from all groups first.
      Systems that do not provide referential integrity would allow such operation, leaving invalid identifier in the database, an identifier that does not point to any existing object.
  example:
  seeAlso: [ 'schema', 'digital-identity-attribute', 'verification' ]

- id: registration-authority
  term: Registration Authority
  acronym: RA
  alternativeTerms:
  iso24760Term: registration authority
  description: >
      An entity that gathers and verifies identity information, for the purposes of enrollment and identity registration.
      Registration authority is usually the organization that carries out identity proofing by verifying identity evidence, such as national identity cards.
  example:
  seeAlso: [ "identity-registration", "enrollment", "identity-proofing", "identity-evidence" ]
  upkeepStatus: green

- id: relation
  term: Relation
  midPointDescription: >
      MidPoint concept of "relation" can parametrize a reference between two objects, further specifying the relation between them.
      It is usually used in assignment/inducement to provide details about the relationship of the holder and target objects.
      For example, relation is used to specify role owners, approvers and organizational unit managers.
      Relation can also be used to implement relationship-based access control (ReBAC) mechanism in midPoint.
  example:
  seeAlso: [ "access-control", "assignment", "inducement", "rebac" ]
  readMore: https://docs.evolveum.com/midpoint/reference/concepts/relation/

- id: reliability
  term: Reliability
  alternativeTerms:
  iso27000Term: reliability
  description: >
      Property of a system to behave consistently and deliver expected results.
  example:
  seeAlso: [ 'availability' ]
  upkeepStatus: green

- id: relying-party
  term: Relying Party
  acronym: RP
  alternativeTerms: [ 'Service Provider' ]
  iso24760Term: relying party
  x1252Term: relying party
  description: >
      System that relies on other party (identity provider) to provide identity information.
      Relying party (also known as "service provider") usually relies on identity provider to authenticate the user, and relay the information to the relying party.
      Relying party has no access to credentials (e.g. passwords), it only knows that the authentication was successful.
      Identity provider may transfer identity attributes and additional information (such as authorization decisions) to the relying party.
      Relying party usually has a trust relationship with identity provider.
  example:
  seeAlso: [ 'identity-provider', 'sso', 'identity-federation' ]
  upkeepStatus: green

- id: remediation
  term: Remediation
  alternativeTerms: [ 'Correction' ]
  iso27000Term: correction
  description: >
      Remediation is an action to eliminate violation of a policy, or a non-compliance with regulation or a standard.
      Remediation is usually a manual action that is addressing the effects, specific cases of non-compliance.
      E.g. violation of segregation of duties can be remediated by removing one of the conflicting roles or responsibilities.
  seeAlso: [ 'compliance', 'corrective-action' ]
  upkeepStatus: yellow

- id: repository
  term: Repository
  alternativeTerms: [ "MidPoint repository" ]
  description: >
      A database, often a database of self-contained objects.
      In identity and access management context, it usually means a database of identity information.
  midPointDescription: >
      MidPoint internal database. It is used to store all internal midPoint data and the vast majority of midPoint configuration.
  example:
  seeAlso:

- id: requirement
  term: Requirement
  alternativeTerms:
  iso27000Term: requirement
  description: >
      Requirement is a need or expectation that is stated or implied.
      Requirements are usually specified by legislation, regulation or standards.
      Also, requirements are usual part of software specifications or contracts.
      Although most of the requirements are expected to be explicitly stated, there may be implied requirements, given by usual practice or common expectations.
  example:
  seeAlso: [ 'compliance' ]
  upkeepStatus: green

- id: residual-risk
  term: Residual risk
  alternativeTerms: [ 'Retained risk' ]
  iso27000Term: residual risk
  description: >
      Residual risk is a risk that remains after risk treatment.
      It is a risk that was not eliminated during a cybersecurity activities.
      As it is practically impossible to eliminate risk completely, some residual risk has to be accepted, as part of the usual cybersecurity program.
  example:
  seeAlso: [ 'risk', 'risk-acceptance' ]
  upkeepStatus: yellow

- id: resource
  term: Resource
  alternativeTerms: [ "Information Resource", "Data Resource" ]
  description: >
      In generic terms, a Resource is any information asset, system or a service that can be meaningfully used to obtain an information, or to initiate an action.
      Web resources are often used to access information across World Wide Web, e.g. in a form of RESTful interfaces.
      In IAM field, a Resource (Identity Resource) is usually a network-accessible asset capable of managing identity information.
  midPointDescription: >
      A Resource is a system that is either identity data source or provisioning target.
  example:
  seeAlso: [ "identity-resource" ]

- id: rest
  term: REST
  alternativeTerms: Representational State Transfer
  description: >
      Architectural style that describes fundamental principles of World Wide Web (WWW).
      REST architectural style was used to develop HTTP protocol, fundamental building block of WWW.
      REST specifies a concept of resource (web resource), identified by Unified Resource Locator (URL), access by unified interface.
      Although REST is designed for hypertext applications, some REST principles are used for general-purpose programming interfaces, known as "RESTful" services or APIs.
  example:
  seeAlso: [ 'restful-service', 'api', 'resource' ]

- id: restful-service
  term: RESTful Service
  alternativeTerms: [ 'REST Service', 'REST API' ]
  description: >
      Usually a general-purpose programming interface (API) or network service, exposed by one application to be used by another application.
      RESTful services are based on operations of HTTP protocols such as GET, PUT and POST.
      RESTful services are using Unifier Resource Locators (URLs) as addressing scheme, and also for the purposes of conveying some parameters.
      Despite the name, RESTful services actually do not strictly follow principles of REST architectural style.
      REST architectural style is designed for use in hypertext applications, while most RESTful services are procedural in nature.
      Therefore most RESTful services adapt and bind the REST principles for their purposes.
      Despite such deformations, RESTful services provide a very popular method for application-to-application interaction over the Internet.
  example:
  seeAlso: [ 'rest', 'api' ]

- id: review
  term: Review
  alternativeTerms:
  iso27000Term: review
  description: >
      Review is an activity that aims at evaluation whether certain subject matter is adequate to achieve its objectives.
      Review often evaluates performance of a process, program, project or policy.
  example:
  seeAlso: [ 'access-certification', 'performance' ]
  upkeepStatus: yellow

- id: review-object
  term: Review object
  alternativeTerms:
  iso27000Term: review object
  description: >
      Review object is the subject matter reviewed by a review.
      It is usually a process, program, project or policy.
  example:
  seeAlso: [ 'review' ]
  upkeepStatus: yellow

- id: review-objective
  term: Review objective
  alternativeTerms:
  iso27000Term: review objective
  description: >
      Review objective is a statement describing the intended results of a review.
  example:
  seeAlso: [ 'review' ]
  upkeepStatus: yellow

- id: risk
  term: Risk
  alternativeTerms:
  iso27000Term: risk
  nis2Term: risk
  description: >
      Effect of uncertain, unforeseen, unknown or unknowable effects on objectives.
      Risk may originate from the fact that the effects are inherently uncertain, such as short-term fluctuations of the markets.
      However, many forms of risk stem from lack of knowledge or understanding, such as lack of knowledge about capabilities of attackers.
      While risk includes both positive and negative uncertain effects, almost all activities in cybersecurity deal with negative effects of risk.

      In cybersecurity risk assessment and modeling, risk is associated with the impact of threats, exploiting vulnerabilities of information assets.
  example:
  seeAlso: [ "risk-level" ]

- id: risk-acceptance
  term: Risk acceptance
  alternativeTerms:
  iso27000Term: risk acceptance
  description: >
      Risk acceptance is a decision to accept a particular (residual) risk.
      As it is practically impossible to eliminate risk completely, some residual risk has to be accepted, as part of the usual cybersecurity program.
      Risk acceptance is usual part of risk treatment process.
      Even though a risk is accepted, it does not mean it is forgotten.
      Accepted is should be subject to monitoring.
  example:
  seeAlso: [ "risk", 'residual-risk', 'monitoring' ]

- id: risk-analysis
  term: Risk analysis
  alternativeTerms:
  iso27000Term: risk analysis
  description: >
      Risk analysis is a systematic process to understand the nature and extent of risk, and to determine risk levels.
      It is a structured process, evaluating several aspects of risk.
      As risk is almost impossible to measure exactly, risk levels are often estimated during risk analysis.
  example:
  seeAlso: [ "risk", 'risk-level' ]

- id: risk-assessment
  term: Risk assessment
  alternativeTerms:
  iso27000Term: risk assessment
  description: >
      Risk assessment is a comprehensive process consisting of risk identification, risk analysis and risk evaluation.
      Risk treatment is a necessary part of risk management process.
  example:
  seeAlso: [ "risk", 'risk-analysis', 'risk-identification', 'risk-evaluation' ]

- id: risk-based-approach
  term: Risk-based approach
  alternativeTerms:
  description: >
      Risk-based approach is an approach to cybersecurity management based on systematic management of risk.
      It is based on controlled method to manage of risk in an organization.
      One of the primary principles of risk-based approach is an acceptance that risk cannot be completely eliminated.
      The risk has to be assessed, subjected to appropriate treatment, and residual risk has to be accepted.
  example:
  seeAlso: [ "risk", 'risk-management' ]

- id: risk-communication
  term: Risk communication
  alternativeTerms: [ 'Risk communication and consultation' ]
  iso27000Term: risk communication and consultation
  description: >
      Risk communication is a set of activities to communicate information about risk with interested parties (stakeholders).
      Communication may take form of consultation, communicating risk and risk-related information both ways.
      Purpose of risk communication is to improve decision processes related to risk and its impact on organization objectives.
  example:
  seeAlso: [ "risk", 'risk-assessment', 'interested-party' ]

- id: risk-criteria
  term: Risk criteria
  alternativeTerms:
  iso27000Term: risk criteria
  description: >
      Specification of requirements and other criteria used to evaluate risk.
      Legislation, regulation, standards and best practice are the usual baseline for risk criteria.
      However, specific risk criteria are determine by character, objectives and methods of a particular organization.
  example:
  seeAlso: [ "risk", 'risk-evaluation', 'compliance', 'requirement', 'policy' ]

- id: risk-evaluation
  term: Risk evaluation
  alternativeTerms:
  iso27000Term: risk evaluation
  description: >
      Risk evaluation is a process of comparing results of risk analysis to risk criteria.
      Result of risk evaluation is a decision whether risk is acceptable, or it has to be treated (eliminated or mitigated).
  example:
  seeAlso: [ "risk", 'risk-assessment', 'risk-criteria' ]

- id: risk-identification
  term: Risk identification
  alternativeTerms:
  iso27000Term: risk identification
  description: >
      Risk identification is a process of discovering and describing risks.
      It involves identification of risk sources and causes, which may be based on historical data or expertise.
  example:
  seeAlso: [ "risk", 'risk-assessment' ]

- id: risk-level
  term: Risk level
  alternativeTerms: [ 'Level of risk' ]
  iso27000Term: level of risk
  description: >
      Magnitude or measure of risk.
      Expression of risk level is heavily influenced by context.
      Risk levels can be quantitative, expressing risk level in a measurable and generally comparable quantities, such as perceptual probability or weighted monetary cost.
      Risk levels can also be qualitative, expressing risk level in a relative terms, such as "low", "medium" and "high".
      Risk levels may consider impact (consequence) or a risk, or it may be concerned solely with probability of a risk occurrence.
  example:
  seeAlso: [ "risk", "probability", 'risk-analysis' ]

- id: risk-management
  term: Risk management
  alternativeTerms:
  iso27000Term: risk management
  description: >
      Risk management is a broad set of coordinated activities aimed at control of risk in an organization.
      It includes formal risk management processes, as well as informal and implicit activities.
      Risk management is one of the basic mechanisms of cybersecurity.
  example:
  seeAlso: [ "risk", "risk-management-process", 'risk-based-approach', 'cybersecurity' ]

- id: risk-management-process
  term: Risk management process
  alternativeTerms:
  iso27000Term: risk management process
  description: >
      Risk management process is a systematic application of processes and methods for controlled management of risk in an organization.
      It is supposed to be based on formal specification of processes and policies.
      It is usually a circular, iterative process, going through analytical, implementation, monitoring and review phases.
      Risk management is one of the most important processes in cybersecurity.
  example:
  seeAlso: [ "risk", "risk-management", 'risk-based-approach', 'policy' ]

- id: risk-owner
  term: Risk owner
  alternativeTerms:
  iso27000Term: risk owner
  description: >
      Risk owner is a person who is responsible for a particular risk.
      It may be an owner of the system, certain privilege in a system, or owner of business process that is a source of risk.
      Risk owner is supposed to have accountability as well as authority to properly manage the risk.
  example:
  seeAlso: [ "risk", "risk-management-process" ]

- id: risk-treatment
  term: Risk treatment
  alternativeTerms: [ 'Risk mitigation', 'Risk elimination', 'Risk reduction', 'Risk prevention' ]
  iso27000Term: risk treatment
  description: >
      Risk treatment is an activity to address the risk.
      Ultimate goal of risk treatment is to lower overall risk to an acceptable level.
      Many methods can be used to treat the risk, including avoiding activities that are sources of risk, eliminating risk sources, lowering probability or impact of a risk, redirecting risk to another party, or accepting the risk.
      Risk treatment is a necessary part of risk management process.
  example:
  seeAlso: [ "risk", "risk-management-process", 'risk-assessment' ]

- id: role
  term: Role
  alternativeTerms:
  x1252Term: role
  description: >
      Abstract concept that usually groups entitlements (privileges, access rights) in a single object.
      The purpose of grouping entitlements in roles is to make access control policies manageable, usually using Role-Based Access Control (RBAC) principles.
  example:
  seeAlso: [ "entitlement", "rbac", "role-management" ]

- id: role-explosion
  term: Role Explosion
  alternativeTerms:
  description: >
      Unreasonable multiplication of the number of roles in role-based access control (RBAC) systems.
      Role explosion occurs due to a combination of several causes, poor role management practices and cartesian product in role definitions are perhaps the most common.
      It occurs mostly in static RBAC models, dynamic RBAC models have methods to avoid role explosion.
  example: >
      An organization has offices in New York, Paris and London. It has assistants, directors and supervisors. This leads to cartesian product, resulting in large number of roles: "New York Assistant", "Paris Assistant", "London Assistant", "New York Director", ...
  seeAlso: [ "rbac", "role-management" ]
  readMore: https://docs.evolveum.com/iam/role-explosion/

- id: role-management
  term: Role Management
  alternativeTerms: [ "Role Modeling", "Role Engineering" ]
  description: >
      A process of managing role definitions.
      It usually includes creating role definitions, maintenance of role definitions, adapting to changed environment and decommissioning role definitions.
      Role management is concerned with role definitions only, in contrast with Role-Based Access Control (RBAC), which is mostly concerned in using the definitions to control the access.
  example:
  seeAlso: [ "role", "rbac" ]

- id: schema
  term: Schema
  alternativeTerms: [ 'Data model', 'Identity model' ]
  description: >
      Description of a structure of information, such as description of data types, attribute names and types, attribute structure and multiplicity,
      often supplemented by additional information such as documentation and presentation metadata.

      In information systems designed to process identity information, the schema usually refers to structure of digital identity data,
      names of identity attributes, their types, multiplicity, optionality and similar properties.
  example:
  seeAlso: [ 'digital-identity-attribute', 'verification', 'referential-integrity' ]
  todo: expand

- id: secure-by-default
  term: Secure by Default
  alternativeTerms: [ 'Security by Default' ]
  description: >
      Software development principle, mandating that system or service should be secure from the moment of installation.
      Software and services should be distributed with a secure configuration.
  example: >
      Common practice of static and well-known initial passwords is a prime example of violation of the "security by default" principle.
  seeAlso: [ 'secure-by-design', 'secure-through-lifecycle' ]

- id: secure-by-design
  term: Secure by Design
  alternativeTerms: [ 'Security by Design' ]
  description: >
      Software development principle, mandating that security of software products and services should be built into the system from very early stages of design and development.
      Security should be an integral part of the design, rather than an after-thought.
      Functionalities of the system should be based well-established security practices and standards and reduced to the minimum required for operation.
  example:
  seeAlso: [ 'secure-by-default', 'secure-through-lifecycle' ]

- id: secure-through-lifecycle
  term: Secure Through Lifecycle
  alternativeTerms: [ 'Security Through Lifecycle' ]
  description: >
      Software development principle, mandating that system should be secure from its inception, through all its life all the way to decommissioning.
      System should always be in a secure configuration, never opening any vulnerabilities, not even in emergency situations.
  example:
  seeAlso: [ 'secure-by-design', 'secure-by-default' ]

- id: security-audit
  term: Security Audit
  alternativeTerms:
  x1252Term: security audit
  description: >
      Independent review of a system, in order to assess adequacy of security controls, evaluate compliance with policies, regulations and operational procedures.
  example:
  seeAlso:

- id: security-posture
  term: Security Posture
  alternativeTerms: [ 'Cybersecurity posture' ]
  description: >
      Security posture is the security status of an enterprise’s networks, information, and systems based on cybersecurity resources (e.g., people, hardware, software, policies)
      and capabilities in place to manage the defense of the enterprise and to react as the situation changes.
      It is a "big picture" of the state of cybersecurity in an organization.
  example:
  source: NIST
  seeAlso: [ 'cybersecurity' ]

- id: selective-disclosure
  term: Selective Disclosure
  alternativeTerms: [ 'Selective Disclosure of Personal Information' ]
  iso24760Term: selective disclosure
  description: >
      A mechanism that gives person a control over the sharing of data, usually between domains.
      Selective disclosure is sometimes applied in cross-domain data transfer, such as when using identity providers or identity federations.
      In case of data transfer, the user is prompted to select that data that can be disclosed to the other domain.
      This process is sometimes automatic, governed by a pre-defined data disclosure policy.
  example:
  seeAlso: [ "digital-identity", "personal-data-protection", "privacy", "identity-provider", "identity-federation", "minimal-disclosure" ]
  upkeepStatus: green

- id: self-asserted
  term: Self-Asserted
  alternativeTerms:
  description: >
      An assertion (claim) made by an entity about itself.
      It usually means a claim that was not verified or certified by any other party.
  example:
  seeAlso: [ "self-asserted-identity" ]

- id: self-asserted-identity
  term: Self-Asserted Identity
  alternativeTerms:
  x1252Term: self-asserted identity
  description: >
      An identity (usually a digital identity) that an entity declares about itself.
      It usually means a set of digital identity attributes that an entity claimed about itself, without being verified of certified by any other party.
  example:
  seeAlso: [ "self-asserted", "decentralized-identifier", "identity-assertion" ]

- id: shadow
  term: Shadow
  alternativeTerms: [ 'Shadow Object' ]
  midPointDescription: >
      Shadow objects are objects in midPoint repository representing objects in identity resources, such as accounts or groups.
      Shadow objects are used by midPoint as a proxy objects, or data adapters for real accounts, groups or organizational units in identity resources.
      MidPoint stores identifiers of resource objects in shadow objects, together with meta-data, policy-related information and operational data that relate to the resource object that the shadows represent.
      The identifiers stored in shadow objects are used to locate the correct resource object even in cases that is renamed or it moves.
      Shadow objects may contain copies of the data of real resource objects.
      However, in default configuration, only identifiers are stored in shadow objects.
  seeAlso: [ 'projection' ]
  readMore: /midpoint/reference/resources/shadow/

- id: self-sovereign-identity
  term: Self-Sovereign Identity
  acronym: "SSI"
  alternativeTerms:
  description: >
      Self-sovereign identity is an approach to digital identity that gives individual control over their identity data.
      Without self-sovereign identity, individuals need to rely on (usually big and influential) organizations to manage their identity data, acting as identity providers.
      SSI systems are often decentralized, based on verifiable credentials stored in digital wallet which are under user's control.
  seeAlso: [ 'decentralized-identity', 'verifiable-credentials', 'identity-provider' ]

- id: sso
  term: Single Sign-On
  acronym: "SSO"
  alternativeTerms: [ "Single Log-On" ]
  description: >
    Single sign-on (SSO) is an authentication process based on user logging into multiple systems with single set of credentials (usually username and password)s.
    It is used for systems that require authentication for each application while using the same credentials.
    SSO works on central service from where the user gains access to different applications without logging in again.

    Unlike identity providers, SSO systems usually operate within a single domain.
    Both the SSO server and the applications being controlled by the same organization.
    Implicit trust of such arrangement allows SSO systems to be much simpler than identity federation systems, albeit both classes of systems provide similar services and mechanisms.
  example: >
    Tom has a Google account which he has logged in to and receives a Google Accounts-generated cookie.
    He wishes to enter Google Drive.
    After that, he is redirected to his Google account which sees that Tom already has an authentication-related cookie, so he is redirected to Google Drive.
  seeAlso: [ 'authentication', 'identity-provider', 'identity-federation' ]

- id: standard
  term: Standard
  alternativeTerms: [ "Technical standard", "Technology standard", "Official standard" ]
  nis2Term: standard
  description: >
      Technical specification, adopted by a recognised standardisation body, for repeated or continuous application, with which compliance is not compulsory.
  example:
  seeAlso: [ 'technical-specification' ]

- id: static-entitlement
  term: Static Entitlement
  alternativeTerms: [ "Standing Privilege", "Standing Entitlement", "Persistent Privileges" ]
  description: >
      An entitlement that is statically assigned to a user or an account.
      The entitlement stays ("stands") assigned to a user indefinitely, until it is explicitly unassigned.
      Static entitlement is assigned to a user by an action of system administrator, by the means of access request process or by similar means.

      Standing entitlement forms a basis of some access control models, most notably Role-Based Access Control (RBAC).
      Static nature of the entitlement assignment is often a target of critique, stating the lack of dynamics and flexibility of static entitlements.
      Policy-based access control models avoid use of standing entitlements in favor of entitlements that are determined dynamically in run-time.

      While static entitlements may be necessary at higher levels (especially identity governance level), they may not necessarily be reflected to lower levels (e.g. directory services and operating systems).
      Eliminating low-level standing privilege has several advantages, including lower risk of misuse and less visibility for the attacker.
      Just-in-time or on-demand mechanisms for temporary assignment of privileged access provides a solution for bridging high-level and low-level static entitlements.
  seeAlso: [ 'entitlement', 'access-control', 'rbac', 'pdrbac', 'abac', 'pbac' ]

- id: subject
  term: Subject
  alternativeTerms: [ 'Principal' ]
  description: >
      An entity or identity, which is active in information system, typically a user.
      It is assumed that subject has an agency, directly or indirectly.
      Subjects can represent organizations or similar "legal persons" that cannot act on their own, users have to act on their behalf.
      In this case the organization is the "subject", while the person that acts on organization behalf is the "user".

      The term "subject" is often used in context of authorization, as part of subject-action-object triple.
      Subject is the active part, a user executing certain action on a specific object.
      In some contexts, "subject" is equivalent to "principal".
  example:
  seeAlso: [ 'principal', 'user', 'entity', 'identity', 'account', 'authorization', 'holder' ]

- id: target-system
  term: Target System
  alternativeTerms:
  description: >
      In IAM field, it is any system in which identity management (IDM) system is managing identity data.
      IDM system is usually using identity connectors to manage data in target systems.

      Some target systems can also be (partial) identity data sources, IDM system both managing and reading the data.
  example:
  seeAlso: [ "identity-management-system", "identity-connector", "identity-data-source" ]

- id: technical-specification
  term: Technical specification
  nis2Term: technical specification
  description: >
      Document that prescribes technical requirements to be fulfilled by a product, process, service or system and which lays down characteristics, production methods or assessment criteria.
      Unlike standard, it is not required that technical specification is adopted by a recognized standardization body.
  example:
  seeAlso: [ 'standard' ]

- id: threat
  term: Threat
  alternativeTerms: [ 'Cyber threat', 'Security threat' ]
  iso27000Term: threat
  nis2Term: cyber threat
  description: >
      In cybersecurity, threat is a potential to cause harm or to endanger information assets or organization.
      Threats may be intentional, unintentional or completely natural.
      Many cybersecurity threats are materialized by motivated attackers, while other threats may be environmental (flooding, fire), or may be caused by a society or government actions.
  example:
  seeAlso: [ "risk", "asset", 'risk-assessment', 'cyberattack' ]

- id: top-management
  term: Top management
  alternativeTerms: [ 'Executive management', 'Board', 'Board of directors' ]
  iso27000Term: top management
  description: >
      Top management is a person or a group who controls the organization at the top level.
      Top management is ultimately responsible for allocation of resources, objectives and results of the organization.
  example:
  seeAlso: [ 'organization', 'organizational-structure' ]

- id: triangle-of-trust
  term: Triangle Of Trust
  alternativeTerms: [ 'Trust Triangle' ]
  description: >
      Triangle of trust is a three-party relationship of issuer, holder and verifier.
      Issuer issues credential or claim to the holder.
      Holder presents the credential/claim to the verifier.
      Verifier verifies the credential/claim, using data provided by the issuer.

      Triangle of trust is a frequently-used concept to support trust relationships in distributed information systems.
  example:
  seeAlso: [ "issuer", "holder", "verifier", "trusted-third-party" ]
  upkeepStatus: green

- id: trust
  term: Trust
  alternativeTerms:
  x1252Term: trust
  description: >
      Confidence in or reliance on some person or quality.
      In information technology world, it usually means a confidence in a correctness of an information.
      It is often a long-term relationship between entities, one of the entity trusting in correctness of a whole class of information claimed by other entity (trusted third party).
  example:
  seeAlso: [ "triangle-of-trust", "trusted-third-party" ]
  upkeepStatus: orange
  todo: expand

- id: trust-service
  term: Trust service
  alternativeTerms:
  nis2Term: trust service
  description: >
      Electronic service that issues a digital credentials, acting as a trusted third party.
  example:
  seeAlso: [ "trusted-third-party", "certificate-authority" ]
  upkeepStatus: orange
  todo: expand


- id: trusted-third-party
  term: Trusted Third Party
  alternativeTerms:
  x1252Term: trusted third party
  description: >
      An entity which makes a claims, claims that are trusted by other parties.
      Usually a central entity in a system that is trusted by many entities.
      In scenarios involving Triangle of Trust, the issuer is considered to be trusted third party.
  example: >
      Certificate authority is a trusted third party, many systems trusting the information presented in certificates issued by certificate authority.
  seeAlso: [ "trust", "triangle-of-trust", "issuer", "trust-service" ]
  upkeepStatus: orange
  todo: expand

- id: under-provisioning
  term: Under-provisioning
  alternativeTerms: [ 'Under-permissioning', 'Under-privileged Access' ]
  description: >
      Situation when an identity has less privileges than are necessary for the tasks that the identity is supposed to carry out.
      For example, a user does not have all the necessary permission to carry out his usual work tasks.
      Under-provisioning is an operational risk, leading to low workforce efficiency.

      Ideally, under-provisioning should be addressed by automated provisioning mechanism of identity management systems, such as utilization of birthright provisioning.
      However, due to a lack of clear access control policy, under-provisioning is often addressed by access request processes.
  example:
  seeAlso: [ 'identity-provisioning', 'birthright', 'access-request', 'over-provisioning' ]

- id: user
  term: User
  alternativeTerms: [ "MidPoint User" ]
  x1252Term: user
  description: >
    Generally speaking, a person that is using a computing system.
  midPointDescription: >
    A user means a data structure in midPoint that describes a person.
    Similar data structure in source/target system (identity resource) is called an "account".
  example:
  seeAlso: [ 'account', 'principal', 'subject' ]
  upkeepStatus: green

- id: user-centric
  term: User-Centric
  alternativeTerms:
  x1252Term: user-centric
  description: >
      A system that is oriented towards the user, having user in control.
      In identity and access management context it usually means a system, where users are in control of their data.
  example:
  seeAlso:
  upkeepStatus: green

- id: verifiable-credentials
  term: Verifiable Credentials
  acronym: VC
  alternativeTerms:
  description: >
      Credentials that can be presented by the holder to the verifier, and independently verified by the verifier, without cooperation of any third party.
      Verifiable credentials do not require verifier to cooperate with credential issuer to verify every single credential issued.
      Only the holder and the verifier are aware about the transaction, no other party has any data about the transaction.
      Some verifier-issuer communication may be necessary to establish or renew the trust.
      However, such communication is in no way related to the holder-verifier transaction.

      Verifiable credentials are often based on public key cryptography techniques.
      Holders keep verifiable credentials in digital wallets.
  seeAlso: [ 'credential', 'digital-wallet', 'self-sovereign-identity', 'decentralized-identity', 'triangle-of-trust' ]
  upkeepStatus: green

- id: verification
  term: Verification
  iso24760Term: verification
  x1252Term: verification
  description: >
      A process establishing that a particular information is correct, while the meaning of "information" and "correct" varies from context to context.
      When dealing with identity information, this usually means formal verification of identity attributes, checking the schema, identifier uniqueness and referential integrity.
      However, verification may mean deeper verification, such as checking that the information is true and up-to-date.
  example:
  seeAlso: [ 'verifier', 'digital-identity-attribute', 'schema', 'referential-integrity' ]
  upkeepStatus: green

- id: verifier
  term: Verifier
  iso24760Term: verifier
  description: >
      Entity that performs verification, usually a verification of an credential or a claim.
      In Triangle of Trust scenarios, the verifier verifies credentials/claims provided by the holder.
      Verifier may need information provided by the issuer of credential/claim to be able to complete the verification process.
  example:
  seeAlso: [ 'verification', "triangle-of-trust", "issuer", "holder", "trusted-third-party", "credential", "claim" ]
  upkeepStatus: green

- id: vulnerability
  term: Vulnerability
  alternativeTerms: [ 'Weakness' ]
  iso27000Term: vulnerability
  nis2Term: vulnerability
  description: >
      Vulnerability is an aspect of information asset that makes it vulnerable to damage or misuse.
      It is a weakness in the protection of an asset that can be exploited by a threat.
      In software development, vulnerability is a bug in software code that opens the software to cyberattacks.
  example:
  seeAlso: [ "risk", "threat", 'asset', 'risk-assessment', 'cyberattack' ]

- id: zero-trust
  term: Zero trust
  acronym: ZTA
  alternativeTerms: [ 'Zero-trust', 'Zero trust security model', 'Zero trust architecture', 'Zero trust approach', 'Perimeterless security', 'Defense in depth' ]
  description: >
      "Zero trust" is an approach to cybersecurity based on the concept of "never trust, always verify".
      The basic idea of the approach is to never trust any system or network implicitly, always verify that the request is authentic both with respect to the identity of the source and trustworthiness of network channels.
      Under zero trust, every request should be authenticated and authorized.
      For that approach to work, all relevant identities must be reliably known, especially non-human identities (NHI) representing communicating services and devices.
      Therefore, identity-based security is a fundamental foundation for zero trust approach.

      Zero trust originated mostly as a reaction to flawed concept of cybersecurity perimeter, which was a common approach to cybersecurity in early years of inter-network computing.
      Cybersecurity perimeter approach allowed for existence of "perimeter" that separated insecure outer network (usually the Internet) and secure inner network (usually corporate network).
      Security requirements were significantly reduced in the presumably-secure inner network.
      In that respect, zero trust can be summarized as "no weak interior", an approach in which no assumption of secure inner network exists.
      Zero trust approach is operating under "assumption of breach", meaning that it is assumed that the attacker already has access to the network, devices or services.

      Overall, "zero trust" is mostly a broad conceptual approach - a set of guiding principles, rather than a set of specific technologies and practices.
      It is currently used as a token of paradigm shift from perimeter-based approach to more resilient and holistic cybersecurity approach that does not rely on concept of perimeter.
  example:
  seeAlso: [ "cybersecurity", "identity-based-security", "perimeter" ]
  upkeepStatus: green
