# TODO:
# Digital identity (expand)
# Schema
# (identity) synchronization (NOTE: we already have generic-synchronization)
# reconciliation
# Identity analytics and intelligence
# PAM
# Data sources, authoritative data sources
# System of Record (SoR)
# SoD
# Persona
# SCIM
# Risk management, risk assessment
# Security program/process (vs security project)
# IAM program/process (vs IAM project)
# directory service (see data store)
# context/scope (see domain)
# identity lifecycle
# accountability

- id: abac
  term: Attribute-Base Access Control
  acronym: "ABAC"
  alternativeTerms:
  description: >
      A mechanism for managing of user access to information systems based on values of user attributes.
      Attribute-Based Access Control (ABAC) evaluates the access dynamically, using an algorithm that takes "attributes" as an input, and outputs access decision (allow/deny).
      The attributes are usually user attributes from the user profile, supplemented with context attributes, such as time of access and user's current location.
  example:
  seeAlso: [ "access-control" ]

- id: access-certification
  term: Access Certification
  alternativeTerms: [ "Access Re-certification", "Re-certification", "Attestation" ]
  description: >
    Access certification helps with management of access rights.
    These rights also called privileges, role assignments, authorities or authorizations need to be assigned to the right users in the right systems at the right time.
    Access Certification means reviewing the settings such as assignments of roles to users to make sure that employees have accesses to the systems they need.
  example: >
    An employee works as a manager of research department.
    He has access to various systems and databases.
    He gets promoted to senior management where he is assigned to a new working group and gets access to different resources.
    During access certification campaign the list of his privileges is reviewed and privileges which are not required anymore are removed.
  seeAlso:

- id: access-control
  term: Access Control
  alternativeTerms:
  x1252Term: access control
  description: >
      Access control is an abstract concept of controlling access of users to applications.
      It is a very broad and general term, however it usually refers to a mechanism to define and evaluate authorization policies.
      Two commonly-used access control mechanisms are role-based access control (RBAC) and attribute-based access control (ABAC).
  example:
  seeAlso: [ "rbac", "abac" ]

- id: access-management
  term: Access Management
  acronym: "AM"
  alternativeTerms:
  description: >
    Access Management (AM) is a security discipline that provides access to authorised users to enter particular resources.
    It also prevents non-authorised users from accessing the resources.
    Thus the goal of Access Management is to unify the security mechanisms that take place when a user is accessing specific system or functionality.
    Single Sign-On (SSO) is sometimes considered to be a part of Access Management.
  example: >
    New employee is hired.
    He needs access to various resources like databases, servers or applications and is also added to various access groups according to his job role.
    Access Management system makes sure he gets the access on time and to needed systems. Thanks to AM, it is determined what is available there for him, which information or funcionality he sees and which parts of the system he can work with.

    Access Management is frequently called Identity Management, but these terms are not identical.
    Identity Management is about managing attributes related to the user such as username, fullName, location, telephone number or authorizations while Access Management is about evaluating attributes based on policies and making yes and no decisions.
  seeAlso:

- id: account
  term: Account
  alternativeTerms: [ "User account" ]
  description: >
    Data structure in a database, file or a similar data store that describes characteristics of a user of a particular system (resource).
    Accounts are used to control access of users to applications, databases and so on.
    Account is a persistent data record, stored in an application or a database.
    This term is usually not used to describe ephemeral information about user's identity, such as information temporarily stored only for the duration of user's session.
    Such information is often referred to as "principal".

    Account is different from a generic data record (e.g. "identity" or "principal").
    The purpose of account is to provide user's access to the system, generic data record may not provide such access.
  midPointDescription: >
    An account strictly means a data structure in source/target system (resource).
    Term "user" is used to describe a similar data structure in midPoint itself.
  example:
  seeAlso: [ 'user', 'principal' ]

- id: active-directory
  term: Active Directory
  alternativeTerms:
  description: >
    An identity repository created by Microsoft that stores and arranges identity information.
    Based on this information, it provides access and permissions to users to enter particular resources and therefore improves organization’s security.
  example:
  seeAlso:

- id: agent
  term: Agent
  alternativeTerms:
  x1252Term: agent
  description: >
      Active entity, usually a software component that plays an active part.

      In identity management field, the term "agent" often means an active software component installed into a controlled system,
      used to mediate management of identities.
      It is similar in function to identity connector, however unlike the connector, the agent has to be installed into a controlled system.
  example:
  seeAlso: [ "identity-connector" ]
  upkeepStatus: orange

- id: anonymity
  term: Anonymity
  alternativeTerms:
  x1252Term: anonymity
  description: >
      A situation when an object cannot be distinguished from similar objects, where an identity of an object cannot be determined.
  example:
  seeAlso: [ "identity" ]
  upkeepStatus: orange

- id: api
  term: Application Programming Interface
  acronym: API
  alternativeTerms:
  description: >
      Set of procedures, functions or methods that can be used by another program or component.
      APIs are usually interfaces exposed by an application, meant to be used by other application.
      Therefore APIs are important integration points between applications and services.
      In the past, APIs were usually created as a programming language library, such as C or Java library.
      Since c. 2010, APIs usually take form of HTTP-based RESTful service.
  example:
  seeAlso: [ 'restful-service' ]

- id: authentication
  term: Authentication
  alternativeTerms:
  iso24760Term: authentication
  x1252Term: authentication
  description: >
    Authentication is a mechanism by which a computer system checks that the user is really the one she or he claims to be.
    Authentication can be implemented by a broad variety of mechanisms broadly divided into three categories:
    something you know, something you have, something you are.
    Traditionally, authentication is done by the means of by username and password.
    Authentication is often followed by authorization, however, authentication and authorization are two separate mechanisms.
  example: >
    An employee wants to log in to a working group.
    He provides his username and password.
    This data is compared with the information stored in the company’s database to see if it matches or not.
    This process is password-based authentication (something you know).
  seeAlso: [ 'identification', 'authorization' ]
  upkeepStatus: green

- id: authenticated-identity
  term: Authenticated Identity
  alternativeTerms: [ 'Authenticated user', 'Authenticated principal' ]
  iso24760Term: authenticated identity
  description: >
    ISO 24760 term, describing "identity information" created to record result of authentication.
    This may mean data such as authentication strength, timestamps and similar information.
    In software development, it is often referred to as "authenticated user" or "authenticated principal".
  example: >
  seeAlso: [ 'authentication', 'principal' ]

- id: authorization
  term: Authorization
  alternativeTerms:
  x1252Term: authorization
  description: >
    Authorization is a mechanism by which a computer system determines whether to allow or deny specific action to a user.
    Authorization is often controlled by rather complex rules and algorithms, usually specified as part of an access control model.
    Authorization often follows (and required) authentication, however, authentication and authorization are two separate mechanisms.

    In rare cases, "authorization" is understood as a process of allowing access, granting permissions or giving approval.
    Such as "authorization" of a request to join a group.
  example: >
    An employee wants to access data of a working group he is assigned to.
    After successful authentication, the computer system that controls the data determines whether the user is part of the working group.
    As a member of the group the user can read and modify the data (operations are allowed)
    If the user tries to delete another user, the operation will be denied, because he is lacking administration authorizations.
  seeAlso: [ 'authentication', 'rbac', 'abac', 'coarse-grain-authorization', 'fine-grain-authorization', "access-control" ]
  upkeepStatus: green

- id: authorization-service
  term: Authorization Service
  alternativeTerms: [ 'Authorization Server' ]
  description: >
      A system that provides authorization information to an application.
      It usually makes a decision whether a specific operation should be allowed or denied by the application.
      I.e. authorization system is performing the authorization decision instead of the application.
      Authorization systems often use complex policy, user roles or additional attributes to make the decision.
      Authorization servers usually implement functionality of Policy Decision Point (PDP).
      Typical protocols and frameworks: XACML, Open Policy Agent (OPA), SAML authorization assertions, proprietary mechanisms
  example:
  seeAlso: [ 'authorization' ]
  upkeepStatus: green

- id: biometrics
  term: Biometrics
  alternativeTerms: [ 'Biometric authentication' ]
  x1252Term: biometric recognition
  description: >
      Automated recognition of persons, based on their biological or behavioral characteristics.
  example:
  seeAlso: [ 'authentication' ]
  upkeepStatus: green

- id: blinded-affirmation
  term: Blinded Affirmation
  alternativeTerms:
  iso24760Term: blinded affirmation
  description: >
      A method to provide strictly limited information to another party, without revealing any unintended information.
      Blinded affirmation is often used to demonstrate that a certain user is a member of an organization, without revealing any additional information about the user to a third party.
      Blinded affirmation usually relies on ephemeral identifiers or pseudonyms.
  example:
  seeAlso: [ "ephemeral-identifier", "pseudonym" ]
  upkeepStatus: green

- id: certificate-authority
  term: Certificate Authority
  acronym: CA
  alternativeTerms:
  description: >
      Entity that issues digital certificates.
      Certificate authority is usually a trusted third party, certifying correctness of the data presented in certificates that it issues.
      The most common form of certificate authority is an authority that issues X.509 digital certificates, containing public keys.
      Certificate authority signs the certificates, thus certifying that a specified public key belongs to a specified identity.
  example:
  seeAlso: [ 'digital-certificate', 'trusted-third-party' ]
  upkeepStatus: green

- id: cloud-computing
  term: Cloud Computing
  alternativeTerms:
  description: >
    Internet-based computing when resources like storage, applications or servers are used by organizations or users via Internet.
    Data could be accessed any time from any place, without any installations and is stored and processed in third-party data centers which could be located anywhere in the world.
    Cloud computing is considered to lower organization’s costs by avoiding the need of purchasing servers as well as to speed up the processes with less maintenance needed.
    Due to data being centralized at one place, it is considered to be secure and easily shared across bigger amount of users.
  example: >
    Company creates construction machines.
    It has factories at more places in the world. It uses cloud storage to store the construction documents and instructions.
    This data can be accessed by employees in all its factories simply via Internet.
  seeAlso:

- id: coarse-grain-authorization
  term: Coarse-grain Authorization
  alternativeTerms:
  description: >
      Authorization concerning big architectural blocks, such as entire applications or systems.
      E.g. coarse-grain authorization usually decides whether a user can access an application, or access should be denied, without providing any additional details.
      Coarse-grained authentication is usually being made at the "perimeter" of the system, e.g. by infrastructure components, when a user is accessing an application.
      Typically, this authorization is based on simple policy rules, such as a role or group assigned to the user.
  example:
  seeAlso: [ 'authentication' ]
  upkeepStatus: green

- id: connid
  term: ConnId
  alternativeTerms: [ "ConnId Framework" ]
  description: >
      ConnId is an open source identity connector framework project.
      It originated from Identity Connector Framework (ICF) developed by Sun Microsystems in late 2000s.
      ConnId is an now an independent open source project, used by several identity management platforms.
  seeAlso: [ "identity-connector", "identity-connector-framework" ]

- id: consent-for-personal-data-processing
  term: Consent for Personal Data Processing
  alternativeTerms: [ "Consent" ]
  description: >
      Consent for personal data processing is given by a user, to indicate agreement for processing of personal data.
      In personal data protection frameworks (such as GDPR), consent has a strict structure, it is given for a very specific processing scope.
      Consent can be revoked by the user any time.
      Consent is just one of several personal data processing bases (lawful bases).
      Consent is perhaps the most well know, and also the most misused basis for personal data processing.
  seeAlso: [ "personal-data-protection", "personal-data-processing-basis", "gdpr" ]

- id: credential
  term: Credential
  alternativeTerms: [ 'Credentials' ]
  iso24760Term: credential
  x1252Term: credential
  description: >
      Information used to prove the identity during authentication.
      Credentials can be digital (information), physical (an object such as ID card) or a combination of both (an ID card with a tamper-proof chip containing cryptographic keys).
      Perhaps the most common type of digital credential is a password.
  example:
      Password, PIN, secret key stored on smartcard, private key stored in a token, fingerprint.
      Physical credential includes various identification cards, such as national identification cards, club membership cards and so on.
      Even a username can be considered a credential, although such authentication is likely to be very weak.
  seeAlso: [ 'authentication' ]
  upkeepStatus: green

- id: credential-issuer
  term: Credential Issuer
  alternativeTerms:
  iso24760Term: credential issuer
  description: >
      An entity that creates and provisions credentials to entities.
  example: >
      Government agency responsible for issuing national identity cards.
      Certificate authority, generating a digital certificate for a subject.
      Generator of random initial password, storing the password in identity data store.
  seeAlso: [ 'credential' ]
  upkeepStatus: green

- id: credential-service-provider
  term: Credential Service Provider
  acronym: CSP
  alternativeTerms:
  iso24760Term: credential service provider
  description: >
      ISO 24760 term, describing an entity responsible for management of credentials in a domain.
  example:
  seeAlso: [ 'credential' ]
  upkeepStatus: green

- id: cross-domain
  term: Cross-domain
  alternativeTerms:
  description: >
      Anything that involves interaction between two or more domains.
      Specifically in context of identity and access management, it usually means transfer of information between domains that are under separate control,
      or transfer of information that needs to be somehow limited (e.g. only a subset of attributes is transferred).

      Cross-domain techniques employ special mechanism to protect the information, or to make transfer between domains more reliable or secure.
      For example, special identifiers (often ephemeral pseudonyms) are used to refer to identity data.
  example:
  seeAlso: [ 'domain', 'identity-provider', 'relying-party', 'identity-federation' ]
  upkeepStatus: green

- id: data-minimization
  term: Data Minimization
  alternativeTerms: [ 'Minimization' ]
  x1252Term: data minimization
  description: >
      A process of reducing the amount of data to the necessary minimum required for processing.

      Data minimization often takes place in context of privacy and personal data protection, minimizing identity data to the necessary minimum.
  example:
  seeAlso: [ 'privacy', 'personal-data-protection' ]
  upkeepStatus: green

- id: data-origin
  term: Data Origin
  alternativeTerms: [ "Origin", "Domain of Origin" ]
  iso24760Term: "domain of origin"
  description: >
      Organization or entity that have created or assigned a particular value.
      Origin is often part of data provenance, description of the method how a value was acquired by a system.

      Origin may be relative, describing only an immediate origin of the information, a "previous hop, a system that have relayed the information to our system.
      Such origin may not have created or assigned the information, it may have only relayed or copied the information originated in a third system.
      Origin is often recorded in a form of metadata.
  example:
  seeAlso: [ 'digital-identity-attribute', 'data-provenance' ]
  upkeepStatus: green

- id: data-provenance
  term: Data Provenance
  alternativeTerms: [ "Provenance" ]
  description: >
      Description of the method how a value was acquired by a system.
      Provenance information almost always contains description of data origin.
      It is supplemented by additional information, such as timestamps and assurance information.

      Provenance may be relative, describing only an immediate origin of the information, a "previous hop, a system that have relayed the information to our system.
      In other cases, provenance information may include a complete path from the ultimate origin of the information, describing all the systems that it has passed and all the transformations that were applied.
      Provenance is often recorded in a form of metadata.
  example:
  seeAlso: [ 'data-origin', 'metadata' ]

- id: decentralized-identifier
  term: Decentralized Identifier
  acronym: DID
  alternativeTerms:
  x1252Term: decentralized identifier
  description: >
      An identifier that does not require centralized registration authority.
      Technologies supporting decentralized identifiers vary, many of them are based on distributed ledger technologies (e.g. blockchain).
  example:
  seeAlso:
  upkeepStatus: green

- id: delegated-administration
  term: Delegated Administration
  alternativeTerms:
  description: >
    Type of administration where chosen users have administrator permissions.
    They can manage other users, create passwords for them, move them into groups, assign them roles, etc.
  example: >
    John is responsible for a research project group.
    He adds new users to the group, assigns roles to specific users and also deals with the issues inside the group.
    Thanks to delegated administration, a company is able to be more effective as the work process around maintenance of groups is reduced.
  seeAlso:

- id: digital-identity
  term: Digital Identity
  alternativeTerms: [ "Identity", "Network Identity", "User Profile" ]
  iso24760Term: identity information
  x1252Term: digital identity
  description: >
      Digital representation of identity:
      set of characteristics, qualities, believes and behaviors of en entity, usually represented as a set of attributes.

      Digital identity should not be confused with identifier.
      Digital identity is a set of characteristics (complex data), while identifier is (usually simple) value used to refer to digital identity.
  example:
  seeAlso: [ "identity", "digital-identity-attribute", "entity" ]
  upkeepStatus: orange
  todo: "explain the richer digital identity meaning, as a set of self-service features"

- id: digital-identity-attribute
  term: Digital Identity Attribute
  alternativeTerms: [ "Attribute" ]
  iso24760Term: attribute
  x1252Term: attribute
  description: >
      A value representing a characteristic or property of an entity.
      An attribute is a part of digital identity.
  example:
      Name of a person, telephone number, device location, organization postal address.
  seeAlso: [ "digital-identity", "identifier", "entity" ]
  upkeepStatus: green

- id: digital-certificate
  term: Digital Certificate
  alternativeTerms: [ 'Certificate' ]
  x1252Term: certificate
  description: >
      Digital document, containing an information protected by cryptographic means.
      Digital certificates are usually used to bind an information to a digital identity.
      Perhaps the most common use of certificates are certificates of public keys, binding public key to identity of the owner, signed by a trusted third party (certificate authority).
      The most prominent specification of a format of such digital certificate is X.509.
  example:
  seeAlso: [ 'certificate-authority', 'trusted-third-party' ]
  upkeepStatus: green

- id: directory-service
  term: Directory Service
  alternativeTerms: [ "Directory Server" ]
  description: >
      A database intended as a store of simple objects, shared between applications.
      Directory services are often used to store identity data.
      The data are used by other applications, that are accessing the directory service by using a well-known protocol.
      Lightweight Directory Access Protocol (LDAP) is the most common protocol used to access directory services.

      Directory services used to be the usual method to implement functionality of identity data store.
      However, other databases and technologies are used to implement similar functionality.
  example:
      LDAP directory servers and Active Directory domains are two most common types of directory services.
  seeAlso: [ "identity-data-store", "ldap" ]
  upkeepStatus: green

- id: domain
  term: Domain
  alternativeTerms: [ "Domain of applicability", "Realm", "Context", "Scope" ]
  iso24760Term: domain
  x1252Term: domain
  description: >
      An environment under an autonomous control.
      A domain is often an organization, managing a set of information systems and databases, keeping the information consistent.
      However, it may also refer to a smaller information set within an organization, such as a single database or directory server.

      Identifiers are often designed to be unique within a particular domain, such as an organization or a database.
  example:
  seeAlso: [ "digital-identity", "identifier" ]
  upkeepStatus: orange
  todo: expand

- id: enrollment
  term: Enrollment
  alternativeTerms:
  iso24760Term: enrollment
  x1252Term: enrollment
  description: >
      A process of entering new identity data into a specific system (usually in a domain).
      Enrollment usually involves validation and verification of the information and its origin, such as verification of identity assertion that relied the information to the system.

      The terms "enrollment", "registration" and "onboarding" are overlapping and they are often used as synonyms.
      Strictly speaking, "enrollment" is the verification process, "registration" is an act of recording information to data store,
      and "onboarding" is a complete business process making sure that a new person in an organization is well-equipped for activities within the organization.
  example:
  seeAlso: [ "identity-registration", "onboarding", "identity-assertion" ]
  upkeepStatus: orange
  todo: expand

- id: entitlement
  term: Entitlement
  alternativeTerms: [ "Privilege", "Access Right" ]
  x1252Term: privilege
  description: >
    A privilege or right of access given to the user.
    An "entitlement" is a very overloaded term.
    It can be used to represent any kind of privilege, ranging from a very high-level business role to the finest filesystem permission in a specific system.
  midPointDescription: >
    An Entitlement is a resource object representing privilege, access right, resource-side role, group or any similar concept.
    However, unlike account, the entitlement does not represent a user.
  example: >
    The organization has three groups of users which will work on a new project.
    For that the organization needs to assign the groups new privileges.
    Thanks to the entitlements, all groups can be managed seamlessly in a uniformed way.
  seeAlso:

- id: entity
  term: Entity
  alternativeTerms:
  iso24760Term: entity
  x1252Term: entity
  description: >
      Being (su as person or animal), thing, concept or anything else that has recognizably distinct existence.
      An entity is usually described by a set of characteristics, known as its identity.
      An entity can have several identities.
  example: >
      A person, device, organization, animal, service, passport, computer, group of people or things.
  seeAlso: [ "identity", "digital-identity" ]
  upkeepStatus: green

- id: ephemeral-identifier
  term: Ephemeral Identifier
  alternativeTerms:
  iso24760Term: ephemeral identifier
  description: >
      An identifier used only for a very short duration.
      Ephemeral identifiers are valid usually only during a single session, or even during a single protocol exchange (e.g. authentication).
      Ephemeral identifiers are almost always randomly-chosen.
      When ephemeral identifiers refer to a digital identity, they are efficiently a short-lived pseudonyms.
  example:
  seeAlso: [ "identifier", "pseudonym" ]
  upkeepStatus: green


- id: federated-identity
  term: Federated Identity
  alternativeTerms:
  iso24760Term: federated identity
  description: >
      Digital identity intended to be used in several domains, usually by the means of identity federation.
      Information about federated identity is transferred between domains, usually in a form of identity assertions exchanged between identity providers and relying parties.
  example:
  seeAlso: [ 'identity-federation', 'digital-identity' ]
  upkeepStatus: green

- id: fine-grain-authorization
  term: Fine-Grain Authorization
  alternativeTerms:
  description: >
      Authorization made on very detailed information and is providing more detail control within the application operation.
      E.g. authorization to approve the transaction in an accounting system, with amount up to a certain limit.
      Typically, fine-grain authorization requires detailed knowledge of both the user profile (attributes) and the operation context (operation name, parameters and their meaning).
      Due to this requirement, fine-grain application is often implemented directly in application code.
  example:
  seeAlso: [ 'authentication' ]
  upkeepStatus: green

- id: fulfillment
  term: Fulfillment
  alternativeTerms: [ 'Provisioning/deprovisioning' ]
  description:
      Fulfillment is a functionality of identity management (IDM) system, making sure that users have appropriate access to systems.
      Simply speaking, this is the functionality that creates accounts, associates them with entitlements (e.g. groups), modifies passwords, enables/disables accounts and deletes them in the end.
      Fulfillment is a name used for identity provisioning together with deprovisioning and associated activities.
  example:
  seeAlso: [ 'identity-management', 'identity-management-system', 'identity-provisioning', 'identity-deprovisioning', 'manual-fulfillment']
  readMore: /iam/iga/fulfillment/
  upkeepStatus: orange

- id: gdpr
  term: General Data Protection Regulation
  acronym: GDPR
  alternativeTerms:
  description: >
      General Data Protection Regulation 2016/679 (GDPR) is European Union regulation on personal data protection and privacy.
      It defines rules for processing of personal data in European Union, European Economic Area, with provisions of the regulation applicable to other parties as well.
  example:
  seeAlso: [ 'personal-data-protection' ]

- id: generic-synchronization
  term: Generic Synchronization
  alternativeTerms:
  description: >
    Advanced model of synchronization where not only users and accounts are synchronized, but also groups to roles, organizational units to groups, roles to ACLs and so on.
  example: >
    A company has research department which is linked to a working group providing analysis.
    Thanks to generic synchronization, changes set for research department can be also applied on working group.
    Also if the research department is gone, working group can be automatically deleted.
  seeAlso:

- id: grc
  term: Governance, risk management and compliance
  acronym: "GRC"
  alternativeTerms:
  description: >
    Governance, risk management and compliance (GRC) is a discipline that helps organizations to have more control over processes and be more effective.
    Governance is the set of decisions and actions by which individual processes as well as the whole organization are lead to achieve specific goals.
    Risk management identifies, predicts and prioritizes risks with aim to minimize them or avoid their negative influence on organizations' aims.
    Compliance means following certain rules, regulations or procedures.
    A GRC software facilitates this problematic by taking care of all three parts by one single solution.
    It is a very helpful tool for business executives, managers or IT directors.
    Thanks to it it is possible to define, enforce, audit and review policies responsible for the exchange of information between internal systems as well as between the external ones.
  example: >
    John is manager of the IT department in a bank.
    To have enough control over processes as well as users, he needs to have relevant information in one place to work with it effectively.
    If he is able to define, enforce, review and audit policies and map the functions to comply with requirements with one solution, he has better control over the information flow, which helps him to lower possible risks such as information fraud.
  seeAlso:

- id: identifier
  term: Identifier
  iso24760Term: identifier
  x1252Term: identifier
  description: >
      A value, or a set of values, that uniquely identify an identity in a certain scope.

      An identity usually have several identifiers, used in various situations and contexts.
      Identifiers may be compound, composed of several values.
  example:
      Username, national person identifier such as birth number, social security number, registration number of an organization, uniform resource identifier (URI).
      E-mail address is often used as a globally-unique identifier.
      Given name of a person often uniquelly identifies a person within a family, therefore it may be considerd an identifier in some contexts.
  seeAlso: [ "identity", "digital-identity", "digital-identity-attribute", "entity" ]
  upkeepStatus: green

- id: identification
  term: Identification
  iso24760Term: identification
  x1252Term: identification
  description: >
      A process of recognizing an identity as distinct from other identities in a particular scope or context.
      Identification is almost always performed by processing identifiers, using them to reference an identity in an identity database.

      Identification is a process distinct from authentication.
      Authentication is a process of proving an identity (verification), whereas identification does not assume any such proof.

      The term "identification" usually refers to a process of looking up identity data based on a simple identifier, such as username or reference identifier.
      In some cases, process of identification involves a correlation, looking up or matching identity information in a more complex way.
      For example, a system may compare registration data entered by the user with the content of its identity database, in an attempt to determine whether such user is already registered.
  example:
      User enters a username, a system is using the username to look up user's profile in the database.
  seeAlso: [ "digital-identity", "identifier", "authentication", "identity-correlation" ]
  upkeepStatus: green

- id: identity
  term: Identity
  alternativeTerms:
  iso24760Term: identity
  x1252Term: identity
  description: >
      The fact of being who or what a person or thing is.
      Set of characteristics, qualities, believes, behaviors and other aspects of en entity.
      Identity can be applied to persons, things, even intangible concepts, known as entities.
      An entity can have several identities (often known as personas).
      In context of information technologies, parts of identity can be usually represented in a form of digital record, known as digital identity.

      Identity should not be confused with identifier.
      Identity is a set of characteristics, while identifier is a value used to refer to identity.
  example:
  seeAlso: [ "identifier", "digital-identity", "entity" ]
  upkeepStatus: green

- id: identity-and-access-management
  term: Identity and Access Management
  acronym: "IAM"
  alternativeTerms:
  description: >
      Identity and access management (IAM) is a field concerned with managing identities (e.g. users) and their access to systems and applications.
      IAM is concerned with all the aspects dealing with "identity", with many subfields that specialize in selected aspects.
      Access management deals (AM) especially with access to applications, including authentication and (partially) authorization.
      Identity management and governance (IGA) deals with management of user data (e.g. user profiles), synchronization of identity data and applying policies.
      Other IAM subfields deal with storage of identity data, transfer of the data over the network and so on.
  example:
  seeAlso: [ "identity-management", "iga", "access-management", "identity-data-store" ]
  readMore: /iam/

- id: identity-assertion
  term: Identity Assertion
  alternativeTerms: [ "Assertion", "Claim" ]
  iso24760Term: identity assertion
  x1252Term: claim
  description: >
      Statement made by an identity provider regarding properties or behavior of an identity.
      Assertions are used by relying parties.
      The most common assertion is perhaps authentication assertion, relying information about authentication event from identity provider to relying party.
      Assertions may contain other information as well, usually identity attributes and authorization decisions.
  example:
  seeAlso: [ "digital-identity-attribute", "identity-provider", "relying-party" ]
  upkeepStatus: green

- id: identity-correlation
  term: Identity Correlation
  alternativeTerms: [ "Identity Matching" ]
  x1252Term: correlation
  description: >
      Process of comparing identity information, with an aim to find a matching identity.
      Correlation is usually employed during identity enrollment or registration, when a system determines whether the new identity is already known to the system.
      For example, a system may compare registration data entered by the user with the content of its identity database, in an attempt to determine whether such user is already registered.
      If such a comparison involves simple and reliable identifiers (such as username or employee number), it is called "identification".
      However, in many cases such identifiers are not available, and the system needs to combine several identifiers or employ sophisticated techniques to find matching identity.
      Some identity correlation techniques involve probabilistic matching techniques or machine learning methods to find suitable candidates, which are later reviewed by human operator.
  example:
  seeAlso: [ "identification", "enrollment", "identity-registration", "identifier" ]
  upkeepStatus: green

- id: identity-information-authority
  term: Identity Information Authority
  acronym: IIA
  alternativeTerms:
  iso24760Term: identity information authority
  description: >
      ISO 24760 term, referring to an entity related to a particular domain that can make provable statements on the validity
      and/or correctness of one or more attribute values in an identity.
  example:
  seeAlso: [ "identity-provider", "domain" ]
  upkeepStatus: green

- id: identity-connector
  term: Identity Connector
  alternativeTerms: [ "Connector" ]
  description: >
      Usually small and simple unit of code that connects to a remote system.
      The purpose of identity connector is to retrieve and manage identity information, such as information about user accounts, groups and organizational units.
      The connectors are usually written for and managed by a particular connector framework.
  example: >
      When company uses identity management system and needs to integrate it with Active Directory servers, it simply uses Active Directory Connector (LDAP).
  seeAlso: [ "identity-connector-framework", "connid" ]

- id: identity-connector-framework
  term: Identity Connector Framework
  alternativeTerms: [ "Connector Framework", "ICF" ]
  description: >
      Generally speaking, a programing framework (library) for creating and managing identity connectors.
      However, this rather generic term often refers to the Identity Connector Framework (ICF), originally developed by Sun Microsystem in 2000s.
      The ICF was releases as an open source project by Sun, only to be later abandoned after Sun-Oracle merger.
      The ICF was a base for several forks, including ConnId and OpenICF.
  seeAlso: [ "identity-connector", "connid" ]

- id: identity-data-source
  term: Identity Data Source
  alternativeTerms: [ "Source System" ]
  description: >
      A system that is the source of identity data, usually data about users.
      The data are usually created and maintained in such systems manually.
      There are often multiple identity data sources in an organization with various characteristics.
      Some data sources are considered authoritative, providing reliable information about identities.
      Other data sources usually contain user-provided information, such as data entered by the user during registration process.
      Almost all data sources contain partial information only, information that is limited both in breadth (only some identity types) and depth (only some attributes).
      Data source may be an intermediary, providing information acquired from other systems.
  example: >
      A human resource (HR) system is usually an authoritative data source regarding organization employees and employment status.
      Directory server can be a source of user-provided profile attributes.
  seeAlso:

- id: identity-data-store
  term: Identity Data Store
  alternativeTerms: [ "Identity Store", "Identity Database", "Directory Service" ]
  description: >
      A database, designed and/or dedicated to store identity-related data.
      Identity data store is usually shared among many applications, it is accessed by many systems reading the data.
      Applications read data from identity data stores, often using them for authorization, and sometimes even authentication purposes.
      Structure of data in the data store is often application-friendly, containing pre-processed and derived information.
      Identity data store also usually contain entitlements, or similar information that can be used for authorization purposes.
      There are usually several identity data stores in an organization, managed and synchronized by an identity management system.

      Traditionally, directory servers (such as LDAP serves) are used as identity data stores.

      Identity data store is similar to identity register, and in fact many identity data stores are identity registers.
      The difference is that identity register has a more formal data structure, usually functioning as an authoritative data source.
      Whereas identity data store usually contains information copied from other system, including application-friendly derived data.
      However, the exact boundary between functions of identity register and identity data store is not exactly defined.
  example:
  seeAlso: [ 'identity-register' ]

- id: identity-deprovisioning
  term: Identity Deprovisioning
  alternativeTerms: [ "Deprovisioning" ]
  description: >
      Identity deprovisioning is as well as identity provisioning a subfield of Identity and Access Management (IAM).
      It is an opposite to identity provisioning.
      While identity provisioning takes care of creating new accounts, determining the roles for individual users and their rights or making changes in them, deprovisioning works oppositely.
      When an employee leaves the company, his account is deactivated or deleted and he loses all the accesses to both internal and external systems.
      This way organization minimizes information theft and stays secure.
      Identity provisioning together with deprovisioning and associated activities is known as "fulfillment".
  example: >
      A manager retires from the organization.
      Thanks to identity deprovisioning, his company email is deactivated, he loses access to working groups, cloud storage and every other system he had access to.
  seeAlso: [ "fulfillment" ]

- id: identity-evidence
  term: Identity Evidence
  alternativeTerms: [ "Evidence of Identity", "Identity Proof"]
  iso24760Term: identity evidence
  description: >
      Data and documents that support verification of identity data (identity proofing).
      Identity evidence is used in identity proofing process to achieve higher level of assurance of identity information.
  example:
      Government-issue identity documents, such as national identification card.
  seeAlso: [ "identity-proofing", "level-of-assurance", "verification", "digital-identity-attribute" ]
  upkeepStatus: orange
  todo: expand

- id: identity-federation
  term: Identity Federation
  alternativeTerms:
  iso24760Term: identity federation
  x1252Term: federation
  description: >
    Identity federation is an agreement between several domains, specifying the details of exchange and use of shared identity information.
    The information in identity federation is usually transferred by the means of identity assertions, exchanged between identity providers and relying parties.

    From user's point of view, identity federation is a process of sharing user’s identification and personal data between multiple systems and between organizations,
    so the user doesn’t have to register for each organization separately and can seamlessly access systems in federated organizations.
  example: >
    A student goes for an internship to another university.
    Thanks to identity federation, he is registered to the library, student system and online timetable automatically.
  seeAlso: [ 'domain', 'federated-identity', 'identity-assertion', 'identity-provider', 'relying-party' ]

- id: identity-governance
  term: Identity Governance
  alternativeTerms: [ "Governance" ]
  description: >
    Business aspect of managing identities including business processes, rules, policies and organizational structures.
    Any complete solution for management of identities consists of two major parts – identity governance and identity management.
  example: >
    Company hires 3 new employees, who need various privileges – some of them automatically, some in ad-hoc manner and some must not be given to any of them.
    The company sets up an approval process to keep things under control and keeps track of assignments and approvals to keep people accountable.
    There is also new policy and regulation taking effect soon that system needs to be compliant with.
    Company deals with such processes by means of identity governance.
  seeAlso: [ "iga", "grc", "identity-management" ]

- id: identity-lifecycle
  term: Identity Lifecycle
  alternativeTerms:
  description: >
    Set of identity stages from creation to its deactivation or deletion.
    It contains creation of an account, assignment of correct groups and permissions, setting and resetting passwords and in the end deactivation or deletion of the account.
  example:
  seeAlso: identity-deprovisioning, identity-provisioning

- id: identity-management
  term: Identity Management
  acronym: "IDM"
  alternativeTerms: [ 'Identity Administration', 'User management', 'User provisioning' ]
  iso24760Term: identity management
  x1252Term: identity management
  description: >
    Identity Management (IDM) is a process of managing digital identities and their accesses to specific resources in the cyberspace.
    It ensures appropriate access in appropriate time and helps to manage user accounts as well as to synchronize data.
    Identity management deals with digital identity lifecycle, managing values of digital identity attributes and entitlements.
  example: >
    When new employee is hired, he gets his user account in the company.
    In this account not only the information about himself is stored, but also information related to permissions for this user or his group and role membership.
    The aim of identity management is the management of user accounts, so users are assigned to correct groups, they have correct roles as well as permissions they are supposed to have.

    Identity management can be used to manage identities such as employees, students, customers, business partners or suppliers and finds its usage in various markets.
    Therefore the identity became a new perimeter of security.
    In the past, private nets of companies were isolated from the Internet and connected just through a safe point.
    This stopped to be effective as people started to use notebooks or phones altogether with Internet.
    The security perimeter can be replaced with Identity Management, by which we can manage who has the access to specific resources.
  seeAlso: [ "access-management", "identity-lifecycle", "identity-provisioning", "iga", "digital-identity", "digital-identity-attribute" ]

- id: identity-management-system
  term: Identity Management System
  acronym: IDMS
  alternativeTerms: [ "IDM System", "Provisioning System", "User Provisioning System" ]
  iso24760Term: identity management system
  description: >
      A system that provides identity management functionality: it is managing identities and their accesses to specific resources in the cyberspace.
      It ensures appropriate access in appropriate time and helps to manage user accounts as well as to synchronize data.

      Identity management (IDM) systems are concerned about the "management" side, maintaining user data, policies, roles, entitlements and so on.
      IDM systems usually do not "apply" or enforce the policies.
      The policies are transformed as needed and provisioned to other systems (a.k.a. "target systems") that interpret and enforce the policies.
      The process of provisioning (and "deprovisioning") of data and policies is known as "fulfillment".

      In a broad sense, IDM systems are used to manage the policies and data in all connected systems in the organization.
      IDM systems make sure that the data are consistent, that all the policies are applied, that user profile data are up to date,
      detecting and removing illegal access and generally keep all identity-related information in order across all the systems.

      Note: ISO 24760 definition seems to include identification and authentication as functions of identity management systems.
      While almost all IDM systems implement such functions, they are mostly used for internal purposes, e.g. for system administration access.
      IDM system usually do not provide identification and authentication services to other systems.
      ISO 24760 definition is closer to definition of identity and access management (IAM) system.
      However, complete IAM functionality is usually provided by a combination of several systems in practice.
  example: >
      Identity management (IDM) system usually takes information about employees from the Human Resource (HR) system.
      When new employee is recorded into HR system, this information is detected and pulled by the IDM system.
      After that, it is processed to determine set of roles each user should have.
      These roles determine and create accounts users should have, so everything is ready for new users on the very first day.
      If a user is transferred to another department or his privileges change, similar processes happen again.
      If an employee leaves the company, IDM systems makes sure all his accounts are closed.
  seeAlso: [ "identity-management", "identity-lifecycle", "identity-provisioning", "iga" ]

- id: identity-proofing
  term: Identity Proofing
  alternativeTerms: [ "Initial Entity Authentication" ]
  iso24760Term: identity proofing
  x1252Term: identity proofing
  description: >
      Verification of evidence to make sure that identity information are true and up-to-date.
      Identity proofing is used to achieve higher level of assurance of identity information.
  example:
  seeAlso: [ "digital-identity-attribute", "level-of-assurance" ]
  upkeepStatus: orange
  todo: expand

- id: identity-provider
  term: Identity Provider
  acronym: "IdP"
  alternativeTerms:
  iso24760Term: identity information provider
  x1252Term: identity service provider
  description: >
      System that provides identity-related information to applications (known in this context as "relying party" or "service provider").
      Such information usually includes user identifiers (which may be ephemeral), user name(s) and affiliation.
      The information is usually provided in form of identity assertions (claims).

      Identity providers are often authenticating the users.
      In that case, identity providers usually include information describing the authentication, such as statement that user was authenticated and indication of authentication mechanism strength.
      Identity provider authenticates the users in its own capacity, it never reveals user's credentials to the application (relying party).
      In fact, many identity providers are focused on authentication only, providing only a very minimal identity information (often just a single identifier), in which case the authentication-related information forms the most important part of provided information.
      Such identity providers effectively work as cross-domain single sign-on (SSO) systems.

      Although most identity providers include user authentication, there are also providers that do not (directly) authenticate the users, sometimes called "attribute providers".
      Identity provider may provide also additional information of the user to the application, such as information about user attributes and entitlements.

      Identity provider is often managed by a different organization than the relying applications (service providers), thus providing cross-domain identity mechanism.
      Typical protocols and frameworks used by identity providers include: SAML, OpenID Connect, CAS
  example: >
      SAML identity providers (e.g. Shibboleth server), OpenID providers (OpenID Connect), Active Directory Federation Server, CAS server.
      Some parts of Active Directory domain services may also be considered an identity provider, albeit usually used as intra-organization only.
  seeAlso: [ "relying-party", "identity-federation", "cross-domain", "identity-assertion" ]
  upkeepStatus: green

- id: identity-provisioning
  term: Identity Provisioning
  alternativeTerms: [ "User provisioning", "Provisioning" ]
  description: >
      In broad sense, identity provisioning is a subfield of Identity Management (IDM), concerned with technical aspects of creating user accounts, groups and other objects in target systems.
      It is a technology thanks to which many identity stores are synchronized, merged and maintained.
      Identity provisioning takes care of technical tasks during the whole user lifecycle - when new employee is hired, when his responsibilities change or he leaves the company (deprovisioning).
      It helps the organization to work more effectively as its goal is to automate as much as possible.

      The provisioning system usually takes information about employees from the Human Resource (HR) system.
      When new employee is recorded into HR system, this information is detected and pulled by the provisioning system.
      After that, it is processed to determine set of roles each user should have.
      These roles determine and create accounts users should have, so everything is ready for new users on the very first day.
      If a user is transferred to another department or his privileges change, similar processes happen again.
      If an employee leaves the company, identity provisioning systems makes sure all his accounts are closed.

      In a specific sense, identity provisioning means a process of creating accounts, assigning entitlements and similar actions,
      making sure a user has appropriate access to information systems.
      Identity provisioning together with deprovisioning and associated activities is known as "fulfillment".
  example: >
      New manager is hired in the organization.
      He is recorded into HR systems and thanks to identity provisioning, his company email is created, he gets access to working group as well as cloud storage.
      When the manager retires, identity provisioning makes sure all his accounts are disabled in accordance with the safety of the organization data.
  seeAlso: [ "identity-management", "identity-lifecycle", "fulfillment" ]
  upkeepStatus: orange

- id: identity-register
  term: Identity Register
  alternativeTerms: [ 'IMS Register', 'Reference Register' ]
  iso24760Term: identity register
  description: >
      A repository (database) of identity information, usually structured in a formal manner.
      Identity registers are almost always indexed using a reference identifier.
      They are usually designed for a specific purpose of being an authoritative data sources for other systems.

      Identity register is similar to identity data store, and in fact many identity registers function as identity data stores.
      The difference is that identity data store has less formal, usually application-friendly data structure, containing pre-processed and derived information.
      Identity data store also usually contain entitlements, or information that can be used for authorization purposes.
      However, the exact boundary between functions of identity register and identity data store is not exactly defined.
  example:
  seeAlso: [ "identity-registration", "reference-identifier", "identity-data-source", "identity-data-store" ]
  upkeepStatus: green

- id: identity-registration
  term: Identity Registration
  alternativeTerms: [ 'Registration' ]
  iso24760Term: identity registration
  x1252Term: registration
  description: >
      A process of recording new identity data into identity register or identity data store.
      Registration process may involve storing the information is several distinct data stores or registers.
      The recording process may be indirect, e.g. mediated by synchronization process of an identity management system.

      Informally, the registration process often involves the data acquisition process as well, such as asking user for the data using a form.

      The terms "enrollment", "registration" and "onboarding" are overlapping and they are often used as synonyms.
      Strictly speaking, "enrollment" is the verification process, "registration" is an act of recording information to data store,
      and "onboarding" is a complete business process making sure that a new person in an organization is well-equipped for activities within the organization.
  example:
  seeAlso: [ "enrollment", "onboarding", "identity-register", "identity-data-store" ]
  upkeepStatus: green

- id: identity-resource
  term: Identity Resource
  alternativeTerms: [ "Provisioning Resource", "Resource" ]
  description: >
      In IAM field, a Resource is usually an network-accessible asset capable of managing identity information.
  midPointDescription: >
      An Resource is a system that is either identity data source or provisioning target.
      IDM system (midPoint) is managing accounts in that system, feeding data from that system or doing any other combination of identity management operations.
      Identity resource should not be confused with "web resource" that is used by RESTful APIs.
  example:
  seeAlso: [ "resource", "identity-connector" ]

- id: iga
  term: Identity Governance and Administration
  acronym: "IGA"
  alternativeTerms:
  description: >
      Identity governance and administration (IGA) si a subfield of identity and access management (IAM) dealing with management and governance of identity-related information.
      IGA systems store, synchronize and manage identity information, such as user profiles.
      Complex data, entitlement and governance polices can be defined, applied to identity data.
      IGA system are responsible for evaluating the policies, making sure the data are compliant, addressing policy violations.
      IGA is often considered an umbrella term covering identity management, identity governance, compliance management, identity-based risk management and other aspects related to management of identities.
      Identity Governance and Administration (IGA) includes both the technical and business aspects of identity management.
  seeAlso: [ "identity-management", "identity-governance", "grc", "identity-and-access-management" ]
  readMore: /iam/iga/

- id: ldap
  term: Lightweight Directory Access Protocol
  acronym: LDAP
  description: >
      Lightweight Directory Access Protocol (LDAP) is industry-standard protocol (RFC4510) for accessing directory services.
  example:
      LDAP directory servers and Active Directory domains are two most common types of directory services.
  seeAlso: [ "directory-service", "identity-data-store" ]
  upkeepStatus: orange
  todo: expand

- id: level-of-assurance
  term: Level of Assurance
  acronym: LoA
  alternativeTerms:
  x1252Term: assurance level
  description: >
      Measure of reliability of identity information.
      Information with low levels of assurance are usually user-provided information that were not verified in any significant way.
      Higher levels of assurance are usually achieved by identity proofing, a process of verifying the information.
      Level of assurance is usually stored as metadata, describing the specific value that was verified.
  example:
  seeAlso: [ "digital-identity-attribute", "identity-proofing", "metadata" ]
  upkeepStatus: orange
  todo: expand

- id: linkability
  term: Linkability
  alternativeTerms:
  x1252Term: linkability
  description: >
      Ability to determine that two digital identities represent the same entity.
      Linkability is usually deterministic, based on a reliable identifier.
  example:
  seeAlso: [ "identity-correlation" ]
  upkeepStatus: orange
  todo: expand

- id: manual-fulfillment
  term: Manual Fulfillment
  alternativeTerms: [ 'Manual Provisioning/deprovisioning', 'Manual resource', 'Manual connector' ]
  description:
      Manual process of creating, updating and deleting accounts, entitlements and similar objects, driven by identity management system, but exexcuted by human operator.
      Manual fulfillment is initiated by an identity management system, usually as a consequence of change in user privileges or policies.
      Identity management system creates a ticket for system administrators, containing instructions to create/modify/delete an acccount or entitlement in a specific information system.
      Actual action is executed manually, by the system administrator.
      Manual fulfillment is used for systems, for which automatic identity connector is not available.
  example:
  seeAlso: [ 'fulfillment', 'identity-provisioning', 'identity-deprovisioning', 'identity-connector' ]
  upkeepStatus: green

- id: metadata
  term: Metadata
  alternativeTerms: [ "Meta-data", "Meta data" ]
  description: >
      Data about data.
      Metadata describe properties of data, such as the method how the data were acquired (a.k.a. "provenance"), how reliable the data are (e.g. level of assurance) and so on.
  example:
  seeAlso: [ 'data-origin', 'data-provenance', 'level-of-assurance' ]
  todo: expand

- id: minimal-disclosure
  term: Minimal Disclosure
  alternativeTerms: [ 'Minimal Disclosure of Personal Information' ]
  iso24760Term: minimal disclosure
  description: >
      A principle, stating that only the minimal amount of information is disclosed as is required to perform a specific function or provide a service.
      Minimal disclosure principle is often used in cross-domain data transfer, such as when using identity providers or identity federations.
      Only the information required to perform a service is disclosed to the other party, no extra information is provided.
  example: >
      A service that provides notification using a mobile text messages can request only a mobile telephone number of the person, as that is required to send the notification.
      Such service must not request person's name, e-mail address or any other information.
  seeAlso: [ "digital-identity", "personal-data-protection", "privacy", "identity-provider", "identity-federation", 'selective-disclosure' ]
  upkeepStatus: green

- id: mutual-authentication
  term: Mutual Authentication
  alternativeTerms:
  x1252Term: mutual authentication
  description: >
      Authentication process in which all involved parties authenticate to all other parties.
      Usually a two-sided process, where both sides of a connection authenticate to each other, i.e. server authenticates to client and client authenticates to server.
  example:
  seeAlso: [ "mutual-authentication" ]
  upkeepStatus: green

- id: non-repudiation
  term: Non-Repudiation
  alternativeTerms:
  x1252Term: non-repudiation
  description: >
      Property of a system, protecting against denial from one of the parties.
      The involved parties cannot deny that an action took place.
  example: >
      Digital signatures often provide non-repudiation in such a way, that an entity that have created the signature cannot deny that the signature was created.
  seeAlso:
  upkeepStatus: green

- id: offboarding
  term: Offboarding
  alternativeTerms: [ 'Off-boarding' ]
  description: >
      Business process that takes place when a person leaves an organization.
      The aim of offboarding is making sure that the person no longer has access to sensitive data and premises of the organization.
      From IT point of view, this often means identity de-provisioning, e.i. deactivation of user accounts in various applications, databases and identity data stores.
      This process is often automated using an identity management system.
      However, a complete offboarding process is usually more complex, including non-IT steps such as returning the provided equipment.
  example:
  seeAlso: [ 'identity-deprovisioning' ]
  upkeepStatus: green

- id: onboarding
  term: Onboarding
  alternativeTerms: [ 'On-boarding' ]
  description: >
      Business process that takes place when a new person enters an organization.
      The aim of onboarding is making sure that the person is well-equipped for any tasks and activities within the organization.
      From IT point of view, this often means identity provisioning, e.i. creation of user accounts in various applications, databases and identity data stores.
      This process is often automated using an identity management system.
      However, a complete onboarding process is usually more complex, including non-IT steps such as providing the person with appropriate equipment and training.

      The terms "enrollment", "registration" and "onboarding" are overlapping and they are often used as synonyms.
      Strictly speaking, "enrollment" is the verification process, "registration" is an act of recording information to data store,
      and "onboarding" is a complete business process making sure that a new person in an organization is well-equipped for activities within the organization.
  example:
  seeAlso: [ "enrollment", "identity-registration", 'identity-provisioning' ]
  upkeepStatus: green

- id: open-source
  term: Open Source
  acronym: "OSS"
  alternativeTerms: [ "Open Source Software", "FOSS", "Free and Open Source Software" ]
  description: >
    The meaning of this term is very simple - it is something people can wilfully modify according to their own needs or wishes.
    Firstly, this term was known in the context of software, which code was publicly exposed and available for modification.
    Later open source spread widely.
    There are open source projects, products, participations and many others.

    Many organizations and people choose open source software, hence it is considered to be more secured and grants people more control over it.
    This software can also be more stable as many other people may contribute their own ideas, correct it or improve it.

    Open source products are free and the creators usually charge other organizations for support or software services as implementation or deployment.
  example: >
    There are many open source software or systems available on the market.
    One of the best known is perhaps Linux, a computer operating system with the penguin logo.
    Anyone can download it and adjust its code according to one’s own needs.
  seeAlso:

- id: organizational-structure
  term: Organizational Structure
  alternativeTerms:
  description: >
    A hierarchical arrangement of authority, rights or duties in an organization.
    It determines the assignment, control or coordination of roles, responsibilities and power.
    A character of the organizational structure is highly dependant on the organization’s strategy and goals.

    The theme of organizational structure is closely linked to identity management.
    Organizing the company into this structure, assigning rights to individuals, working groups or project and controlling everything from one place – that are advantages that any high quality IDM solution is supposed to provide.

  example: >
    An organization has production department, marketing department and support department.
    Above them there are managers and head of the company, below are working groups or particular employees.
    Altogether they create an organizational structure.
    Their power, rights and duties differ according to their position in the structure.
  seeAlso:

- id: orphan-account
  term: Orphan Account
  alternativeTerms: [ 'Orphan' ]
  description: >
      An account without an owner, an account that does not seem to belong to anybody.
      Orphan accounts often originate as testing accounts that are not deleted after the testing is done.
      They may also belong to former users, but were not properly deleted or disabled.
      Orphan accounts are almost always a security risk, especially testing accounts with weak passwords.
      Most identity management systems have processes that scan systems for orphan accounts.
  example:
  seeAlso:

- id: password-management
  term: Password Management
  alternativeTerms: [ "Credential management" ]
  description: >
    Gives the organization an opportunity to meet the highest security standards thanks to the ability of having access to business systems and networks under control.
    Most of the employees usually pick just simple passwords and use same ones in multiple systems or applications.
    Password management helps to compose strong and unique passwords for both users and resources and ideally takes care of them during the whole user life cycle.
  example: >
    An organization works with midPoint and wishes to use its credential management feature to ensure the information safety.
    IT employee responsible for security sets midPoint’s password policy.
    He decides what characters are allowed in the password, how many times they can repeat, how many are required and how they are positioned.
    He sets minimal and maximal length of the password or minimal number of unique characters used in it.
    The outcome is complex and strong password that lowers the risk of the account being hacked.
  seeAlso: [ 'credential' ]

- id: pep
  term: Policy Enforcement Point
  acronym: 'PEP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to enforce policy decisions.
      The "policy" usually refers to access control and/or authorization policy.
      Policy enforcement points are usually part of applications or infrastructure components, with an ability to analyze and intercept policed operation.
      Policy enforcement point only enforces the policy, it does not interprets or decides the policy.
      PEP depends on policy decision point (PDP) to interpret the policy and make a decision.
  example:
  seeAlso: [ 'authorization', 'access-control', 'pdp', 'pmp' ]

- id: persistent-identifier
  term: Persistent Identifier
  alternativeTerms: [ 'Non-reassignable identifier' ]
  description: >
      An identifier that cannot be changed or re-assigned to another identity.
      Once assigned, the identifier always references the same identity.
      Persistent identifiers are usually used as reference identifiers, and reference identifiers are usually persistent, resulting in "persistent reference identifiers".

      Depending on a policy, persistent identifiers can be re-assign to another identity after the original identity was deleted (identifier re-use).
      However, there is usually relatively long interval during which the identifier cannot be re-assigned.
  example:
      LDAP attribute entryUUID (RFC4530) or Active Directory attribute GUID are persistent identifiers, assigned to an entry by the directory system and never changed during entry's lifetime.
  seeAlso: [ 'identifier', 'reference-identifier' ]

- id: personal-data
  term: Personal Data
  alternativeTerms: [ 'Personal information', 'Identity data', 'Identity information', 'Personal profile' ]
  description: >
      Data about a person, usually processed in an information system.
      The definition of "personal data" slightly differ from case to case.
      For example, GDPR defines personal data as "any information which are related to an identified or identifiable natural person".
      However, the general understanding is that "personal data" are any data that relate to a natural person, that describe the person in some way.
      This is different from personally identifiable information (PII), as personal data may not uniquely identify a person.
      For example, person's full name is considered personal data, however, a name such as "John Smith" is not entirely unique or identifiable in most contexts.
  example:
  seeAlso: [ 'personal-data-protection', 'personally-identifiable-information', 'gdpr' ]

- id: personal-data-erasure
  term: Personal Data Erasure
  alternativeTerms: [ 'Erasure', 'Data erasure' ]
  description: >
      Erasure (deletion) of personal data, usually due to explicit request from user (e.g. "delete account" request), or due to lack of lawful basis for personal data processing.
  example:
  seeAlso: [ 'personal-data-protection', 'personal-data', 'personal-data-processing-basis', 'gdpr' ]

- id: personal-data-processing-basis
  term: Personal Data Processing Basis
  alternativeTerms: [ 'Basis for processing', 'Legal basis', 'Lawful basis' ]
  description: >
      Basis for processing of personal data.
      Legal data protection frameworks (such as GDPR) usually mandate that personal data cannot be processed unless there is a basis for that processing.
      The basis may be a contract, legal obligation, consent, or similar legitimate interest for processing of the data.
      Some frameworks (such as GDPR) are enumerating the available processing bases.
  example:
  seeAlso: [ 'personal-data-protection', 'personal-data', 'gdpr' ]

- id: personal-data-protection
  term: Personal Data Protection
  alternativeTerms: [ 'Data Protection', 'DP' ]
  description: >
      Personal data protection is a field dealing with protection of personal information, rules for their processing, storage and erasure.
      It is closely related to privacy, as one of the main goals of personal data protection is to limit exposure of personal data, thus minimizing potential for their abuse.
  example:
  seeAlso: [ 'personal-data', 'gdpr' ]

- id: personally-identifiable-information
  term: Personally Identifiable Information
  acronym: PII
  alternativeTerms: [ 'Personal identifiers' ]
  x1252Term: personally identifiable information
  description: >
      Information that allows a person to be (directly or indirectly) identified.
      Obviously, government-issued identifiers, such as birth numbers, social security numbers or serial numbers of various identity documents are usually considered to be personally identifiable information.
      However, interpretation of what information is "personally identifiable" depends on the context.
      Even a simple full name of a person may be considered personally identifiable information in some contexts.
      Personally identifiable information usually require special protection or processing regime.
      Personally identifiable information should not be confused with personal data.
      PII are used as an identifier, pointing out a specific person in a group of other persons.
      Personal data describe certain person, there is no requirement for personal data to be "identifiable".
  example:
  seeAlso: [ 'personal-data' ]

- id: pdp
  term: Policy Decision Point
  acronym: 'PDP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to interpret policy and make decisions.
      The "policy" usually refers to access control and/or authorization policy.
      Policy decision point (PDP) can be part of applications, or they may be provided by dedicated infrastructure components (authorization services).
      PDP interprets the policy and make a decision, which is usually allow/deny decision.
      PDP does not enforce the decision, it relies on policy enforcement point (PEP) to enforce it.
      PDP does not define or manage the policy either, it depends on policy management point (PMP) to set the policy.
  example:
  seeAlso: [ 'authorization', 'access-control', 'authorization-service', 'pep', 'pmp' ]

- id: pmp
  term: Policy Management Point
  acronym: 'PMP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to specify, manage and maintain the policy.
      The "policy" usually refers to access control and/or authorization policy.
      Policy management point (PMP) can be part of applications, or they may be provided by dedicated infrastructure components (identity management and governance components).
      PMP specifies the policy, usually as a result of interaction with an administrator by the means user interface.
      PMP does not make policy decisions or enforce them, that is a responsibility of policy decision point (PMP) and policy enforcement point (PEP) respectively.
  example:
  seeAlso: [ 'authorization', 'access-control', 'pep', 'pdp', 'iga' ]

- id: policy-management
  term: Policy Management
  alternativeTerms: [ 'Management of Authorization Policies', 'Policy and Role Management' ]
  description: >
      Set of operations defining the authorization roles or policies, or assigning roles to the particular users.
      This is often manual or semi-manual operation performed in identity management system or identity data store.
      Policy management is implementing the functionality of Policy Management Point (PMP).

      This term is often confused with authorization itself.
      However, policy management aims at definition of the policy, while authorization is interpreting the policy.
  example:
  seeAlso: [ 'authorization' ]
  readMore: /iam/iga/policy-and-role-management/

- id: polystring
  term: Polystring
  alternativeTerms:
  description: >
      A built-in data type for polymorphic string maintaining extra values in addition to its original value.
      The extra values are derived from the original value automatically using a normalization code.
      PolyString supports national characters in strings.
      It contains both the original value (with national characters) and normalized value (without national characters).
      This can be used for transliteration of national characters in usernames.
      All the values are stored in the repository, therefore they can be used to look for the object.
      Search ignoring the difference in diacritics or search by transliterated value can be used even if the repository itself does not support such feature explicitly.
  example: >
      Organization has an employee called Ján Omáčka. Polystring derives extra values from the original one using normalization code.
      The original national characters “á” and “č” have their normalised equivalents “a” and “c”.
      His username with national characters is not a problem, as polystring deprecates the need to use custom conversion routines and therefore it brings some consistency into the integration code.
  seeAlso:

- id: principal
  term: Principal
  alternativeTerms: [ 'Subject' ]
  iso24760Term: principal
  x1252Term: principal
  description: >
      An entity or identity, information about which is managed in an information system.

      Usage of the term "principal" varies significantly.
      Depending on context, it may refer to entity (person), its identity or data structure describing parts of the identity (digital identity).
      In information security frameworks (such as X.509), "principal" usually refers to entity or identity, such as owner of credentials.
      In programming frameworks, "principal" usually refers to ephemeral information about user, maintained during user's session.
      This is usually different from "account", as accounts are usually persistent (stored in database),
      while principal may be ephemeral, or may refer to entities that are not users of the system (may not be able to log in).
      In some contexts, "principal" is equivalent to "subject".
  example:
  seeAlso: [ 'subject', 'entity', 'identity', 'account' ]
  upkeepStatus: green

- id: privacy
  term: Privacy
  alternativeTerms:
  description: >
      The right to be left alone.
      In IT context, privacy is an ability of individuals to control the information about themselves, to choose how the information is used to express their individuality.
      Technologies that support the concept of privacy are known as privacy-enhancing technologies (PET).
  example:
  seeAlso: [ "privacy-enhancing-technology", "personal-data-protection" ]
  upkeepStatus: green

- id: privacy-enhancing-technology
  term: Privacy-Enhancing Technology
  acronym: PET
  alternativeTerms:
  description: >
      Technologies that support and enhance privacy.
      This usually means technologies that give an individual an effective control over personal data, and the way how that are use to express one's individuality.

      Most privacy-enhancing technologies are focused on limiting the spread of personal data, making sure that only a minimal amount of data is disclosed (minimal disclosure),
      making sure that user approves data transfer (consent), using pseudonyms and various anonymization techniques to limit data exposure.

      Privacy-enhancing technologies are somewhat different from personal data protection technologies.
      While privacy-enhancing technologies are focused on limiting exposure of the data (secrecy),
      data protection technologies are focused on controlling the way how data are used.
  example:
  seeAlso: [ "privacy", "personal-data-protection", "minimal-disclosure", "pseudonym" ]
  upkeepStatus: green

- id: privacy-policy
  term: Privacy Policy
  alternativeTerms:
  x1252Term: privacy policy
  description: >
      A policy that sets rules for processing of personal data, respecting privacy of an individual.
  example:
  seeAlso: [ "privacy", "privacy-enhancing-technology" ]
  upkeepStatus: green

- id: private-key
  term: Private Key
  alternativeTerms:
  x1252Term: private key
  description: >
      In an asymmetric cryptosystem (a.k.a. "public-key cryptosystem), a part of the key pair that is known only to the key owner.
  example:
  seeAlso: [ "public-key" ]
  upkeepStatus: green

- id: product-architecture
  term: Product Architecture
  alternativeTerms:
  description: >
      Concept, design and description of the products part which are assigned into subsystems.
      It is also way how these subsystems interact with each other.
  example:
  seeAlso:

- id: pseudonym
  term: Pseudonym
  alternativeTerms:
  iso24760Term: pseudonym
  x1252Term: pseudonym
  description: >
      An identifier designed to avoid any inherent information about identity or entity.
      Pseudonyms are meant to hide or modify perception of the entity or identity, as presented to other parties.

      In user experience sense, pseudonyms can be chosen by the user to hide or alter their real identity in information systems.

      In implementation sense, pseudonym is often a randomly-generated identifier, used selectively for communication with specific domain or system.
      The pseudonym is used instead of other identifiers to avoid possibility of the other party to reveal parts of user's identity or correlate user's actions.
  example:
  seeAlso: [ "identifier", "personal-data-protection", "privacy" ]
  upkeepStatus: green

- id: public-key
  term: Public Key
  alternativeTerms:
  x1252Term: public key
  description: >
      In an asymmetric cryptosystem (a.k.a. "public-key cryptosystem), a part of the key pair that can be shared with other entities.
  example:
  seeAlso: [ "private-key" ]
  upkeepStatus: green

- id: rbac
  term: Role-Base Access Control
  alternativeTerms: "RBAC"
  description: >
      A mechanism for managing of user access to information systems based on a concept of roles.
      Role-Based Access Control (RBAC) is using roles to group privileges.
      Roles usually represent meaningful entities, such as job positions, organizational affiliations or similar business concepts.
      One of the basic assumptions of RBAC is that management of roles is much easier as management of individual entitlements.

      A form of RBAC is standardized in a series of NIST standards (INCITS 359-2012).

      RBAC is mostly concerned with using the roles to control user access to the system and other information assets.
      Role definitions are usually maintained using a somehow separate "Role Management" mechanisms.
  example:
  seeAlso: [ "role", "entitlement", "role-management", "access-control" ]

- id: reference-identifier
  term: Reference Identifier
  acronym: RI
  alternativeTerms: [ 'Non-reassignable identifier' ]
  iso24760Term: "reference identifier"
  description: >
      An identifier that reliably references an identity in a particular scope.
      Once assigned, the identifier always references the same identity, it cannot be assigned to a different identity.
      Reference identifiers are often persistent, however, they can change, as long as the identifier is not re-assigned to other identity.

      Depending on a policy, reference identifiers can be re-assign to another identity after the original identity was deleted (identifier re-use).
      However, there is usually relatively long interval during which the identifier cannot be re-assigned.
  example:
      National identifiers and social security numbers (SSN) are usually reference identifiers, assigned to a person and referencing only that single person.
      Such identifiers can change on rare occasions, however the old values are not used to reference any other person.
  seeAlso: [ 'identifier', 'persistent-identifier', 'reference-identifier-generator' ]
  upkeepStatus: green

- id: reference-identifier-generator
  term: Reference Identifier Generator
  alternativeTerms:
  iso24760Term: "reference identifier generator"
  description: >
      ISO 24760 term, used to describe the tool that generates reference identifier, usually during an enrollment and registration.
  example:
  seeAlso: [ 'reference-identifier', 'enrollment', 'identity-registration' ]
  upkeepStatus: green

- id: referential-integrity
  term: Referential Integrity
  alternativeTerms:
  description: >
      Consistency constraint in a database, mandating that every reference points to a valid object.
      Simply speaking, when an identifier is used to reference another object, such objects should exist.

      Referential integrity is often a concern in group management and directory services.
      Systems that provide referential integrity make sure that a group points to valid members (user that exist), or that a list of user groups points to valid groups.
      In case a user who is a member of a group is removed, a system with referential integrity will either automatically remove the user from the group, or it will deny the operation until user is explicitly removed from all groups first.
      Systems that do not provide referential integrity would allow such operation, leaving invalid identifier in the database, an identifier that does not point to any existing object.
  example:
  seeAlso: [ 'schema', 'digital-identity-attribute', 'verification' ]

- id: registration-authority
  term: Registration Authority
  acronym: RA
  alternativeTerms:
  iso24760Term: registration authority
  description: >
      An entity that gathers and verifies identity information, for the purposes of enrollment and identity registration.
      Registration authority is usually the organization that carries out identity proofing by verifying identity evidence, such as national identity cards.
  example:
  seeAlso: [ "identity-registration", "enrollment", "identity-proofing", "identity-evidence" ]
  upkeepStatus: green

- id: relying-party
  term: Relying Party
  acronym: RP
  alternativeTerms: [ 'Service Provider' ]
  iso24760Term: relying party
  x1252Term: relying party
  description: >
      System that relies on other party (identity provider) to provide identity information.
      Relying party (also known as "service provider") usually relies on identity provider to authenticate the user, and relay the information to the relying party.
      Relying party has no access to credentials (e.g. passwords), it only knows that the authentication was successful.
      Identity provider may transfer identity attributes and additional information (such as authorization decisions) to the relying party.
      Relying party usually has a trust relationship with identity provider.
  example:
  seeAlso: [ 'identity-provider', 'sso', 'identity-federation' ]
  upkeepStatus: green

- id: repository
  term: Repository
  alternativeTerms: [ "MidPoint repository" ]
  description: >
      A database, often a database of self-contained objects.
      In identity and access management context, it usually means a database of identity information.
  midPointDescription: >
      MidPoint internal database. It is used to store all internal midPoint data and vast majority of midPoint configuration.
  example:
  seeAlso:

- id: resource
  term: Resource
  alternativeTerms: [ "Information Resource", "Data Resource" ]
  description: >
      In generic terms, a Resource is any information asset, system or a service that can be meaningfully used to obtain an information, or to initiate an action.
      Web resources are often used to access information across World Wide Web, e.g. in a form of RESTful interfaces.
      In IAM field, a Resource (Identity Resource) is usually an network-accessible asset capable of managing identity information.
  midPointDescription: >
      A Resource is a system that is either identity data source or provisioning target.
  example:
  seeAlso: [ "identity-resource" ]

- id: rest
  term: REST
  alternativeTerms: Representational State Transfer
  description: >
      Architectural style that describes fundamental principles of World Wide Web (WWW).
      REST architectural style was used to develop HTTP protocol, fundamental building block of WWW.
      REST specifies a concept of resource (web resource), identified by Unified Resource Locator (URL), access by unified interface.
      Although REST is designed for hypertext applications, some of the REST principles are used for general-purpose programming interfaces, known as "RESTful" services or APIs.
  example:
  seeAlso: [ 'restful-service', 'api', 'resource' ]

- id: restful-service
  term: RESTful Service
  alternativeTerms: [ 'REST Service', 'REST API' ]
  description: >
      Usually a general-purpose programming interface (API) or network service, exposed by one application to be used by another application.
      RESTful services are based on operations of HTTP protocols such as GET, PUT and POST.
      RESTful services are using Unifier Resource Locators (URLs) as addressing scheme, and also for the purposes of conveying some parameters.
      Despite the name, RESTful services actually do not strictly follow principles of REST architectural style.
      REST architectural style is designed for use in hypertext applications, while most RESTful services are procedural in nature.
      Therefore most RESTful services adapt and bind the REST principles for their purposes.
      Despite such deformations, RESTful services provide a very popular method for application-to-application interaction over the Internet.
  example:
  seeAlso: [ 'rest', 'api' ]

- id: role
  term: Role
  alternativeTerms:
  x1252Term: role
  description: >
      Abstract concept that usually groups entitlements (privileges, access rights) in a single object.
      The purpose of grouping entitlements in roles is to make access control policies manageable, usually using Role-Based Access Control (RBAC) principles.
  example:
  seeAlso: [ "entitlement", "rbac", "role-management" ]

- id: role-management
  term: Role Management
  alternativeTerms: [ "Role Modeling" ]
  description: >
      A process of managing role definitions.
      It usually includes creating role definitions, maintenance of role definitions, adapting to changed environment and decommissioning role definitions.
      Role management is concerned with role definitions only, in contrast with Role-Based Access Control (RBAC), which is mostly concerned in using the definitions to control the access.
  example:
  seeAlso: [ "role", "rbac" ]

- id: schema
  term: Schema
  alternativeTerms: [ 'Data model', 'Identity model' ]
  description: >
      Description of a structure of information, such as description of data types, attribute names and types, attribute structure and multiplicity,
      often supplemented by additional information such as documentation and presentation metadata.

      In information systems designed to process identity information, the schema usually refers to structure of digital identity data,
      names of identity attributes, their types, multiplicity, optionality and similar properties.
  example:
  seeAlso: [ 'digital-identity-attribute', 'verification', 'referential-integrity' ]
  todo: expand

- id: security-audit
  term: Security Audit
  alternativeTerms:
  x1252Term: security audit
  description: >
      Independent review of a system, in order to assess adequacy of security controls, evaluate compliance with policies, regulations and operational procedures.
  example:
  seeAlso:

- id: selective-disclosure
  term: Selective Disclosure
  alternativeTerms: [ 'Selective Disclosure of Personal Information' ]
  iso24760Term: selective disclosure
  description: >
      A mechanism that gives person a control over the sharing of data, usually between domains.
      Selective disclosure is sometimes applied in cross-domain data transfer, such as when using identity providers or identity federations.
      In case of data transfer, the user is prompted to select that data that can be disclosed to the other domain.
      This process is sometimes automatic, governed by a pre-defined data disclosure policy.
  example:
  seeAlso: [ "digital-identity", "personal-data-protection", "privacy", "identity-provider", "identity-federation", "minimal-disclosure" ]
  upkeepStatus: green

- id: self-asserted
  term: Self-Asserted
  alternativeTerms:
  description: >
      An assertion (claim) made by an entity about itself.
      It usually means a claim that was not verified or certified by any other party.
  example:
  seeAlso: [ "self-asserted-identity" ]

- id: self-asserted-identity
  term: Self-Asserted Identity
  alternativeTerms:
  x1252Term: self-asserted identity
  description: >
      An identity (usually a digital identity) that an entity declares about itself.
      It usually means a set of digital identity attributes that an entity claimed about itself, without being verified of certified by any other party.
  example:
  seeAlso: [ "self-asserted", "decentralized-identifier", "identity-assertion" ]

- id: sso
  term: Single Sign-On
  acronym: "SSO"
  alternativeTerms: [ "Single Log-On" ]
  description: >
    Single sign-on (SSO) is an authentication process based on user logging into multiple systems with single set of credentials (usually username and password)s.
    It is used for systems that require authentication for each application while using the same credentials.
    SSO works on central service from where the user gains access to different applications without logging in again.

    Unlike identity providers, SSO systems usually operate within a single domain.
    Both the SSO server and the applications being controlled by the same organization.
    Implicit trust of such arrangement allows SSO systems to be much simpler than identity federation systems, albeit both classes of systems provide similar services and mechanisms.
  example: >
    Tom has a Google account which he has logged in to and receives a Google Accounts-generated cookie.
    He wishes to enter Google Drive.
    After that, he is redirected to his Google account which sees that Tom already has an authentication-related cookie, so he is redirected to Google Drive.
  seeAlso: [ 'authentication', 'identity-provider', 'identity-federation' ]

- id: subject
  term: Subject
  alternativeTerms: [ 'Principal' ]
  description: >
      An entity or identity, which is active in information system, typically a user.
      It is assumed that subject has an agency, directly or indirectly.
      Subjects can represent organizations or similar "legal persons" that cannot act on their own, users have to act on their behalf.
      In this case the organization is the "subject", while the person that acts on organization behalf is the "user".

      The term "subject" is often used in context of authorization, as part of subject-action-object triple.
      Subject is the active part, a user executing certain action on a specific object.
      In some contexts, "subject" is equivalent to "principal".
  example:
  seeAlso: [ 'principal', 'user', 'entity', 'identity', 'account', 'authorization' ]

- id: target-system
  term: Target System
  alternativeTerms:
  description: >
      In IAM field, it is any system in which identity management (IDM) system is managing identity data.
      IDM system is usually using identity connectors to manage data in target systems.

      Some target systems can also be (partial) identity data sources, IDM system both managing and reading the data.
  example:
  seeAlso: [ "identity-management-system", "identity-connector", "identity-data-source" ]

- id: trust
  term: Trust
  alternativeTerms:
  x1252Term: trust
  description: >
      Confidence in or reliance on some person or quality.
      In information technology world, it usually means a confidence in a correctness of an information.
      It is often a long-term relationship between entities, one of the entity trusting in correctness of a whole class of information claimed by other entity (trusted third party).
  example:
  seeAlso: [ "trusted-third-party" ]
  upkeepStatus: orange
  todo: expand

- id: trusted-third-party
  term: Trusted Third Party
  alternativeTerms:
  x1252Term: trusted third party
  description: >
      An entity which makes a claims, claims that are trusted by other parties.
      Usually a central entity in a system that is trusted by many entities.
  example: >
      Certificate authority is a trusted third party, many systems trusting the information presented in certificates issued by certificate authority.
  seeAlso: [ "trust" ]
  upkeepStatus: orange
  todo: expand

- id: user
  term: User
  alternativeTerms: [ "MidPoint User" ]
  x1252Term: user
  description: >
    Generally speaking, a person that is using a computing system.
  midPointDescription: >
    A user means a data structure in midPoint that describes a person.
    Similar data structure in source/target system (identity resource) is called an "account".
  example:
  seeAlso: [ 'account', 'principal', 'subject' ]
  upkeepStatus: green

- id: user-centric
  term: User-Centric
  alternativeTerms:
  x1252Term: user-centric
  description: >
      A system that is oriented towards the user, having user in control.
      In identity and access management context it usually means a system, where users are in control of their data.
  example:
  seeAlso:
  upkeepStatus: green

- id: verification
  term: Verification
  iso24760Term: verification
  x1252Term: verification
  description: >
      A process establishing that a particular information is correct, while the meaning of "information" and "correct" varies from context to context.
      When dealing with identity information, this usually means formal verification of identity attributes, checking the schema, identifier uniqueness and referential integrity.
      However, verification may mean deeper verification, such as checking that the information is true and up-to-date.
  example:
  seeAlso: [ 'digital-identity-attribute', 'schema', 'referential-integrity' ]
  upkeepStatus: green

- id: verifier
  term: Verifier
  iso24760Term: verifier
  description: >
      ISO 24760 term, denoting entity that performs verification.
  example:
  seeAlso: [ 'verification' ]
  upkeepStatus: green
