# TODO:
# Digital identity
# Identity attribute
# Schema
# (identity) synchronization (NOTE: we already have generic-synchronization)
# reconciliation
# Identity proofing
# Level of assurance
# Identity analytics and intelligence
# PAM
# Data sources, authoritative data sources
# System of Record (SoR)
# SoD
# Persona
# LDAP
# SCIM
# Risk management, risk assessment
# Security program/process (vs security project)
# IAM program/process (vs IAM project)
#
# directory service
#

- id: abac
  term: Attribute-Base Access Control
  acronym: "ABAC"
  alternativeTerms:
  description: >
      A mechanism for managing of user access to information systems based on values of user attributes.
      Attribute-Based Access Control (ABAC) evaluates the access dynamically, using an algorithm that takes "attributes" as an input, and outputs access decision (allow/deny).
      The attributes are usually user attributes from the user profile, supplemented with context attributes, such as time of access and user's current location.
  example:
  seeAlso: [ "access-control" ]

- id: access-certification
  term: Access Certification
  alternativeTerms: [ "Access Re-certification", "Re-certification", "Attestation" ]
  description: >
    Access certification helps with management of access rights.
    These rights also called privileges, role assignments, authorities or authorizations need to be assigned to the right users in the right systems at the right time.
    Access Certification means reviewing the settings such as assignments of roles to users to make sure that employees have accesses to the systems they need.
  example: >
    An employee works as a manager of research department.
    He has access to various systems and databases.
    He gets promoted to senior management where he is assigned to a new working group and gets access to different resources.
    During access certification campaign the list of his privileges is reviewed and privileges which are not required anymore are removed.
  seeAlso:

- id: access-control
  term: Access Control
  alternativeTerms:
  description: >
      Access control is an abstract concept of controlling access of users to applications.
      It is a very broad and general term, however it usually refers to a mechanism to define and evaluate authorization policies.
      Two commonly-used access control mechanisms are role-based access control (RBAC) and attribute-based access control (ABAC).
  example:
  seeAlso: [ "rbac", "abac" ]

- id: access-management
  term: Access Management
  acronym: "AM"
  alternativeTerms:
  description: >
    Access Management (AM) is a security discipline that provides access to authorised users to enter particular resources.
    It also prevents non-authorised users from accessing the resources.
    Thus the goal of Access Management is to unify the security mechanisms that take place when a user is accessing specific system or functionality.
    Single Sign-On (SSO) is sometimes considered to be a part of Access Management.
  example: >
    New employee is hired.
    He needs access to various resources like databases, servers or applications and is also added to various access groups according to his job role.
    Access Management system makes sure he gets the access on time and to needed systems. Thanks to AM, it is determined what is available there for him, which information or funcionality he sees and which parts of the system he can work with.

    Access Management is frequently called Identity Management, but these terms are not identical.
    Identity Management is about managing attributes related to the user such as username, fullName, location, telephone number or authorizations while Access Management is about evaluating attributes based on policies and making yes and no decisions.
  seeAlso:

- id: account
  term: Account
  alternativeTerms: [ "User account" ]
  description: >
    Data structure in a database, file or a similar data store that describes characteristics of a user of a particular system (resource).
    Accounts are used to control access of users to applications, databases and so on.
    In midPoint terminology, an account strictly means a data structure in source/target system (resource).
    Term "user" is used to describe a similar data structure in midPoint itself.
  example:
  seeAlso: user

- id: active-directory
  term: Active Directory
  alternativeTerms:
  description: >
    An identity repository created by Microsoft that stores and arranges identity information.
    Based on this information, it provides access and permissions to users to enter particular resources and therefore improves organization’s security.
  example:
  seeAlso:

- id: api
  term: Application Programming Interface
  acronym: API
  alternativeTerms:
  description: >
      Set of procedures, functions or methods that can be used by another program or component.
      APIs are usually interfaces exposed by an application, meant to be used by other application.
      Therefore APIs are important integration points between applications and services.
      In the past, APIs were usually created as a programming language library, such as C or Java library.
      Since c. 2010, APIs usually take form of HTTP-based RESTful service.
  example:
  seeAlso: [ 'restful-service' ]

- id: authentication
  term: Authentication
  alternativeTerms:
  description: >
    Authentication is a mechanism by which a computer system checks that the user is really the one she or he claims to be.
    Authentication can be implemented by a broad variety of mechanisms broadly divided into three categories:
    something you know, something you have, something you are.
    Traditionally, authentication is done by the means of by username and password.
    Authentication is often followed by authorization, however, authentication and authorization are two separate mechanisms.
  example: >
    An employee wants to log in to a working group.
    He provides his username and password.
    This data is compared with the information stored in the company’s database to see if it matches or not.
    This process is password-based authentication (something you know).
  seeAlso: [ 'authorization' ]
  upkeepStatus: green

- id: authorization
  term: Authorization
  alternativeTerms:
  description: >
    Authorization is a mechanism by which a computer system determines whether to allow or deny specific action to a user.
    Authorization is often controlled by rather complex rules and algorithms, usually specified as part of an access control model.
    Authorization often follows (and required) authentication, however, authentication and authorization are two separate mechanisms.
  example: >
    An employee wants to access data of a working group he is assigned to.
    After successful authentication, the computer system that controls the data determines whether the user is part of the working group.
    As a member of the group the user can read and modify the data (operations are allowed)
    If the user tries to delete another user, the operation will be denied, because he is lacking administration authorizations.
  seeAlso: [ 'authentication', 'rbac', 'abac', 'coarse-grain-authorization', 'fine-grain-authorization', "access-control" ]
  upkeepStatus: green

- id: authorization-service
  term: Authorization Service
  alternativeTerms: [ 'Authorization Server' ]
  description: >
      A system that provides authorization information to an application.
      It usually makes a decision whether a specific operation should be allowed or denied by the application.
      I.e. authorization system is performing the authorization decision instead of the application.
      Authorization systems often use complex policy, user roles or additional attributes to make the decision.
      Authorization servers usually implement functionality of Policy Decision Point (PDP).
      Typical protocols and frameworks: XACML, Open Policy Agent (OPA), SAML authorization assertions, proprietary mechanisms
  example:
  seeAlso: [ 'authorization' ]
  upkeepStatus: green

- id: cloud-computing
  term: Cloud Computing
  alternativeTerms:
  description: >
    Internet-based computing when resources like storage, applications or servers are used by organizations or users via Internet.
    Data could be accessed any time from any place, without any installations and is stored and processed in third-party data centers which could be located anywhere in the world.
    Cloud computing is considered to lower organization’s costs by avoiding the need of purchasing servers as well as to speed up the processes with less maintenance needed.
    Due to data being centralized at one place, it is considered to be secure and easily shared across bigger amount of users.
  example: >
    Company creates construction machines.
    It has factories at more places in the world. It uses cloud storage to store the construction documents and instructions.
    This data can be accessed by employees in all its factories simply via Internet.
  seeAlso:

- id: coarse-grain-authorization
  term: Coarse-grain Authorization
  alternativeTerms:
  description: >
      Authorization concerning big architectural blocks, such as entire applications or systems.
      E.g. coarse-grain authorization usually decides whether a user can access an application, or access should be denied, without providing any additional details.
      Coarse-grained authentication is usually being made at the "perimeter" of the system, e.g. by infrastructure components, when a user is accessing an application.
      Typically, this authorization is based on simple policy rules, such as a role or group assigned to the user.
  example:
  seeAlso: [ 'authentication' ]
  upkeepStatus: green

- id: connid
  term: ConnId
  alternativeTerms: [ "ConnId Framework" ]
  description: >
      ConnId is an open source identity connector framework project.
      It originated from Identity Connector Framework (ICF) developed by Sun Microsystems in late 2000s.
      ConnId is an now an independent open source project, used by several identity management platforms.
  seeAlso: [ "identity-connector", "identity-connector-framework" ]

- id: consent-for-personal-data-processing
  term: Consent for Personal Data Processing
  alternativeTerms: [ "Consent" ]
  description: >
      Consent for personal data processing is given by a user, to indicate agreement for processing of personal data.
      In personal data protection frameworks (such as GDPR), consent has a strict structure, it is given for a very specific processing scope.
      Consent can be revoked by the user any time.
      Consent is just one of several personal data processing bases (lawful bases).
      Consent is perhaps the most well know, and also the most misused basis for personal data processing.
  seeAlso: [ "personal-data-protection", "personal-data-processing-basis", "gdpr" ]

- id: delegated-administration
  term: Delegated Administration
  alternativeTerms:
  description: >
    Type of administration where chosen users have administrator permissions.
    They can manage other users, create passwords for them, move them into groups, assign them roles, etc.
  example: >
    John is responsible for a research project group.
    He adds new users to the group, assigns roles to specific users and also deals with the issues inside the group.
    Thanks to delegated administration, a company is able to be more effective as the work process around maintenance of groups is reduced.
  seeAlso:

- id: entitlement
  term: Entitlement
  alternativeTerms: [ "privilege", "access right" ]
  description: >
    A privilege or right of access given to the user.
    An "entitlement" is a very overloaded term.
    It can be used to represent any kind of privilege, ranging from a very high-level business role to the finest filesystem permission in a specific system.

    In midPoint parlance, an Entitlement is a resource object representing privilege, access right, resource-side role, group or any similar concept.
    However, unlike account, the entitlement does not represent a user.
  example: >
    The organization has three groups of users which will work on a new project.
    For that the organization needs to assign the groups new privileges.
    Thanks to the entitlements, all groups can be managed seamlessly in a uniformed way.
  seeAlso:

- id: gdpr
  term: General Data Protection Regulation
  acronym: GDPR
  alternativeTerms:
  description: >
      General Data Protection Regulation 2016/679 (GDPR) is European Union regulation on personal data protection and privacy.
      It defines rules for processing of personal data in European Union, European Economic Area, with provisions of the regulation applicable to other parties as well.
  example:
  seeAlso: [ 'personal-data-protection' ]

- id: generic-synchronization
  term: Generic Synchronization
  alternativeTerms:
  description: >
    Advanced model of synchronization where not only users and accounts are synchronized, but also groups to roles, organizational units to groups, roles to ACLs and so on.
  example: >
    A company has research department which is linked to a working group providing analysis.
    Thanks to generic synchronization, changes set for research department can be also applied on working group.
    Also if the research department is gone, working group can be automatically deleted.
  seeAlso:

- id: grc
  term: Governance, risk management and compliance
  acronym: "GRC"
  alternativeTerms:
  description: >
    Governance, risk management and compliance (GRC) is a discipline that helps organizations to have more control over processes and be more effective.
    Governance is the set of decisions and actions by which individual processes as well as the whole organization are lead to achieve specific goals.
    Risk management identifies, predicts and prioritizes risks with aim to minimize them or avoid their negative influence on organizations' aims.
    Compliance means following certain rules, regulations or procedures.
    A GRC software facilitates this problematic by taking care of all three parts by one single solution.
    It is a very helpful tool for business executives, managers or IT directors.
    Thanks to it it is possible to define, enforce, audit and review policies responsible for the exchange of information between internal systems as well as between the external ones.
  example: >
    John is manager of the IT department in a bank.
    To have enough control over processes as well as users, he needs to have relevant information in one place to work with it effectively.
    If he is able to define, enforce, review and audit policies and map the functions to comply with requirements with one solution, he has better control over the information flow, which helps him to lower possible risks such as information fraud.
  seeAlso:

- id: identity-and-access-management
  term: Identity and Access Management
  alternativeTerms: [ "IAM" ]
  description: >
      Identity and access management (IAM) is a field concerned with managing identities (e.g. users) and their access to systems and applications.
      IAM is concerned with all the aspects dealing with "identity", with many subfields that specialize in selected aspects.
      Access management deals (AM) especially with access to applications, including authentication and (partially) authorization.
      Identity management and governance (IGA) deals with management of user data (e.g. user profiles), synchronization of identity data and applying policies.
      Other IAM subfields deal with storage of identity data, transfer of the data over the network and so on.
  example:
  seeAlso: [ "identity-management", "iga", "access-management", "identity-data-store" ]
  readMore: /iam/

- id: identity-connector
  term: Identity Connector
  alternativeTerms: [ "Connector" ]
  description: >
      Usually small and simple unit of code that connects to a remote system.
      The purpose of identity connector is to retrieve and manage identity information, such as information about user accounts, groups and organizational units.
      The connectors are usually written for and managed by a particular connector framework.
  example: >
      When company uses identity management system and needs to integrate it with Active Directory servers, it simply uses Active Directory Connector (LDAP).
  seeAlso: [ "identity-connector-framework", "connid" ]

- id: identity-connector-framework
  term: Identity Connector Framework
  alternativeTerms: [ "Connector Framework", "ICF" ]
  description: >
      Generally speaking, a programing framework (library) for creating and managing identity connectors.
      However, this rather generic term often refers to the Identity Connector Framework (ICF), originally developed by Sun Microsystem in 2000s.
      The ICF was releases as an open source project by Sun, only to be later abandoned after Sun-Oracle merger.
      The ICF was a base for several forks, including ConnId and OpenICF.
  seeAlso: [ "identity-connector", "connid" ]

- id: identity-data-source
  term: Identity Data Source
  alternativeTerms: [ "Source System" ]
  description: >
      A system that is the source of identity data, usually data about users.
      The data are usually created and maintained in such systems manually.
      There are often multiple identity data sources in an organization with various characteristics.
      Some data sources are considered authoritative, providing reliable information about identities.
      Other data sources usually contain user-provided information, such as data entered by the user during registration process.
      Almost all data sources contain partial information only, information that is limited both in breadth (only some identity types) and depth (only some attributes).
      Data source may be an intermediary, providing information acquired from other systems.
  example: >
      A human resource (HR) system is usually an authoritative data source regarding organization employees and employment status.
      Directory server can be a source of user-provided profile attributes.
  seeAlso:

- id: identity-data-store
  term: Identity Data Store
  alternativeTerms: [ "Identity Store", "Identity Database", "Directory Service" ]
  description: >
      A database, designed and/or dedicated to store identity-related data.
      Identity data store is usually shared among many applications, it is accessed by many systems reading the data.
      Applications read data from identity data stores, often using them for authorization, and sometimes even authentication purposes.
      Traditionally, directory servers (such as LDAP serves) are used as identity data stores.
  example:
  seeAlso:

- id: identity-deprovisioning
  term: Identity Deprovisioning
  alternativeTerms: [ "Deprovisioning" ]
  description: >
      Identity deprovisioning is as well as identity provisioning a subfield of Identity and Access Management (IAM).
      It is an opposite to identity provisioning.
      While identity provisioning takes care of creating new accounts, determining the roles for individual users and their rights or making changes in them, deprovisioning works oppositely.
      When an employee leaves the company, his account is deactivated or deleted and he loses all the accesses to both internal and external systems.
      This way organization minimizes information theft and stays secure.
      Identity provisioning together with deprovisioning and associated activities is known as "fulfillment".
  example: >
      A manager retires from the organization.
      Thanks to identity deprovisioning, his company email is deactivated, he loses access to working groups, cloud storage and every other system he had access to.
  seeAlso: [ "fulfillment" ]

- id: identity-federation
  term: Identity Federation
  alternativeTerms:
  description: >
    Identity federation is a process of sharing user’s identification and personal data between multiple systems and between organizations, so the user doesn’t have to register for each organization separately and can seamlessly access systems in federated organizations.
  example: >
    A student goes for an internship to another university.
    Thanks to identity federation, he is registered to the library, student system and online timetable automatically.
  seeAlso:

- id: identity-governance
  term: Identity Governance
  alternativeTerms: [ "Governance" ]
  description: >
    Business aspect of managing identities including business processes, rules, policies and organizational structures.
    Any complete solution for management of identities consists of two major parts – identity governance and identity management.
  example: >
    Company hires 3 new employees, who need various privileges – some of them automatically, some in ad-hoc manner and some must not be given to any of them.
    The company sets up an approval process to keep things under control and keeps track of assignments and approvals to keep people accountable.
    There is also new policy and regulation taking effect soon that system needs to be compliant with.
    Company deals with such processes by means of identity governance.
  seeAlso: [ "iga", "grc", "identity-management" ]

- id: identity-lifecycle
  term: Identity Lifecycle
  alternativeTerms:
  description: >
    Set of identity stages from creation to its deactivation or deletion.
    It contains creation of an account, assignment of correct groups and permissions, setting and resetting passwords and in the end deactivation or deletion of the account.
  example:
  seeAlso: identity-deprovisioning, identity-provisioning

- id: identity-management
  term: Identity Management
  acronym: "IDM"
  alternativeTerms:
  description: >
    Identity Management (IDM) is a process of managing identities and their accesses to specific resources in the cyberspace.
    It ensures appropriate access in appropriate time and helps to manage user accounts as well as to synchronize data.
  example: >
    When new employee is hired, he gets his user account in the company.
    In this account not only the information about himself is stored, but also information related to permissions for this user or his group and role membership.
    The aim of identity management is the management of user accounts, so users are assigned to correct groups, they have correct roles as well as permissions they are supposed to have.

    Identity management can be used to manage identities such as employees, students, customers, business partners or suppliers and finds its usage in various markets.
    Therefore the identity became a new perimeter of security.
    In the past, private nets of companies were isolated from the Internet and connected just through a safe point.
    This stopped to be effective as people started to use notebooks or phones altogether with Internet.
    The security perimeter can be replaced with Identity Management, by which we can manage who has the access to specific resources.
  seeAlso: [ "access-management", "identity-lifecycle", "identity-provisioning", "iga" ]

- id: identity-management-system
  term: Identity Management System
  alternativeTerms: [ "IDM System", "Provisioning System", "User Provisioning System" ]
  description: >
      A system that provides identity management functionality: it is managing identities and their accesses to specific resources in the cyberspace.
      It ensures appropriate access in appropriate time and helps to manage user accounts as well as to synchronize data.

      Identity management (IDM) systems are concerned about the "management" side, maintaining user data, policies, roles, entitlements and so on.
      IDM systems usually do not "apply" or enforce the policies.
      The policies are transformed as needed and provisioned to other systems (a.k.a. "target systems") that interpret and enforce the policies.
      The process of provisioning (and "deprovisioning") of data and policies is known as "fulfillment".

      In a broad sense, IDM systems are used to manage the policies and data in all connected systems in the organization.
      IDM systems make sure that the data are consistent, that all the policies are applied, that user profile data are up to date,
      detecting and removing illegal access and generally keep all identity-related information in order across all the systems.
  example: >
      Identity management (IDM) system usually takes information about employees from the Human Resource (HR) system.
      When new employee is recorded into HR system, this information is detected and pulled by the IDM system.
      After that, it is processed to determine set of roles each user should have.
      These roles determine and create accounts users should have, so everything is ready for new users on the very first day.
      If a user is transferred to another department or his privileges change, similar processes happen again.
      If an employee leaves the company, IDM systems makes sure all his accounts are closed.
  seeAlso: [ "identity-management", "identity-lifecycle", "identity-provisioning", "iga" ]

- id: identity-provider
  term: Identity Provider
  acronym: "IdP"
  alternativeTerms:
  description: >
      System that provides identity-related information to applications (known in this context as "service providers").
      This is usually information related to authentication, such as identifiers of the user and strength of authentication mechanism.
      Identity provider is authenticating the user in its own capacity, it never reveals user's credentials to the application.
      Identity provider may provide also additional information of the user to the application, such as information about user attributes and entitlements.
      Identity provider is often managed by a different organization than the relying applications (service providers), thus providing cross-domain identity mechanism.
      Typical protocols and frameworks used by identity providers include: SAML, OpenID Connect, CAS
  example: >
      SAML identity providers (e.g. Shibboleth server), OpenID providers (OpenID Connect), Active Directory Federation Server, CAS server.
      Some parts of Active Directory domain services may also be considered an identity provider, albeit usually used as intra-organization only.
  seeAlso: [ "identity-federation" ]
  upkeepStatus: green

- id: identity-provisioning
  term: Identity Provisioning
  alternativeTerms: [ "User provisioning", "Provisioning" ]
  description: >
      In broad sense, identity provisioning is a subfield of Identity Management (IDM), concerned with technical aspects of creating user accounts, groups and other objects in target systems.
      It is a technology thanks to which many identity stores are synchronized, merged and maintained.
      Identity provisioning takes care of technical tasks during the whole user lifecycle - when new employee is hired, when his responsibilities change or he leaves the company (deprovisioning).
      It helps the organization to work more effectively as its goal is to automate as much as possible.

      The provisioning system usually takes information about employees from the Human Resource (HR) system.
      When new employee is recorded into HR system, this information is detected and pulled by the provisioning system.
      After that, it is processed to determine set of roles each user should have.
      These roles determine and create accounts users should have, so everything is ready for new users on the very first day.
      If a user is transferred to another department or his privileges change, similar processes happen again.
      If an employee leaves the company, identity provisioning systems makes sure all his accounts are closed.

      In a specific sense, identity provisioning means a process of creating accounts, assigning entitlements and similar actions,
      making sure a user has appropriate access to information systems.
      Identity provisioning together with deprovisioning and associated activities is known as "fulfillment".
  example: >
      New manager is hired in the organization.
      He is recorded into HR systems and thanks to identity provisioning, his company email is created, he gets access to working group as well as cloud storage.
      When the manager retires, identity provisioning makes sure all his accounts are disabled in accordance with the safety of the organization data.
  seeAlso: [ "identity-management", "identity-lifecycle", "fulfillment" ]
  upkeepStatus: orange

- id: identity-resource
  term: Identity Resource
  alternativeTerms: [ "Provisioning Resource", "Resource" ]
  description: >
      In IAM field, a Resource is usually an network-accessible asset capable of managing identity information.
      In midPoint parlance, an Resource is a system that is either identity data source or provisioning target.
      IDM system (midPoint) is managing accounts in that system, feeding data from that system or doing any other combination of identity management operations.
      Identity resource should not be confused with "web resource" that is used by RESTful APIs.
  example:
  seeAlso: [ "resource", "identity-connector" ]

- id: iga
  term: Identity Governance and Administration
  acronym: "IGA"
  alternativeTerms:
  description: >
      Identity governance and administration (IGA) si a subfield of identity and access management (IAM) dealing with management and governance of identity-related information.
      IGA systems store, synchronize and manage identity information, such as user profiles.
      Complex data, entitlement and governance polices can be defined, applied to identity data.
      IGA system are responsible for evaluating the policies, making sure the data are compliant, addressing policy violations.
      IGA is often considered an umbrella term covering identity management, identity governance, compliance management, identity-based risk management and other aspects related to management of identities.
      Identity Governance and Administration (IGA) includes both the technical and business aspects of identity management.
  seeAlso: [ "identity-management", "identity-governance", "grc", "identity-and-access-management" ]
  readMore: /iam/iga/

- id: fine-grain-authorization
  term: Fine-Grain Authorization
  alternativeTerms:
  description: >
      Authorization made on very detailed information and is providing more detail control within the application operation.
      E.g. authorization to approve the transaction in an accounting system, with amount up to a certain limit.
      Typically, fine-grain authorization requires detailed knowledge of both the user profile (attributes) and the operation context (operation name, parameters and their meaning).
      Due to this requirement, fine-grain application is often implemented directly in application code.
  example:
  seeAlso: [ 'authentication' ]
  upkeepStatus: green

- id: fulfillment
  term: Fulfillment
  alternativeTerms: [ 'Provisioning/deprovisioning' ]
  description:
      Fulfillment is a functionality of identity management (IDM) system, making sure that users have appropriate access to systems.
      Simply speaking, this is the functionality that creates accounts, associates them with entitlements (e.g. groups), modifies passwords, enables/disables accounts and deletes them in the end.
      Fulfillment is a name used for identity provisioning together with deprovisioning and associated activities.
  example:
  seeAlso: [ 'identity-management', 'identity-management-system', 'identity-provisioning', 'identity-deprovisioning']
  readMore: /iam/iga/fulfillment/
  upkeepStatus: orange

- id: open-source
  term: Open Source
  acronym: "OSS"
  alternativeTerms: [ "Open Source Software", "FOSS", "Free and Open Source Software" ]
  description: >
    The meaning of this term is very simple - it is something people can wilfully modify according to their own needs or wishes.
    Firstly, this term was known in the context of software, which code was publicly exposed and available for modification.
    Later open source spread widely.
    There are open source projects, products, participations and many others.

    Many organizations and people choose open source software, hence it is considered to be more secured and grants people more control over it.
    This software can also be more stable as many other people may contribute their own ideas, correct it or improve it.

    Open source products are free and the creators usually charge other organizations for support or software services as implementation or deployment.
  example: >
    There are many open source software or systems available on the market.
    One of the best known is perhaps Linux, a computer operating system with the penguin logo.
    Anyone can download it and adjust its code according to one’s own needs.
  seeAlso:

- id: organizational-structure
  term: Organizational Structure
  alternativeTerms:
  description: >
    A hierarchical arrangement of authority, rights or duties in an organization.
    It determines the assignment, control or coordination of roles, responsibilities and power.
    A character of the organizational structure is highly dependant on the organization’s strategy and goals.

    The theme of organizational structure is closely linked to identity management.
    Organizing the company into this structure, assigning rights to individuals, working groups or project and controlling everything from one place – that are advantages that any high quality IDM solution is supposed to provide.

  example: >
    An organization has production department, marketing department and support department.
    Above them there are managers and head of the company, below are working groups or particular employees.
    Altogether they create an organizational structure.
    Their power, rights and duties differ according to their position in the structure.
  seeAlso:

- id: password-management
  term: Password Management
  alternativeTerms: [ "Credential management" ]
  description: >
    Gives the organization an opportunity to meet the highest security standards thanks to the ability of having access to business systems and networks under control.
    Most of the employees usually pick just simple passwords and use same ones in multiple systems or applications.
    Password management helps to compose strong and unique passwords for both users and resources and ideally takes care of them during the whole user life cycle.
  example: >
    An organization works with midPoint and wishes to use its credential management feature to ensure the information safety.
    IT employee responsible for security sets midPoint’s password policy.
    He decides what characters are allowed in the password, how many times they can repeat, how many are required and how they are positioned.
    He sets minimal and maximal length of the password or minimal number of unique characters used in it.
    The outcome is complex and strong password that lowers the risk of the account being hacked.
  seeAlso:

- id: pep
  term: Policy Enforcement Point
  acronym: 'PEP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to enforce policy decisions.
      The "policy" usually refers to access control and/or authorization policy.
      Policy enforcement points are usually part of applications or infrastructure components, with an ability to analyze and intercept policed operation.
      Policy enforcement point only enforces the policy, it does not interprets or decides the policy.
      PEP depends on policy decision point (PDP) to interpret the policy and make a decision.
  example:
  seeAlso: [ 'authorization', 'access-control', 'pdp', 'pmp' ]

- id: personal-data-erasure
  term: Personal Data Erasure
  alternativeTerms: [ 'Erasure', 'Data erasure' ]
  description: >
      Erasure (deletion) of personal data, usually due to explicit request from user (e.g. "delete account" request), or due to lack of lawful basis for personal data processing.
  example:
  seeAlso: [ 'personal-data-protection', 'personal-data-processing-basis', 'gdpr' ]

- id: personal-data-processing-basis
  term: Personal Data Processing Basis
  alternativeTerms: [ 'Basis for processing', 'Legal basis', 'Lawful basis' ]
  description: >
      Basis for processing of personal data.
      Legal data protection frameworks (such as GDPR) usually mandate that personal data cannot be processed unless there is a basis for that processing.
      The basis may be a contract, legal obligation, consent, or similar legitimate interest for processing of the data.
      Some frameworks (such as GDPR) are enumerating the available processing bases.
  example:
  seeAlso: [ 'personal-data-protection', 'gdpr' ]

- id: personal-data-protection
  term: Personal Data Protection
  alternativeTerms: [ 'Data Protection', 'DP' ]
  description: >
      Personal data protection is a field dealing with protection of personal information, rules for their processing, storage and erasure.
      It is closely related to privacy, as one of the main goals of personal data protection is to limit exposure of personal data, thus minimizing potential for their abuse.
  example:
  seeAlso: [ 'gdpr' ]

- id: pdp
  term: Policy Decision Point
  acronym: 'PDP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to interpret policy and make decisions.
      The "policy" usually refers to access control and/or authorization policy.
      Policy decision point (PDP) can be part of applications, or they may be provided by dedicated infrastructure components (authorization services).
      PDP interprets the policy and make a decision, which is usually allow/deny decision.
      PDP does not enforce the decision, it relies on policy enforcement point (PEP) to enforce it.
      PDP does not define or manage the policy either, it depends on policy management point (PMP) to set the policy.
  example:
  seeAlso: [ 'authorization', 'access-control', 'authorization-service', 'pep', 'pmp' ]

- id: pmp
  term: Policy Management Point
  acronym: 'PMP'
  alternativeTerms:
  description: >
      Functional component with a responsibility to specify, manage and maintain the policy.
      The "policy" usually refers to access control and/or authorization policy.
      Policy management point (PMP) can be part of applications, or they may be provided by dedicated infrastructure components (identity management and governance components).
      PMP specifies the policy, usually as a result of interaction with an administrator by the means user interface.
      PMP does not make policy decisions or enforce them, that is a responsibility of policy decision point (PMP) and policy enforcement point (PEP) respectively.
  example:
  seeAlso: [ 'authorization', 'access-control', 'pep', 'pdp', 'iga' ]

- id: policy-management
  term: Policy Management
  alternativeTerms: [ 'Management of Authorization Policies', 'Policy and Role Management' ]
  description: >
      Set of operations defining the authorization roles or policies, or assigning roles to the particular users.
      This is often manual or semi-manual operation performed in identity management system or identity data store.
      Policy management is implementing the functionality of Policy Management Point (PMP).

      This term is often confused with authorization itself.
      However, policy management aims at definition of the policy, while authorization is interpreting the policy.
  example:
  seeAlso: [ 'authorization' ]
  readMore: /iam/iga/policy-and-role-management/

- id: polystring
  term: Polystring
  alternativeTerms:
  description: >
      A built-in data type for polymorphic string maintaining extra values in addition to its original value.
      The extra values are derived from the original value automatically using a normalization code.
      PolyString supports national characters in strings.
      It contains both the original value (with national characters) and normalized value (without national characters).
      This can be used for transliteration of national characters in usernames.
      All the values are stored in the repository, therefore they can be used to look for the object.
      Search ignoring the difference in diacritics or search by transliterated value can be used even if the repository itself does not support such feature explicitly.
  example: >
      Organization has an employee called Ján Omáčka. Polystring derives extra values from the original one using normalization code.
      The original national characters “á” and “č” have their normalised equivalents “a” and “c”.
      His username with national characters is not a problem, as polystring deprecates the need to use custom conversion routines and therefore it brings some consistency into the integration code.
  seeAlso:

- id: product-architecture
  term: Product Architecture
  alternativeTerms:
  description: >
    Concept, design and description of the products part which are assigned into subsystems.
    It is also way how these subsystems interact with each other.
  example:
  seeAlso:

- id: rbac
  term: Role-Base Access Control
  alternativeTerms: "RBAC"
  description: >
      A mechanism for managing of user access to information systems based on a concept of roles.
      Role-Based Access Control (RBAC) is using roles to group privileges.
      Roles usually represent meaningful entities, such as job positions, organizational affiliations or similar business concepts.
      One of the basic assumptions of RBAC is that management of roles is much easier as management of individual entitlements.

      A form of RBAC is standardized in a series of NIST standards (INCITS 359-2012).

      RBAC is mostly concerned with using the roles to control user access to the system and other information assets.
      Role definitions are usually maintained using a somehow separate "Role Management" mechanisms.
  example:
  seeAlso: [ "role", "entitlement", "role-management", "access-control" ]

- id: repository
  term: Repository
  alternativeTerms: [ "MidPoint repository" ]
  description: MidPoint internal database. It is used to store all internal midPoint data and vast majority of midPoint configuration.
  example:
  seeAlso:

- id: resource
  term: Resource
  alternativeTerms: [ "Information Resource", "Data Resource" ]
  description: >
      In generic terms, a Resource is any information asset, system or a service that can be meaningfully used to obtain an information, or to initiate an action.
      Web resources are often used to access information across World Wide Web, e.g. in a form of RESTful interfaces.
      In IAM field, a Resource (Identity Resource) is usually an network-accessible asset capable of managing identity information.
      In midPoint parlance, a Resource is a system that is either identity data source or provisioning target.
  example:
  seeAlso: [ "identity-resource" ]

- id: rest
  term: REST
  alternativeTerms: Representational State Transfer
  description: >
      Architectural style that describes fundamental principles of World Wide Web (WWW).
      REST architectural style was used to develop HTTP protocol, fundamental building block of WWW.
      REST specifies a concept of resource (web resource), identified by Unified Resource Locator (URL), access by unified interface.
      Although REST is designed for hypertext applications, some of the REST principles are used for general-purpose programming interfaces, known as "RESTful" services or APIs.
  example:
  seeAlso: [ 'restful-service', 'api', 'resource' ]

- id: restful-service
  term: RESTful Service
  alternativeTerms: [ 'REST Service', 'REST API' ]
  description: >
      Usually a general-purpose programming interface (API) or network service, exposed by one application to be used by another application.
      RESTful services are based on operations of HTTP protocols such as GET, PUT and POST.
      RESTful services are using Unifier Resource Locators (URLs) as addressing scheme, and also for the purposes of conveying some parameters.
      Despite the name, RESTful services actually do not strictly follow principles of REST architectural style.
      REST architectural style is designed for use in hypertext applications, while most RESTful services are procedural in nature.
      Therefore most RESTful services adapt and bind the REST principles for their purposes.
      Despite such deformations, RESTful services provide a very popular method for application-to-application interaction over the Internet.
  example:
  seeAlso: [ 'rest', 'api' ]

- id: role
  term: Role
  alternativeTerms:
  description: >
      Abstract concept that usually groups entitlements (privileges, access rights) in a single object.
      The purpose of grouping entitlements in roles is to make access control policies manageable, usually using Role-Based Access Control (RBAC) principles.
  example:
  seeAlso: [ "entitlement", "rbac", "role-management" ]

- id: role-management
  term: Role Management
  alternativeTerms: [ "Role Modeling" ]
  description: >
      A process of managing role definitions.
      It usually includes creating role definitions, maintenance of role definitions, adapting to changed environment and decommissioning role definitions.
      Role management is concerned with role definitions only, in contrast with Role-Based Access Control (RBAC), which is mostly concerned in using the definitions to control the access.
  example:
  seeAlso: [ "role", "rbac" ]

- id: sso
  term: Single Sign-On
  acronym: "SSO"
  alternativeTerms: [ "Single Log-On" ]
  description: >
    Single sign-on (SSO) is an authentication process based on user logging into multiple systems with single username and password.
    It is used for systems that require authentication for each application while using the same credentials.
    SSO works on central service from where the user gains access to different applications without logging in again.
  example: >
    Tom has a Google account which he has logged in to and receives a Google Accounts-generated cookie.
    He wishes to enter Google Drive.
    After that, he is redirected to his Google account which sees that Tom already has an authentication-related cookie, so he is redirected to Google Drive.
  seeAlso:

- id: user
  term: User
  alternativeTerms: [ "MidPoint User" ]
  description: >
    Generally speaking, a person that is using a computing system.
    In midPoint terminology, a user means a data structure in midPoint that describes a person.
    Similar data structure in source/target system (identity resource) is called an "account".
  example:
  seeAlso: account


- id: target-system
  term: Target System
  alternativeTerms:
  description: >
      In IAM field, it is any system in which identity management (IDM) system is managing identity data.
      IDM system is usually using identity connectors to manage data in target systems.

      Some target systems can also be (partial) identity data sources, IDM system both managing and reading the data.
  example:
  seeAlso: [ "identity-management-system", "identity-connector", "identity-data-source" ]
