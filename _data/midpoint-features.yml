# TODO: identity-lifecycle-management and other "official" IGA features
# TODO: assignment-metadata, self-service-gui
# TODO: relative-changes, credential-management-password, Script Expression Functions
# TODO: compliance reports
# TODO: where to put these? tolerant attributes, matching rules
#
# Glossary: synchronization situation, focus, projection

- id: access-certification
  title: Access certification
  alias: [ 'Access review', 'Re-certification', 'Access re-certification', 'Attestation' ]
  description: >
      Access certification is a review process aimed at reduction of unnecessary access in the system.
      It works by requesting certification of an access, a process where appropriate reviewers have to certify that access provided to users is still needed.
      Certifications are often carried out in a form of certification campaigns, certifying access of many users at once.
      Alternatively, small micro-certifications can be triggered, certifying access of one particular user.
  doc:
      config: /midpoint/reference/support-4.8/roles-policies/certification/
  since:

- id: access-request-process
  title: Access request process
  alias: [ 'Access request' ]
  description: >
      Access request process is a mechanism for users to request ad-hoc access to applications.
      The process usually starts with users selecting roles from role catalog into their "shopping cart", submitting the request when appropriate roles are selected.
      Based on policy applied to the roles, midPoint usually starts an approval process, routing each role request to appropriate approvers.
      Once the request is approved, the roles are assigned and the access is automatically granted.
  related: [ 'shopping-cart', 'approval-process' ]
  since:

- id: actions
  title: Actions
  alias: [ 'Bulk actions', 'Scripted actions', 'MidPoint Scripting' ]
  description: >
      Automated actions that can process many objects in an automated way.
      E.g. actions can be used to activate (enable) many users at once, validate and clean up the data, or remove obsolete data.
  since:

- id: admin-gui
  title: Administration user interface
  alias: [ 'Admin GUI' ]
  description: >
      Administration user interface is a web-based application used to configure and manage midPoint.
      It is meant to be used by system administrators, identity engineers deploying and configuring midPoint, and also by delegated administrators, managing identities.
      The user interface has a customizable look and feel.
  since:

- id: applicable-policies
  title: Applicable policies
  alias: [ 'User-friendly policy selection' ]
  description: >
      MidPoint provides significant flexibility when it comes to policies and policy-related configuration.
      The mechanism of applicable policies is grouping policy statements into manageable units, created in a form of meta-roles.
      Meta-roles specifying applicable policies can be applied to roles (and other object types) by a simple selection in the user interface.
      E.g. applicable policy meta-roles can be defined for usual role approval scenarios, such as "approval by manager", "approval by application owner" and "approval by security office".
      Such meta-roles can be selected in user interface and easily applied when a new role is being created.
  related: [ 'meta-role' ]
  doc:
      config: /midpoint/reference/roles-policies/applicable-policies/
  since:

- id: approval-process
  title: Approval process
  alias: [ 'Approvals', 'Policy-based approvals' ]
  description: >
      Approval process is a natural part of access request process.
      Once a user submits access request, the request is subject to approval by appropriate approvers.
      In midPoint, approval process is dynamic and policy-driven.
      As each role may have its own approval settings and policies, the request may be subdivided to approval by numerous approvers in several approval levels.
      MidPoint dynamically determines the policy, summarizes approver decisions and applies them to the request.
      Approved roles are automatically assigned and applied.
      Approval process is a generic mechanism in midPoint, triggered by policy rules.
      Apart from access request process, approval process can be applied to other scenarios as well, such as approval of role modification.
  related: [ 'access-request-process', 'shopping-cart', 'policy-rule' ]
  doc:
      config: /midpoint/reference/cases/approval/
  since:

- id: archetype
  title: Archetype
  description: >
      Archetype specifies fine-grain object types, such as "Person", "Employee", "Student", "Business role", "Application" and so on.
      Archetypes are applied to basic midPoint object types (User, Role, Org, Service).
      In addition to giving objects a type, archetypes act as meta-roles, specifying policy and behavior common to all objects with that archetype.
  related: [ 'meta-role' ]
  since:

- id: assignment
  title: Assignment
  alias: [ 'Relationship' ]
  description: >
      Assignment represent direct relation between midPoint object.
      Its primary use is to assign roles to users, however it has much broader application.
      Assignments can be used to assign users to organizational units, assign owners to roles, associate application roles with applications and so on.
      Assignment is a rich data structure that can contain temporal constraints (validity from-to), parameters and even conditions.
  related: [ 'inducement', 'rbac', 'relation' ]
  since:

- id: attribute-caching
  title: Attribute caching
  alias: [ 'Passive attribute caching' ]
  status: experimental
  description: >
      Ability to store copy of account attribute values in midPoint repository.
      Attribute caching is reducing the need to access identity resources using a connector.
      It also collects the data in midPoint repository, enabling queries that would not be possible otherwise (e.g. combining attribute data, meta-data and governance information in a single query).
  experimentalSince:
  since: 4.9

- id: audit-trail
  title: Audit trail
  alias: [ 'Audit record', 'Auditing' ]
  description: >
      Audit trail is a record of all the activity of the system.
      MidPoint records all the operations into an audit trail, including change in identity objects, roles, policies and configuration changes.
      Audit trail is recorded in a form of externally accessing and documented database table.
      It can be used by external systems (e.g. SIEM systems) to analyze identity management and governance behavior.
  since:

- id: common-identity-model
  title: Common identity management data model
  alias: [ 'Core identity schema' ]
  description: >
      Common data model for various identity types, such as users, services, roles, organizations.
      Pre-defined common attributes for each identity type.
      Objects have the same basic structure, each object type specifies additional properties.
      All objects can be represented in several data formats (XML, JSON, YAML).
  related: [ 'archetype' ]
  since: 1.7

- id: correlation
  title: Correlation
  alias: [ 'Identity correlation', 'Smart correlation', 'Identity matching' ]
  description: >
      Correlation mechanism detects and decides which identities represent the same entity.
      The usual use of correlation is to find owners for newly-detected accounts.
      Correlation mechanism is querying midPoint repository, looking for candidate owners for an account.
      Identity are usually correlated based on matching values of specific attributes (e.g. personal number).
      Smart correlation can find candidate matches based on probabilistic or human-assisted matching.
  related: [ 'provisioning', 'synchronization' ]
  since: 1.7
  doc:
    config: /midpoint/reference/correlation/
  improved: [ '4.6' ]

- id: deputy
  title: Deputy
  description: >
      Deputy mechanism provides ability for ad-hoc delegation of privileges from one user to another.
      It is used mostly for short term delegation of privileges, e.g. delegation for the duration of vacation or time off.
  since:
  doc:
      config: /midpoint/reference/misc/deputy/

- id: entitlement
  title: Entitlement
  description: >
      Entitlement is a privilege associated to an account in identity resource.
      Whereas roles and assignments refer to access control policy specified in midPoint,
      entitlements and entitlement associations refer to access control objects in the identity resource.
      E.g. Active Directory groups and application privileges are considered to be entitlements.
      Entitlements are always specific to the identity resource (i.e. they are application-specific).
  related: [ 'provisioning', 'entitlement-association', 'rbac' ]
  doc:
      config: /midpoint/reference/resources/entitlements/
  since:

- id: entitlement-association
  title: Entitlement association
  alias: [ 'Association' ]
  description: >
      Entitlement association is relationship between entitlement and account.
      E.g. when an Active Directory account is a member of Active Directory group, midPoint detects that as an association between the account and the entitlement (group).
      Even though entitlements are specific to a particular identity resource, association is a generic mechanism that can be applied uniformly to all identity resources (when properly configured).
  related: [ 'provisioning' ]
  doc:
      config: /midpoint/reference/resources/entitlements/
  since:

- id: escalation
  title: Escalation
  description: >
      Escalation process provides automatic forwarding of a work item in case that the person responsible for the work item fails to acts in a specified time interval.
      Escalation mechanism is usually applied to approvals and certifications, escalating the work item to a manager of the person that failed to react.
  related: [ 'approval-process', 'access-certification' ]
  since:

- id: expression
  title: Expression
  description: >
      Expression is a generic mechanism to algorithmically create or transform a value.
      It is usually used in mappings, transforming values of common identity data model (e.g. user's full name) to native attributes used by identity resources (e.g. LDAP attribute 'cn').
  related: [ 'provisioning', 'mapping' ]
  doc:
    config: /midpoint/reference/expressions/expressions/
  since:

- id: expression-function-library
  title: Expression function library
  description: >
      Function libraries are dedicated midPoint objects that contain set of reusable functions.
      The functions can be used in other mappings and expressions in midPoint.
      Function libraries can be used to group frequently-used parts of the code, therefore simplifying midPoint configuration and maintenance.
  related: [ 'expression' ]
  doc:
      config: /midpoint/reference/expressions/function-libraries/
  since: 3.7

- id: expression-groovy
  title: Groovy scripting expression
  description: >
      Support for Groovy language in scripting expressions.
      Groovy is default expression language in midPoint.
  related: [ 'expression' ]
  doc:
      config: /midpoint/reference/expressions/expressions/script/groovy/
  since:

- id: expression-javascript
  title: JavaScript scripting expression
  description: >
      Support for JavaScript/ECMAScript language in scripting expressions.
  related: [ 'expression' ]
  doc:
      config: /midpoint/reference/expressions/expressions/script/javascript/
  since:

- id: expression-python
  title: Python scripting expression
  description: >
      Support for Python language in scripting expressions.
  related: [ 'expression' ]
  doc:
      config: /midpoint/reference/expressions/expressions/script/python/
  since:

- id: extensible-object-types
  title: Extensible object types
  description: >
      Object types defined in common identity data model (schema) are extensible with custom attributes.
  related: [ 'common-identity-model', 'archetype' ]
  since:

- id: generic-synchronization
  title: Generic synchronization
  description: >
      Generic synchronization is a generalization of the traditional account-user synchronization principle.
      MidPoint generic synchronization can synchronize any meaningful pair of objects, not just accounts and users.
      MidPoint can synchronize organizational units to Active Directory groups, applications to LDAP service accounts, or mobile device identities to inventory database records.
  related: [ 'provisioning', 'synchronization' ]
  doc:
      config: /midpoint/reference/synchronization/generic-synchronization/
  since:

- id: identity-merge
  title: Identity merge
  description: >
      MidPoint administration user interface has an ability to interactively merge two identities into one.
      This functionality is used for ex-post merge of identities, e.g. in case that the correlation did not work correctly and identity duplication is discovered later in the process.
  related: [ 'admin-gui' ]
  since:

- id: inducement
  title: Inducement
  alias: [ 'Indirect relationship' ]
  description: >
      Inducement is an indirect assignment.
      Unlike assignment which grants privileges directly, inducement works indirectly.
      It is used primarily to build role hierarchy in role-based access control (RBAC) structures.
      It can also be used to automatically grant privileges associated with organizational structure membership.
  related: [ 'assignment', 'rbac', 'relation' ]
  since:

- id: iteration
  title: Iteration
  alias: [ 'Iterative identifiers' ]
  description: >
      Iteration is mechanism to determine a unique value by iteratively attempting to assign unique identifier, re-trying on failure.
      E.g. it can be used to determine a unique username by trying values such as foobar, foobar2, foobar3, ...
  related: [ 'mapping', 'provisioning', 'object-template' ]
  doc:
      config: /midpoint/reference/concepts/iteration/
  since:

- id: live-synchronization
  title: Live synchronization
  alias: [ 'Identity reconciliation', 'Data reconciliation' ]
  description: >
      Live synchronization is an identity synchronization mechanism processing incremental changes in real time.
      It detects data changes in identity resource, processing them continuously as they occur.
      Live synchronization is quite fast and rather lightweight synchronization mechanism.
      However, it may be unreliable in some cases, failing to detect some changes.
      Therefore, it is almost always combined with reconciliation.
      Also, live synchronization is resource-specific, it is not supported by all the identity resources and connectors.
  related: [ 'provisioning', 'synchronization', 'mapping', 'expression', 'reconciliation' ]
  since:

- id: manual-resources
  title: Manual resources
  alias: [ 'Manual connectors' ]
  description: >
      Manual resources are identity resources that are not connected using an automated (on-line) connector.
      Such resources are modified by human administrators, based on instructions provided by midPoint.
  related: [ 'provisioning' ]
  since:

- id: mapping
  title: Mapping
  description: >
      Mapping is a mechanism that maps properties, transforming the value as needed.
      Mappings are used in provisioning scenarios, transforming values of common identity data model (e.g. user's full name) to native attributes used by identity resources (e.g. LDAP attribute 'cn').
  related: [ 'provisioning', 'expression' ]
  doc:
    config: /midpoint/reference/expressions/mappings/
  since:

- id: meta-role
  title: Meta-role
  description: >
      Meta-role is a role applied to other role.
      Meta-role is used to specify policy or behavior common to an entire class of roles.
      E.g. it can be used to specify common behaviour for all application roles linked to Active Directory groups.
  related: [ 'rbac', 'pdrbac' ]
  since:

- id: multi-tenancy
  title: Multi-tenancy
  alias: [ 'Partial multi-tenancy' ]
  description: >
      Ability to serve several (partially) isolated customers in a single midPoint instance.
  related:
  doc:
    config: /midpoint/reference/deployment/multitenancy/
  since:

- id: notifications
  title: Notifications
  description: >
      Ability to notify users about various events in the system.
      Mostly used to notify users about creation of new account.
  related:
  since:

- id: object-history
  title: Object history
  alias: [ 'Time machine' ]
  description: >
      As midPoint records all the operation in audit trail, such information can be used to reconstruct history of object modifications and their past state.
      MidPoint provides simplified user interface for accessing audit records concerning a particular objects, displaying its history.
      User interface can also be used to re-construct a past state of the object.
  related: [ 'audit-trail' ]
  since:

- id: object-lifecycle
  title: Object lifecycle
  description: >
      Every object in midPoint is in certain lifecycle state, specifying its state or maturity for use.
      Many objects start in "draft" state when being prepared, transitioning to "active" state for operation, ending their life in "archived" state.
      MidPoint provides pre-configured lifecycle model suitable for most situations.
  related: [ 'common-identity-model' ]
  doc:
    config: /midpoint/reference/concepts/object-lifecycle/
  since: 3.5

- id: object-template
  title: Object template
  description: >
      Template that specifies details and mappings that govern internal consistency of midPoint objects.
      E.g. object template can specify a mapping to compute user's full name from its components (first name, last name).
      Object template can be used for automatic assignment of roles.
  related: [ 'mapping', 'rbac' ]
  since:

- id: org
  title: Organizational structure
  description: >
      MidPoint supports various forms of organizational structures, including hierarchical tree-like structures and flat structures.
      Almost any organizational structure can be modeled in midPoint, as long as it can be expressed in a form of oriented acyclic graph.
      MidPoint supports many organization structures in parallel, where objects can belong to any number of organizational units in any number of structures.
      Organizational unit objects ("orgs") behave in a way similar to roles, allowing direct assignment of organizational unit privileges.
  related: [ 'assignment', 'rbac' ]
  doc:
      config: /midpoint/reference/org/
  since:

- id: parametric-role
  title: Parametric role
  description: >
      Parametric role is a role (in role-based access control sense) which is dynamic, its behavior is based on parameters.
      The parameters are usually specified in assignment, customizing role behavior specifically for every user that has the role assigned.
  related: [ 'rbac', 'assignment', 'pdrbac' ]
  since:

- id: pdrbac
  title: Policy-driven role-based access control
  acronym: PDRBAC
  description: >
      Dynamic roles-based access control (RBAC) mechanism, driven by policy statements and expressions.
  related: [ 'rbac', 'expression', 'mapping', 'object-template' ]
  since:

- id: persona
  title: Persona
  description: >
      Persona is a virtual identity - alternative representation of physical person.
      Personas are associated with their primary identities, sharing selected data items.
  doc:
      config: /midpoint/reference/misc/persona/
  since: 3.6

- id: policy-rule
  title: Police rule
  description: >
      Policy rules provide a generic mechanism to set up policies and policy constraint in the system.
      E.g. a policy rule may specify that all departments must have exactly one manager, or that each business role must have at least one owner.
      Many midPoint features are implemented by policy rules, most notably approval policies, segregation of duties and triggered micro-certifications.
  doc:
      config: /midpoint/reference/support-4.8/roles-policies/policy-rules/
  since: 3.6

- id: polystring
  title: Polystring
  description: >
      Polystring is a string-based data type that can store a string value in several forms.
      It is used primarily in international environment.
      It can be used to store string values in normalized form, e.g. transliterating national characters to plain ASCII characters).
      It can also be used to store several versions of the string, localized to various national representation.
  related: [ 'common-identity-model' ]
  since:

- id: projection-link
  title: Projection link
  alias: [ 'Account link', 'Account linking' ]
  description: >
      The term "projection" describes an object in identity resource, which is an representation of an identity.
      Projection is usually an user account in application.
      Projections are linked to the identity which they represent, e.g. user account is linked to the user that is an owner of the account.
      MidPoint is automatically establishing the links (e.g. using correlation) and maintaining them, keeping track of projection owners at all times.
  related: [ 'common-identity-model', 'correlation', 'provisioning' ]
  since: 1.7

- id: projection-policy
  title: Projection policy
  alias: [ 'Assignment Policy Enforcement' ]
  description: >
      MidPoint is usually fully enforcing projection consistency, which means that is a project should not exist (there is no assignment for it), the projection is deprovisioned (deleted or deactivated).
      E.g. if there is no role specifying that a particular account should exist, then such account is deleted.
      This is the usual approach for target resources.
      However, it does not work well for source resources, where appropriate assignment or role does not exist.
      In such cases, projection policy setting can be used to adjust the enforcement of projection consistency.
  related: [ 'projection-link', 'provisioning' ]
  doc:
      config: /midpoint/reference/synchronization/projection-policy/
  since:

- id: provisioning
  title: Provisioning
  alias: [ 'Fulfillment', 'Identity provisioning', 'Deprovisioning' ]
  description: >
      Provisioning is a basic feature of identity management platform.
      It makes sure user accounts are properly created on identity resources, that their attributes are set to correct values, that the account has correct group membership and so on.
      In midPoint, provisioning also takes care of inbound processing, dealing with data feeds coming from source systems.
  related:
  since: 1.7

- id: provisioning-delayed-propagation
  title: Provisioning delayed propagation
  description: >
      Propagation of provisioning changes to identity resources may be delayed, optionally combining several pending changes into a single change.
      This feature helps to reduce the number of operations on identity resources, reducing load on target resources and making resource logs more readable.
      It is a crucial feature for manual resources, reducing the number of operations that human administrators have to carry out.
  related: [ 'provisioning', 'manual-resources' ]
  since:

- id: provisioning-consistency
  title: Provisioning consistency
  alias: [ 'Consistency mechanism', 'Provisioning robustness', 'Provisioning re-tries', 'Self-healing data' ]
  description: >
      Provisioning mechanism in midPoint is robust, making sure that data in identity resources (e.g. accounts) are as consistent as possible.
      E.g. midPoint can deal with systems that are off-line or inaccessible.
      Operations that cannot be completed immediately are persistently stored and re-tried later.
      MidPoint can opportunistically detect that a legal account was deleted, re-creating the account with appropriate attributes.
      MidPoint can detect that a conflicting account exists when attempting to create a new account, processing the existing account before proceeding.
      Overall, midPoint will try to make the account data as correct as possible, automatically correcting any errors that it discovers.
  related: [ 'provisioning' ]
  since:
  doc:
    config: /midpoint/reference/synchronization/consistency/

- id: provisioning-dependencies
  title: Provisioning dependencies
  description: >
      Provisioning dependencies deal with accounts and other object that depend on each other.
      E.g. in case that operating system account must be created before database administration account is created.
      MidPoint takes care that the accounts are created and deleted in the correct order.
  related: [ 'provisioning' ]
  since:

- id: provisioning-scripts
  title: Provisioning scripts
  description: >
      Scripts executed before and/or after specific provisioning operation.
      E.g. scripts that create home directory or mailbox after account is created, script that archives home directory after an account is deleted.
  related: [ 'provisioning' ]
  since:

- id: rbac
  title: Role-based access control
  acronym: RBAC
  description: >
      Access control and provisioning based on concept of roles.
      MidPoint roles can form a hierarchy by using inducement relations.
  related:
  since:

- id: reconciliation
  title: Reconciliation
  alias: [ 'Identity reconciliation', 'Data reconciliation' ]
  description: >
      Reconciliation is an identity synchronization mechanism that compares existing values of account attributes with values stored in indentity repository and/or computed by a policy.
      As all synchronization mechanisms, reconciliation has an ability to correct the values.
      As reconciliation compares all the accounts one-by-one, it is rather heavy-weight, yet very reliable mechanism.
  related: [ 'provisioning', 'synchronization', 'mapping', 'expression', 'live-synchronization' ]
  since:

- id: resource-wizard
  title: Resource wizard
  description: >
      Resource wizard is a part of midPoint administration user interface, dedicated to configuration of identity resources.
      Resource wizard is used to easily connect source and target resources in an interactive and user friendly manner.
  related: [ 'admin-gui', 'provisioning', 'synchronization', 'mapping', 'expression', 'live-synchronization' ]
  since:

- id: relation
  title: relation
  alias: [ 'Relationship type' ]
  description: >
      Relation specifies type of relationship between two objects.
      E.g. it distinguishes whether a user is an member or an owner of a role, whether user is a member or manager of organizational unit, whether user is a reader, writer or administrator of a service and so on.
      Relations are primarily used as a parameter in assignments.
  related: [ 'assignment', 'inducement' ]
  since:

- id: representation-xml
  title: Object representation in XML
  description: >
      MidPoint configuration and data objects can be represented in XML form.
  related: [ 'common-identity-model' ]
  since: 1.7

- id: representation-json
  title: Object representation in JSON
  description: >
      MidPoint configuration and data objects can be represented in JSON form.
  related: [ 'common-identity-model' ]
  since:

- id: representation-yaml
  title: Object representation in YAML
  description: >
      MidPoint configuration and data objects can be represented in YAML form.
  related: [ 'common-identity-model' ]
  since:

- id: role-autoassign-expressions
  title: Role autoassign expressions
  description: >
      Expressions specified in roles, determining when a role should be automatically assigned to a user.
      It is a part of policy-diven RBAC mechanism.
  related: [ 'pdrbac' ]
  doc:
      config: /midpoint/reference/roles-policies/role-autoassignment/
  since:

- id: role-catalog
  title: Role catalog
  description: >
      Role catalog is an organization of roles into categories.
      Its primary use is to present the roles to user using user-friendly and logical organization similar to on-line shopping experience.
      Technically, midPoint role catalog is a form of organizational structure, organizing roles instead of users.
      Being an organizational structure, role catalog may specify common behavior or policy for roles organized in the catalog.
  related: [ 'rbac', 'access-request-process', 'shopping-cart', 'org' ]
  since:

- id: role-wizard
  title: Role wizard
  description: >
      Role wizard is a part of midPoint administration user interface, dedicated to creation of RBAC roles.
      Role wizard is usually used to easily define new application or business role in an interactive and user friendly manner.
  related: [ 'admin-gui', 'rbac' ]
  since:

- id: schema-aware
  title: Schema-aware system
  description: >
      MidPoint is completely schema-aware, everything that midPoint does is governed by system schema.
      E.g. custom properties defined in the schema are automatically displayed in user interface, used by the wizards and so on.
  related: [ 'common-identity-model', 'extensible-object-types' ]
  since: 1.7

- id: schema-activation
  title: Activation schema
  description: >
      MidPoint provides off-the-shelf schema for object activation, specifying whether object is enabled (active) or disabled.
      This also includes ability to specify time intervals (from, to) when the object is active (validity time constraints).
  related: [ 'common-identity-model' ]
  since:

- id: self-registration
  title: Self-registration
  alias: [ 'Self-service registration' ]
  description: >
      Self-registration is an ability for a user to register a new account using self-service interface.
      New account has to be validated before it becomes active, e.g. by using magic link delivered by e-mail.
      Self-registration is disabled by default, it has to be explicitly enabled and properly configured.
  related: [ 'self-service-gui' ]
  doc:
      config: /midpoint/reference/misc/self-registration/
  since:

- id: self-service-password-reset
  title: Self-service password reset
  alias: [ 'Password restore' ]
  description: >
      Self-service user interface provides a mechanism enabling users to reset their own password, after a successful alternative authentication.
  related: [ 'self-service-gui' ]
  doc:
      config: /midpoint/reference/security/credentials/password-reset/
  since:

- id: self-service-gui
  title: Self-service user interface
  alias: [ 'End-user GUI' ]
  description: >
      Self-service user interface is a web-based application aimed at individual users.
      It provides self-service functionality, such as review and modification of user's own profile information, password management, submission of access request and review of submitted requests.
      Technically, it is a part of administration user interface, which is dedicated to user-centric functionality.
      The user interface has a customizable look and feel.
  related: [ 'admin-gui', 'access-request', 'shipping-cart', 'role-catalog' ]
  since:

- id: semi-manual-resources
  title: Semi-manual resources
  alias: [ 'Semi-manual connectors' ]
  description: >
      Semi-manual resources are identity resources that are only partially connected using an automated (on-line) connector.
      The usual scenario allows for automated read from the resource, usually by means of CSV export from the resource.
      However, write operations (add, modify, delete) are executed manually by human administrators, based on instructions provided by midPoint.
  related: [ 'provisioning', 'manual-resources' ]
  since:

- id: sequence
  title: Sequence
  alias: [ 'Sequential identifiers' ]
  description: >
      Sequences are persistent objects in midPoint repository that efficiently maintain sequential counters.
      Sequence can be used to assign unique identifiers to large number of midPoint objects in a very efficient and reliable fashion.
  related: [ 'mapping' ]
  doc:
      config: /midpoint/reference/expressions/sequences/
  since:

- id: sod
  title: Segregation of duties
  acronym: SoD
  description: >
      Segregation of duties (SoD) is a principle prohibiting conflicting responsibilities to be assigned to a single person.
      For example SoD may prevent a single user to hold executive as well as controlling duties.
      MidPoint SoD mechanism is implemented by using policy rules that exclude conflicting roles to be assigned to one user at the same time.
  related: [ 'rbac', 'policy-rule' ]
  since:

- id: shopping-cart
  title: Shopping cart
  description: >
      Shopping cart is a mechanism allowing users to browse and collect roles at the beginning of access request process.
      The mechanism is designed to remind of on-line shopping experience, allowing users to start access request process in an intuitive way.
  related: [ 'access-request-process', 'role-catalog' ]
  since:

- id: synchronization
  title: Synchronization
  alias: [ 'Identity synchronization', 'Data synchronization' ]
  description: >
      Ability to keep identity data synchronized across many systems.
      Synchronization is a complex feature, consisting of several mechanisms and tasks, with significant variability and customizability.
      It is crucial part of identity management solution.
  related: [ 'provisioning', 'mapping', 'expression', 'reconciliation', 'live-synchronization' ]
  doc:
    config: /midpoint/reference/synchronization/
  since: 1.7

- id: synchronization-reaction
  title: Synchronization reaction
  description: >
      At the beginning of synchronization process, midPoint determines synchronization situation for every account.
      Based on the situation, midPoint can launch synchronization reactions.
      E.g. midPoint can react to new account (situation=unmatched) by creating a new user identity (reaction=createFocus).
      Situation reactions can be set up specifically for every resource and object type, customizing the synchronization process.
  related: [ 'synchronization' ]
  doc:
      config: /midpoint/reference/synchronization/
  since: 1.7
